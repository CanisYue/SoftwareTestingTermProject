Unexpected problem occured during version sanity check
Reported exception:
java.lang.AbstractMethodError: org.apache.logging.slf4j.SLF4JServiceProvider.getRequestedApiVersion()Ljava/lang/String;
	at org.slf4j.LoggerFactory.versionSanityCheck(LoggerFactory.java:297)
	at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:141)
	at org.slf4j.LoggerFactory.getProvider(LoggerFactory.java:421)
	at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:407)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:356)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:382)
	at edu.umd.cs.findbugs.CheckBcel.<clinit>(CheckBcel.java:40)
	at edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:99)
	at edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
M D Eq: jakarta.servlet.jsp.el.ImplicitObjectELResolver$ScopeMap$ScopeEntry.equals(Object) is unusual  At ImplicitObjectELResolver.java:[line 573]
M V EI2: new org.apache.tomcat.util.http.ConcurrentDateFormat(String, Locale, TimeZone) may expose internal representation by storing an externally mutable object into ConcurrentDateFormat.timezone  At ConcurrentDateFormat.java:[line 42]
M V EI2: org.apache.commons.daemon.support.DaemonLoader$Context.setArguments(String[]) may expose internal representation by storing an externally mutable object into DaemonLoader$Context.args  At DaemonLoader.java:[line 414]
M V EI: org.apache.commons.daemon.support.DaemonLoader$Context.getArguments() may expose internal representation by returning DaemonLoader$Context.args  At DaemonLoader.java:[line 409]
M B CN: Class jakarta.servlet.jsp.tagext.TagData implements Cloneable but does not define or use clone method  At TagData.java:[lines 38-146]
M V EI2: new jakarta.servlet.jsp.tagext.TagData(Hashtable) may expose internal representation by storing an externally mutable object into TagData.attributes  At TagData.java:[line 79]
M V EI: org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Providers.getProviders() may expose internal representation by returning PersistentProviderRegistrations$Providers.providers  At PersistentProviderRegistrations.java:[line 192]
M V EI2: jakarta.security.auth.message.callback.TrustStoreCallback.setTrustStore(KeyStore) may expose internal representation by storing an externally mutable object into TrustStoreCallback.trustStore  At TrustStoreCallback.java:[line 32]
M V EI: jakarta.security.auth.message.callback.TrustStoreCallback.getTrustStore() may expose internal representation by returning TrustStoreCallback.trustStore  At TrustStoreCallback.java:[line 36]
H I Dm: Found reliance on default encoding in org.apache.tomcat.util.buf.UriUtil.<static initializer for UriUtil>(): String.getBytes()  At UriUtil.java:[line 51]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl(BaseAnnotationProcessorManager, BatchProcessingEnvImpl) may expose internal representation by storing an externally mutable object into BatchFilerImpl._env  At BatchFilerImpl.java:[line 53]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl(BaseAnnotationProcessorManager, BatchProcessingEnvImpl) may expose internal representation by storing an externally mutable object into BatchFilerImpl._dispatchManager  At BatchFilerImpl.java:[line 51]
M B Nm: The class name org.apache.catalina.Executor shadows the simple name of implemented interface java.util.concurrent.Executor  In Executor.java
M V EI2: new org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper(AbstractArchiveResource, JarEntry, InputStream) may expose internal representation by storing an externally mutable object into AbstractArchiveResource$JarInputStreamWrapper.this$0  At AbstractArchiveResource.java:[line 248]
M V EI2: new org.apache.catalina.webresources.AbstractArchiveResource$JarInputStreamWrapper(AbstractArchiveResource, JarEntry, InputStream) may expose internal representation by storing an externally mutable object into AbstractArchiveResource$JarInputStreamWrapper.jarEntry  At AbstractArchiveResource.java:[line 249]
M V EI: org.apache.tomcat.util.descriptor.tld.ValidatorXml.getInitParams() may expose internal representation by returning ValidatorXml.initParams  At ValidatorXml.java:[line 42]
M V EI2: new org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer(ISourceType[], AccessRestriction, String, char[]) may expose internal representation by storing an externally mutable object into NameEnvironmentAnswer.moduleName  At NameEnvironmentAnswer.java:[line 56]
M V EI2: new org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer(ICompilationUnit, AccessRestriction, char[]) may expose internal representation by storing an externally mutable object into NameEnvironmentAnswer.moduleName  At NameEnvironmentAnswer.java:[line 49]
M V EI2: new org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer(IBinaryType, AccessRestriction, char[]) may expose internal representation by storing an externally mutable object into NameEnvironmentAnswer.moduleName  At NameEnvironmentAnswer.java:[line 41]
M V EI2: new org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer(ReferenceBinding, ModuleBinding) may expose internal representation by storing an externally mutable object into NameEnvironmentAnswer.binding  At NameEnvironmentAnswer.java:[line 60]
M V EI2: new org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer(ISourceType[], AccessRestriction, String, char[]) may expose internal representation by storing an externally mutable object into NameEnvironmentAnswer.sourceTypes  At NameEnvironmentAnswer.java:[line 53]
M V EI: org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getSourceTypes() may expose internal representation by returning NameEnvironmentAnswer.sourceTypes  At NameEnvironmentAnswer.java:[line 129]
M V EI: org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.getResolvedBinding() may expose internal representation by returning NameEnvironmentAnswer.binding  At NameEnvironmentAnswer.java:[line 136]
M V EI: org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer.moduleName() may expose internal representation by returning NameEnvironmentAnswer.moduleName  At NameEnvironmentAnswer.java:[line 177]
M V EI2: new org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator(ApplicationHttpRequest) may expose internal representation by storing an externally mutable object into ApplicationHttpRequest$AttributeNamesEnumerator.this$0  At ApplicationHttpRequest.java:[line 944]
M M JLM: Synchronization performed on java.util.concurrent.CopyOnWriteArraySet in org.apache.coyote.AbstractProcessorLight.addDispatch(DispatchType)  At AbstractProcessorLight.java:[line 116]
M M JLM: Synchronization performed on java.util.concurrent.CopyOnWriteArraySet in org.apache.coyote.AbstractProcessorLight.getIteratorAndClearDispatches()  At AbstractProcessorLight.java:[line 127]
M M JLM: Synchronization performed on java.util.concurrent.CopyOnWriteArraySet in org.apache.coyote.AbstractProcessorLight.clearDispatches()  At AbstractProcessorLight.java:[line 142]
H C USELESS_STRING: Invocation of toString on BasicModule$Service.with in org.eclipse.jdt.internal.compiler.batch.BasicModule$Service.toString()  At BasicModule.java:[line 58]
M V EI2: new org.apache.catalina.tribes.group.RpcChannel$RpcCollectorKey(byte[]) may expose internal representation by storing an externally mutable object into RpcChannel$RpcCollectorKey.id  At RpcChannel.java:[line 295]
M V EI: jakarta.websocket.SendResult.getException() may expose internal representation by returning SendResult.exception  At SendResult.java:[line 33]
M V EI2: new jakarta.websocket.SendResult(Throwable) may expose internal representation by storing an externally mutable object into SendResult.exception  At SendResult.java:[line 24]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfLong.toString() concatenates strings using + in a loop  At HashtableOfLong.java:[line 102]
M V EI: org.apache.tomcat.jdbc.pool.JdbcInterceptor.getProperties() may expose internal representation by returning JdbcInterceptor.properties  At JdbcInterceptor.java:[line 185]
M V EI: org.apache.tomcat.jdbc.pool.JdbcInterceptor.getNext() may expose internal representation by returning JdbcInterceptor.next  At JdbcInterceptor.java:[line 120]
M V EI2: org.apache.tomcat.jdbc.pool.JdbcInterceptor.setNext(JdbcInterceptor) may expose internal representation by storing an externally mutable object into JdbcInterceptor.next  At JdbcInterceptor.java:[line 128]
M V EI2: org.apache.tomcat.jdbc.pool.JdbcInterceptor.setProperties(Map) may expose internal representation by storing an externally mutable object into JdbcInterceptor.properties  At JdbcInterceptor.java:[line 195]
H B ES: Comparison of String parameter using == or != in org.apache.tomcat.jdbc.pool.JdbcInterceptor.compare(String, String)  At JdbcInterceptor.java:[line 141]
M V EI2: org.apache.catalina.ant.BaseRedirectorHelperTask.addConfiguredRedirector(RedirectorElement) may expose internal representation by storing an externally mutable object into BaseRedirectorHelperTask.redirectorElement  At BaseRedirectorHelperTask.java:[line 227]
H I Dm: Found reliance on default encoding in org.apache.catalina.ant.BaseRedirectorHelperTask.openRedirector(): new java.io.PrintStream(OutputStream)  At BaseRedirectorHelperTask.java:[line 259]
M V EI2: new org.apache.catalina.authenticator.SpnegoAuthenticator$AuthenticateAction(Realm, GSSContext, boolean) may expose internal representation by storing an externally mutable object into SpnegoAuthenticator$AuthenticateAction.realm  At SpnegoAuthenticator.java:[line 340]
M V EI2: new org.apache.catalina.authenticator.SpnegoAuthenticator$AuthenticateAction(Realm, GSSContext, boolean) may expose internal representation by storing an externally mutable object into SpnegoAuthenticator$AuthenticateAction.gssContext  At SpnegoAuthenticator.java:[line 341]
H C SA: Self assignment of field CRC.globalCrc in org.apache.tomcat.jakartaee.commons.compress.compressors.bzip2.CRC.updateCRC(int, int)  At CRC.java:[line 130]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, ServletRequest, ServletResponse) may expose internal representation by storing an externally mutable object into AsyncEvent.response  At AsyncEvent.java:[line 53]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, Throwable) may expose internal representation by storing an externally mutable object into AsyncEvent.context  At AsyncEvent.java:[line 64]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, ServletRequest, ServletResponse, Throwable) may expose internal representation by storing an externally mutable object into AsyncEvent.context  At AsyncEvent.java:[line 80]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, ServletRequest, ServletResponse, Throwable) may expose internal representation by storing an externally mutable object into AsyncEvent.response  At AsyncEvent.java:[line 82]
M V EI: jakarta.servlet.AsyncEvent.getSuppliedRequest() may expose internal representation by returning AsyncEvent.request  At AsyncEvent.java:[line 103]
M V EI: jakarta.servlet.AsyncEvent.getThrowable() may expose internal representation by returning AsyncEvent.throwable  At AsyncEvent.java:[line 123]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext) may expose internal representation by storing an externally mutable object into AsyncEvent.context  At AsyncEvent.java:[line 36]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, Throwable) may expose internal representation by storing an externally mutable object into AsyncEvent.throwable  At AsyncEvent.java:[line 65]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, ServletRequest, ServletResponse, Throwable) may expose internal representation by storing an externally mutable object into AsyncEvent.throwable  At AsyncEvent.java:[line 83]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, ServletRequest, ServletResponse) may expose internal representation by storing an externally mutable object into AsyncEvent.context  At AsyncEvent.java:[line 51]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, ServletRequest, ServletResponse, Throwable) may expose internal representation by storing an externally mutable object into AsyncEvent.request  At AsyncEvent.java:[line 81]
M V EI: jakarta.servlet.AsyncEvent.getSuppliedResponse() may expose internal representation by returning AsyncEvent.response  At AsyncEvent.java:[line 113]
M V EI: jakarta.servlet.AsyncEvent.getAsyncContext() may expose internal representation by returning AsyncEvent.context  At AsyncEvent.java:[line 93]
M V EI2: new jakarta.servlet.AsyncEvent(AsyncContext, ServletRequest, ServletResponse) may expose internal representation by storing an externally mutable object into AsyncEvent.request  At AsyncEvent.java:[line 52]
M V EI: jakarta.security.auth.message.callback.PrivateKeyCallback$DigestRequest.getDigest() may expose internal representation by returning PrivateKeyCallback$DigestRequest.digest  At PrivateKeyCallback.java:[line 85]
M V EI2: new jakarta.security.auth.message.callback.PrivateKeyCallback$DigestRequest(byte[], String) may expose internal representation by storing an externally mutable object into PrivateKeyCallback$DigestRequest.digest  At PrivateKeyCallback.java:[line 80]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ParameterNonNullDefaultProvider$MixedProvider(boolean[]) may expose internal representation by storing an externally mutable object into ParameterNonNullDefaultProvider$MixedProvider.result  At ParameterNonNullDefaultProvider.java:[line 47]
M V EI: org.apache.coyote.http11.upgrade.UpgradeInfo.getGlobalProcessor() may expose internal representation by returning UpgradeInfo.groupInfo  At UpgradeInfo.java:[line 37]
M V EI2: org.apache.coyote.http11.upgrade.UpgradeInfo.setGroupInfo(UpgradeGroupInfo) may expose internal representation by storing an externally mutable object into UpgradeInfo.groupInfo  At UpgradeInfo.java:[line 48]
M V EI2: jakarta.security.auth.message.callback.PrivateKeyCallback.setKey(PrivateKey, Certificate[]) may expose internal representation by storing an externally mutable object into PrivateKeyCallback.chain  At PrivateKeyCallback.java:[line 48]
M V EI: jakarta.security.auth.message.callback.PrivateKeyCallback.getChain() may expose internal representation by returning PrivateKeyCallback.chain  At PrivateKeyCallback.java:[line 56]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations doesn't override MethodInfo.equals(Object)  At AnnotationMethodInfoWithAnnotations.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations.getAnnotations() may expose internal representation by returning AnnotationMethodInfoWithAnnotations.annotations  At AnnotationMethodInfoWithAnnotations.java:[line 27]
M V EI2: new org.apache.tomcat.util.http.fileupload.impl.IOFileUploadException(String, IOException) may expose internal representation by storing an externally mutable object into IOFileUploadException.cause  At IOFileUploadException.java:[line 48]
M V EI: org.apache.tomcat.util.http.fileupload.impl.IOFileUploadException.getCause() may expose internal representation by returning IOFileUploadException.cause  At IOFileUploadException.java:[line 59]
H B CN: org.eclipse.jdt.internal.compiler.util.HashtableOfInteger defines clone() but doesn't implement Cloneable  At HashtableOfInteger.java:[lines 54-65]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfInteger.toString() concatenates strings using + in a loop  At HashtableOfInteger.java:[line 190]
M D NP: Possible null pointer dereference in org.eclipse.jdt.internal.compiler.util.JrtFileSystem$1.visitFile(Path, BasicFileAttributes) due to return value of called method  Dereferenced at JRTUtil.java:[line 566]
M V EI2: new org.apache.tomcat.jdbc.pool.FairBlockingQueue$ExchangeCountDownLatch(FairBlockingQueue, int) may expose internal representation by storing an externally mutable object into FairBlockingQueue$ExchangeCountDownLatch.this$0  At FairBlockingQueue.java:[line 507]
M V EI: org.apache.catalina.ant.jmx.JMXAccessorCreateTask.getArgs() may expose internal representation by returning JMXAccessorCreateTask.args  At JMXAccessorCreateTask.java:[line 105]
M V EI2: org.apache.catalina.ant.jmx.JMXAccessorCreateTask.setArgs(List) may expose internal representation by storing an externally mutable object into JMXAccessorCreateTask.args  At JMXAccessorCreateTask.java:[line 111]
M V EI: org.apache.catalina.realm.GenericPrincipal.getGssCredential() may expose internal representation by returning GenericPrincipal.gssCredential  At GenericPrincipal.java:[line 257]
M V EI2: new org.apache.catalina.realm.GenericPrincipal(String, List, Principal, LoginContext, GSSCredential, Map) may expose internal representation by storing an externally mutable object into GenericPrincipal.loginContext  At GenericPrincipal.java:[line 177]
M V EI2: new org.apache.catalina.realm.GenericPrincipal(String, List, Principal, LoginContext, GSSCredential, Map) may expose internal representation by storing an externally mutable object into GenericPrincipal.gssCredential  At GenericPrincipal.java:[line 178]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations doesn't override MethodInfo.equals(Object)  At MethodInfoWithAnnotations.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations.getAnnotations() may expose internal representation by returning MethodInfoWithAnnotations.annotations  At MethodInfoWithAnnotations.java:[line 36]
M V DP: new org.apache.tomcat.jakartaee.bcel.util.ModularRuntimeImage(String) creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block  At ModularRuntimeImage.java:[line 74]
M V EI: jakarta.el.MethodInfo.getParamTypes() may expose internal representation by returning MethodInfo.paramTypes  At MethodInfo.java:[line 42]
M V EI2: new jakarta.el.MethodInfo(String, Class, Class[]) may expose internal representation by storing an externally mutable object into MethodInfo.paramTypes  At MethodInfo.java:[line 30]
M V EI: org.apache.jasper.runtime.JspFragmentHelper.getJspContext() may expose internal representation by returning JspFragmentHelper.jspContext  At JspFragmentHelper.java:[line 57]
M V EI2: new org.apache.jasper.runtime.JspFragmentHelper(int, JspContext, JspTag) may expose internal representation by storing an externally mutable object into JspFragmentHelper._jspx_page_context  At JspFragmentHelper.java:[line 48]
M V EI2: new org.apache.jasper.runtime.JspFragmentHelper(int, JspContext, JspTag) may expose internal representation by storing an externally mutable object into JspFragmentHelper.jspContext  At JspFragmentHelper.java:[line 46]
M V EI: org.apache.tomcat.util.net.openssl.ciphers.Cipher.getOpenSSLAltNames() may expose internal representation by returning Cipher.openSSLAltNames  At Cipher.java:[line 5053]
M V EI: org.apache.tomcat.util.net.openssl.ciphers.Cipher.getJsseNames() may expose internal representation by returning Cipher.jsseNames  At Cipher.java:[line 5057]
M V EI2: new jakarta.websocket.SessionException(String, Throwable, Session) may expose internal representation by storing an externally mutable object into SessionException.session  At SessionException.java:[line 28]
M V EI: jakarta.websocket.SessionException.getSession() may expose internal representation by returning SessionException.session  At SessionException.java:[line 33]
M V EI2: new org.apache.tomcat.jdbc.pool.MultiLockFairBlockingQueue$FairIterator(MultiLockFairBlockingQueue) may expose internal representation by storing an externally mutable object into MultiLockFairBlockingQueue$FairIterator.this$0  At MultiLockFairBlockingQueue.java:[line 526]
M V EI: jakarta.security.auth.message.callback.GroupPrincipalCallback.getGroups() may expose internal representation by returning GroupPrincipalCallback.groups  At GroupPrincipalCallback.java:[line 41]
M V EI2: new jakarta.security.auth.message.callback.GroupPrincipalCallback(Subject, String[]) may expose internal representation by storing an externally mutable object into GroupPrincipalCallback.groups  At GroupPrincipalCallback.java:[line 33]
M V EI2: new jakarta.security.auth.message.callback.GroupPrincipalCallback(Subject, String[]) may expose internal representation by storing an externally mutable object into GroupPrincipalCallback.subject  At GroupPrincipalCallback.java:[line 32]
M V EI: jakarta.security.auth.message.callback.GroupPrincipalCallback.getSubject() may expose internal representation by returning GroupPrincipalCallback.subject  At GroupPrincipalCallback.java:[line 37]
M B Eq: org.eclipse.jdt.internal.compiler.ast.SwitchStatement$1StringSwitchCase defines compareTo(Object) and uses Object.equals()  At SwitchStatement.java:[lines 240-247]
M V EI2: new org.apache.catalina.tribes.group.GroupChannel$HeartbeatRunnable(GroupChannel) may expose internal representation by storing an externally mutable object into GroupChannel$HeartbeatRunnable.this$0  At GroupChannel.java:[line 849]
M D DCN: Do not catch NullPointerException like in org.eclipse.jdt.internal.compiler.parser.ScannerHelper.isBitSet(long[], int)  At ScannerHelper.java:[line 324]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct(byte[], int[], int) may expose internal representation by storing an externally mutable object into ClassFileStruct.reference  At ClassFileStruct.java:[line 21]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct(byte[], int[], int) may expose internal representation by storing an externally mutable object into ClassFileStruct.constantPoolOffsets  At ClassFileStruct.java:[line 22]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt.toString() concatenates strings using + in a loop  At HashtableOfObjectToInt.java:[line 157]
M V EI: org.eclipse.jdt.internal.compiler.lookup.Substitution$NullSubstitution.environment() may expose internal representation by returning Substitution$NullSubstitution.environment  At Substitution.java:[line 41]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.Substitution$NullSubstitution(LookupEnvironment) may expose internal representation by storing an externally mutable object into Substitution$NullSubstitution.environment  At Substitution.java:[line 29]
M B NP: org.apache.tomcat.util.http.parser.EntityTag.compareEntityTag(StringReader, boolean, String) has Boolean return type and returns explicit null  At EntityTag.java:[line 58]
M V EI: org.apache.jasper.compiler.ELNode$Root.getExpression() may expose internal representation by returning ELNode$Root.expr  At ELNode.java:[line 60]
M V EI2: new org.apache.jasper.compiler.AntCompiler$SystemLogHandler(PrintStream) may expose internal representation by storing an externally mutable object into AntCompiler$SystemLogHandler.wrapped  At AntCompiler.java:[line 323]
H I Dm: Found reliance on default encoding in new org.apache.jasper.compiler.AntCompiler$SystemLogHandler(PrintStream): new org.apache.jasper.compiler.AntCompiler$SystemLogHandler(OutputStream)  At AntCompiler.java:[line 322]
H I Dm: Found reliance on default encoding in org.apache.jasper.compiler.AntCompiler$SystemLogHandler.setThread(): new java.io.PrintStream(OutputStream)  At AntCompiler.java:[line 358]
H I Dm: Found reliance on default encoding in org.apache.jasper.compiler.AntCompiler$SystemLogHandler.unsetThread(): java.io.ByteArrayOutputStream.toString()  At AntCompiler.java:[line 373]
M V EI: org.apache.catalina.users.GenericRole.getUserDatabase() may expose internal representation by returning GenericRole.database  At GenericRole.java:[line 73]
M V EI2: org.apache.tomcat.util.digester.Rule.setDigester(Digester) may expose internal representation by storing an externally mutable object into Rule.digester  At Rule.java:[line 73]
M V EI: org.apache.tomcat.util.digester.Rule.getDigester() may expose internal representation by returning Rule.digester  At Rule.java:[line 62]
M V EI2: org.apache.catalina.webresources.AbstractResourceSet.setRoot(WebResourceRoot) may expose internal representation by storing an externally mutable object into AbstractResourceSet.root  At AbstractResourceSet.java:[line 52]
M P SBSC: org.eclipse.jdt.internal.compiler.util.SimpleSet.toString() concatenates strings using + in a loop  At SimpleSet.java:[line 143]
M V MS: Public static org.apache.catalina.webresources.TomcatURLStreamHandlerFactory.getInstance() may expose internal representation by returning TomcatURLStreamHandlerFactory.instance  At TomcatURLStreamHandlerFactory.java:[line 44]
M B Eq: org.eclipse.jdt.internal.compiler.impl.CompilerStats defines compareTo(Object) and uses Object.equals()  At CompilerStats.java:[lines 41-44]
M V EI: jakarta.servlet.jsp.tagext.TagExtraInfo.getTagInfo() may expose internal representation by returning TagExtraInfo.tagInfo  At TagExtraInfo.java:[line 134]
M V EI2: jakarta.servlet.jsp.tagext.TagExtraInfo.setTagInfo(TagInfo) may expose internal representation by storing an externally mutable object into TagExtraInfo.tagInfo  At TagExtraInfo.java:[line 125]
M V EI2: new org.apache.catalina.tribes.ByteMessage(byte[]) may expose internal representation by storing an externally mutable object into ByteMessage.message  At ByteMessage.java:[line 58]
M V EI: org.apache.catalina.tribes.ByteMessage.getMessage() may expose internal representation by returning ByteMessage.message  At ByteMessage.java:[line 66]
M V EI2: org.apache.catalina.tribes.ByteMessage.setMessage(byte[]) may expose internal representation by storing an externally mutable object into ByteMessage.message  At ByteMessage.java:[line 74]
M V EI: org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable$IteratorForReporting.next() may expose internal representation by returning FakedTrackingVariable$IteratorForReporting.next  At FakedTrackingVariable.java:[line 1002]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable$IteratorForReporting.hasNext() where one case falls through to the next case  At FakedTrackingVariable.java:[lines 957-960]
M B It: org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable$IteratorForReporting.next() cannot throw NoSuchElementException  At FakedTrackingVariable.java:[line 1002]
M V EI2: org.apache.tomcat.dbcp.dbcp2.managed.TransactionContext.setSharedConnection(Connection) may expose internal representation by storing an externally mutable object into TransactionContext.sharedConnection  At TransactionContext.java:[line 209]
M V EI: org.apache.tomcat.dbcp.dbcp2.managed.TransactionContext.getSharedConnection() may expose internal representation by returning TransactionContext.sharedConnection  At TransactionContext.java:[line 136]
M V EI2: new org.apache.tomcat.jakartaee.commons.compress.utils.ByteUtils$OutputStreamByteConsumer(OutputStream) may expose internal representation by storing an externally mutable object into ByteUtils$OutputStreamByteConsumer.os  At ByteUtils.java:[line 256]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.ComponentInfoWithAnnotation doesn't override RecordComponentInfo.equals(Object)  At ComponentInfoWithAnnotation.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ComponentInfoWithAnnotation.getAnnotations() may expose internal representation by returning ComponentInfoWithAnnotation.annotations  At ComponentInfoWithAnnotation.java:[line 31]
M V EI2: new jakarta.security.auth.message.callback.PrivateKeyCallback$IssuerSerialNumRequest(X500Principal, BigInteger) may expose internal representation by storing an externally mutable object into PrivateKeyCallback$IssuerSerialNumRequest.issuer  At PrivateKeyCallback.java:[line 111]
M V EI: jakarta.security.auth.message.callback.PrivateKeyCallback$IssuerSerialNumRequest.getIssuer() may expose internal representation by returning PrivateKeyCallback$IssuerSerialNumRequest.issuer  At PrivateKeyCallback.java:[line 116]
M V EI2: new org.apache.catalina.tribes.membership.StaticMembershipProvider$MemberMessage(byte[], int, Member) may expose internal representation by storing an externally mutable object into StaticMembershipProvider$MemberMessage.membershipId  At StaticMembershipProvider.java:[line 352]
M V EI: org.apache.catalina.tribes.membership.StaticMembershipProvider$MemberMessage.getMember() may expose internal representation by returning StaticMembershipProvider$MemberMessage.member  At StaticMembershipProvider.java:[line 366]
M V EI2: org.apache.catalina.tribes.membership.StaticMembershipProvider$MemberMessage.setMember(Member) may expose internal representation by storing an externally mutable object into StaticMembershipProvider$MemberMessage.member  At StaticMembershipProvider.java:[line 370]
M V EI: org.apache.catalina.tribes.membership.StaticMembershipProvider$MemberMessage.getMembershipId() may expose internal representation by returning StaticMembershipProvider$MemberMessage.membershipId  At StaticMembershipProvider.java:[line 362]
M V EI2: new org.apache.catalina.tribes.membership.StaticMembershipProvider$MemberMessage(byte[], int, Member) may expose internal representation by storing an externally mutable object into StaticMembershipProvider$MemberMessage.member  At StaticMembershipProvider.java:[line 354]
H I Dm: Found reliance on default encoding in org.apache.catalina.tribes.membership.StaticMembershipProvider$MemberMessage.toString(): new String(byte[])  At StaticMembershipProvider.java:[line 377]
M M VO: Increment of volatile field org.apache.tomcat.util.net.AprEndpoint$SocketList.size in org.apache.tomcat.util.net.AprEndpoint$SocketList.add(long, long, int)  At AprEndpoint.java:[line 1079]
M M VO: Increment of volatile field org.apache.tomcat.util.net.AprEndpoint$SocketList.size in org.apache.tomcat.util.net.AprEndpoint$SocketList.remove(long)  At AprEndpoint.java:[line 1090]
M V EI: org.apache.tomcat.util.net.AprEndpoint$SocketList.get() may expose internal representation by returning AprEndpoint$SocketList.info  At AprEndpoint.java:[line 1057]
M V EI2: new org.apache.catalina.realm.JAASCallbackHandler(JAASRealm, String, String, String, String, String, String, String, String, String) may expose internal representation by storing an externally mutable object into JAASCallbackHandler.realm  At JAASCallbackHandler.java:[line 88]
M V EI2: org.apache.catalina.core.AsyncListenerWrapper.setServletResponse(ServletResponse) may expose internal representation by storing an externally mutable object into AsyncListenerWrapper.servletResponse  At AsyncListenerWrapper.java:[line 69]
M V EI2: org.apache.catalina.core.AsyncListenerWrapper.setServletRequest(ServletRequest) may expose internal representation by storing an externally mutable object into AsyncListenerWrapper.servletRequest  At AsyncListenerWrapper.java:[line 64]
M V EI2: new org.apache.catalina.util.XMLWriter(Writer) may expose internal representation by storing an externally mutable object into XMLWriter.writer  At XMLWriter.java:[line 83]
M D DCN: Do not catch NullPointerException like in org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(Object, Method, Object[])  At DisposableConnectionFacade.java:[line 82]
M V EI: org.apache.tomcat.websocket.server.WsHandshakeRequest.getHeaders() may expose internal representation by returning WsHandshakeRequest.headers  At WsHandshakeRequest.java:[line 112]
M V EI: org.apache.tomcat.websocket.server.WsHandshakeRequest.getParameterMap() may expose internal representation by returning WsHandshakeRequest.parameterMap  At WsHandshakeRequest.java:[line 97]
M V EI: jakarta.servlet.jsp.tagext.TagSupport.getParent() may expose internal representation by returning TagSupport.parent  At TagSupport.java:[line 192]
M V EI2: jakarta.servlet.jsp.tagext.TagSupport.setParent(Tag) may expose internal representation by storing an externally mutable object into TagSupport.parent  At TagSupport.java:[line 181]
M V EI2: jakarta.servlet.jsp.tagext.TagSupport.setPageContext(PageContext) may expose internal representation by storing an externally mutable object into TagSupport.pageContext  At TagSupport.java:[line 221]
M V EI: org.apache.catalina.tribes.transport.AbstractSender.getAddress() may expose internal representation by returning AbstractSender.address  At AbstractSender.java:[line 171]
M V EI2: org.apache.catalina.tribes.transport.AbstractSender.setAddress(InetAddress) may expose internal representation by storing an externally mutable object into AbstractSender.address  At AbstractSender.java:[line 312]
M V EI: org.apache.catalina.tribes.transport.AbstractSender.getDestination() may expose internal representation by returning AbstractSender.destination  At AbstractSender.java:[line 141]
M V EI2: org.apache.catalina.tribes.transport.AbstractSender.setDestination(Member) may expose internal representation by storing an externally mutable object into AbstractSender.destination  At AbstractSender.java:[line 300]
M D BC: Unchecked/unconfirmed cast from java.util.concurrent.ThreadPoolExecutor to org.apache.juli.AsyncFileHandler$LoggerExecutorService in org.apache.juli.AsyncFileHandler$DropLastPolicy.rejectedExecution(Runnable, ThreadPoolExecutor)  At AsyncFileHandler.java:[line 236]
M V EI2: new org.apache.tomcat.dbcp.pool2.impl.DefaultPooledObjectInfo(PooledObject) may expose internal representation by storing an externally mutable object into DefaultPooledObjectInfo.pooledObject  At DefaultPooledObjectInfo.java:[line 43]
M P SBSC: org.apache.el.parser.ParseException.initialise(Token, int[][], String[]) concatenates strings using + in a loop  At ParseException.java:[line 125]
M V EI: org.apache.catalina.realm.JNDIRealm$User.getRoles() may expose internal representation by returning JNDIRealm$User.roles  At JNDIRealm.java:[line 3232]
M B Dm: org.apache.commons.daemon.support.DaemonWrapper$Invoker.invoke() invokes System.exit(...), which shuts down the entire virtual machine  At DaemonWrapper.java:[line 237]
M V EI2: new org.apache.catalina.util.CustomObjectInputStream(InputStream, ClassLoader, Log, Pattern, boolean) may expose internal representation by storing an externally mutable object into CustomObjectInputStream.classLoader  At CustomObjectInputStream.java:[line 100]
M V EI2: new org.apache.catalina.valves.rewrite.Substitution$MapElement(Substitution) may expose internal representation by storing an externally mutable object into Substitution$MapElement.this$0  At Substitution.java:[line 102]
M D NP: Possible null pointer dereference in org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$2.visitFile(Path, BasicFileAttributes) due to return value of called method  Dereferenced at ClasspathDirectory.java:[line 350]
M V EI: jakarta.servlet.ServletRequestEvent.getServletRequest() may expose internal representation by returning ServletRequestEvent.request  At ServletRequestEvent.java:[line 50]
M V EI2: new jakarta.servlet.ServletRequestEvent(ServletContext, ServletRequest) may expose internal representation by storing an externally mutable object into ServletRequestEvent.request  At ServletRequestEvent.java:[line 42]
H I Dm: Found reliance on default encoding in org.apache.tomcat.util.digester.ServiceBindingPropertySource.getProperty(String, ClassLoader): new String(byte[])  At ServiceBindingPropertySource.java:[line 115]
M V EI2: new org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy(StatementFacade, Object, String) may expose internal representation by storing an externally mutable object into StatementFacade$StatementProxy.this$0  At StatementFacade.java:[line 85]
M V EI2: new org.apache.tomcat.jdbc.pool.MultiLockFairBlockingQueue$ExchangeCountDownLatch(MultiLockFairBlockingQueue, int) may expose internal representation by storing an externally mutable object into MultiLockFairBlockingQueue$ExchangeCountDownLatch.this$0  At MultiLockFairBlockingQueue.java:[line 506]
M V EI: org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration.getDurations() may expose internal representation by returning ExpiresFilter$ExpiresConfiguration.durations  At ExpiresFilter.java:[line 507]
M V EI2: new org.apache.catalina.filters.ExpiresFilter$ExpiresConfiguration(ExpiresFilter$StartingPoint, List) may expose internal representation by storing an externally mutable object into ExpiresFilter$ExpiresConfiguration.durations  At ExpiresFilter.java:[line 503]
H I Dm: Found reliance on default encoding in new org.apache.tomcat.util.log.CaptureLog(): new java.io.PrintStream(OutputStream)  At CaptureLog.java:[line 32]
H I Dm: Found reliance on default encoding in org.apache.tomcat.util.log.CaptureLog.getCapture(): java.io.ByteArrayOutputStream.toString()  At CaptureLog.java:[line 47]
M V EI: org.apache.tomcat.util.net.openssl.OpenSSLConf.getCommands() may expose internal representation by returning OpenSSLConf.commands  At OpenSSLConf.java:[line 34]
M V EI2: new org.apache.catalina.webresources.EmptyResource(WebResourceRoot, String, File) may expose internal representation by storing an externally mutable object into EmptyResource.root  At EmptyResource.java:[line 40]
M V EI: org.apache.catalina.webresources.EmptyResource.getWebResourceRoot() may expose internal representation by returning EmptyResource.root  At EmptyResource.java:[line 170]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getEnclosingTypeName() may expose internal representation by returning InnerClassInfo.outerClassName  At InnerClassInfo.java:[line 56]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getName() may expose internal representation by returning InnerClassInfo.innerClassName  At InnerClassInfo.java:[line 79]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo.getSourceName() may expose internal representation by returning InnerClassInfo.innerName  At InnerClassInfo.java:[line 95]
M M SC: new org.eclipse.jdt.internal.compiler.ReadManager(ICompilationUnit[], int) invokes Thread.start()  At ReadManager.java:[line 58]
M V EI: org.apache.catalina.ant.jmx.JMXAccessorInvokeTask.getArgs() may expose internal representation by returning JMXAccessorInvokeTask.args  At JMXAccessorInvokeTask.java:[line 121]
M V EI2: org.apache.catalina.ant.jmx.JMXAccessorInvokeTask.setArgs(List) may expose internal representation by storing an externally mutable object into JMXAccessorInvokeTask.args  At JMXAccessorInvokeTask.java:[line 127]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.BinaryTypeFormatter.annotationToString(IBinaryTypeAnnotation) where default case is missing  At BinaryTypeFormatter.java:[lines 57-68]
M V EI: org.apache.jasper.compiler.JspConfig$JspProperty.getIncludePrelude() may expose internal representation by returning JspConfig$JspProperty.includePrelude  At JspConfig.java:[line 500]
M V EI: org.apache.jasper.compiler.JspConfig$JspProperty.getIncludeCoda() may expose internal representation by returning JspConfig$JspProperty.includeCoda  At JspConfig.java:[line 504]
M V EI2: new org.apache.jasper.compiler.JspConfig$JspProperty(String, String, String, String, Collection, Collection, String, String, String, String, String) may expose internal representation by storing an externally mutable object into JspConfig$JspProperty.includeCoda  At JspConfig.java:[line 475]
M V EI2: new org.apache.jasper.compiler.JspConfig$JspProperty(String, String, String, String, Collection, Collection, String, String, String, String, String) may expose internal representation by storing an externally mutable object into JspConfig$JspProperty.includePrelude  At JspConfig.java:[line 474]
M V EI2: new jakarta.security.auth.message.callback.PrivateKeyCallback$SubjectKeyIDRequest(byte[]) may expose internal representation by storing an externally mutable object into PrivateKeyCallback$SubjectKeyIDRequest.subjectKeyID  At PrivateKeyCallback.java:[line 98]
M V EI: jakarta.security.auth.message.callback.PrivateKeyCallback$SubjectKeyIDRequest.getSubjectKeyID() may expose internal representation by returning PrivateKeyCallback$SubjectKeyIDRequest.subjectKeyID  At PrivateKeyCallback.java:[line 102]
M V EI2: new jakarta.security.auth.message.callback.CallerPrincipalCallback(Subject, String) may expose internal representation by storing an externally mutable object into CallerPrincipalCallback.subject  At CallerPrincipalCallback.java:[line 41]
M V EI2: new jakarta.security.auth.message.callback.CallerPrincipalCallback(Subject, Principal) may expose internal representation by storing an externally mutable object into CallerPrincipalCallback.subject  At CallerPrincipalCallback.java:[line 35]
M V EI: jakarta.security.auth.message.callback.CallerPrincipalCallback.getSubject() may expose internal representation by returning CallerPrincipalCallback.subject  At CallerPrincipalCallback.java:[line 47]
M V EI: org.apache.tomcat.websocket.Util$DecoderMatch.getTextDecoders() may expose internal representation by returning Util$DecoderMatch.textDecoders  At Util.java:[line 657]
M V EI: org.apache.tomcat.websocket.Util$DecoderMatch.getBinaryDecoders() may expose internal representation by returning Util$DecoderMatch.binaryDecoders  At Util.java:[line 662]
M V EI: org.apache.jasper.compiler.Node$Nodes.getRoot() may expose internal representation by returning Node$Nodes.root  At Node.java:[line 2404]
M V EI2: new org.apache.jasper.compiler.Node$Nodes(Node$Root) may expose internal representation by storing an externally mutable object into Node$Nodes.root  At Node.java:[line 2350]
M V EI: org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl.getFiler() may expose internal representation by returning BaseProcessingEnvImpl._filer  At BaseProcessingEnvImpl.java:[line 101]
M V EI: org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl.getElementUtils() may expose internal representation by returning BaseProcessingEnvImpl._elementUtils  At BaseProcessingEnvImpl.java:[line 96]
M V EI: org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl.getCompiler() may expose internal representation by returning BaseProcessingEnvImpl._compiler  At BaseProcessingEnvImpl.java:[line 79]
M V EI: jakarta.security.auth.message.MessagePolicy$TargetPolicy.getTargets() may expose internal representation by returning MessagePolicy$TargetPolicy.targets  At MessagePolicy.java:[line 78]
M V EI2: new jakarta.security.auth.message.MessagePolicy$TargetPolicy(MessagePolicy$Target[], MessagePolicy$ProtectionPolicy) may expose internal representation by storing an externally mutable object into MessagePolicy$TargetPolicy.targets  At MessagePolicy.java:[line 70]
M V EI2: new org.apache.tomcat.jakartaee.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int) may expose internal representation by storing an externally mutable object into UnsynchronizedByteArrayInputStream.data  At UnsynchronizedByteArrayInputStream.java:[line 87]
M V EI2: new org.apache.tomcat.jdbc.pool.interceptor.AbstractQueryReport$StatementProxy(AbstractQueryReport, Object, String) may expose internal representation by storing an externally mutable object into AbstractQueryReport$StatementProxy.this$0  At AbstractQueryReport.java:[line 184]
M V EI2: new jakarta.servlet.ServletRequestWrapper(ServletRequest) may expose internal representation by storing an externally mutable object into ServletRequestWrapper.request  At ServletRequestWrapper.java:[line 54]
M V EI: jakarta.servlet.ServletRequestWrapper.getRequest() may expose internal representation by returning ServletRequestWrapper.request  At ServletRequestWrapper.java:[line 62]
M V EI2: jakarta.servlet.ServletRequestWrapper.setRequest(ServletRequest) may expose internal representation by storing an externally mutable object into ServletRequestWrapper.request  At ServletRequestWrapper.java:[line 76]
M V MS: Public static jakarta.security.auth.message.config.AuthConfigFactory.getFactory() may expose internal representation by returning AuthConfigFactory.factory  At AuthConfigFactory.java:[line 59]
M V MS: jakarta.security.auth.message.config.AuthConfigFactory.setFactory(AuthConfigFactory) may expose internal static state by storing a mutable object into a static field jakarta.security.auth.message.config.AuthConfigFactory.factory  At AuthConfigFactory.java:[line 96]
M V EI2: jakarta.servlet.ServletResponseWrapper.setResponse(ServletResponse) may expose internal representation by storing an externally mutable object into ServletResponseWrapper.response  At ServletResponseWrapper.java:[line 76]
M V EI: jakarta.servlet.ServletResponseWrapper.getResponse() may expose internal representation by returning ServletResponseWrapper.response  At ServletResponseWrapper.java:[line 61]
M V EI2: new jakarta.servlet.ServletResponseWrapper(ServletResponse) may expose internal representation by storing an externally mutable object into ServletResponseWrapper.response  At ServletResponseWrapper.java:[line 52]
M V EI2: org.apache.catalina.ha.ClusterMessageBase.setAddress(Member) may expose internal representation by storing an externally mutable object into ClusterMessageBase.address  At ClusterMessageBase.java:[line 44]
M V EI: org.apache.catalina.ha.ClusterMessageBase.getAddress() may expose internal representation by returning ClusterMessageBase.address  At ClusterMessageBase.java:[line 34]
M V EI: jakarta.servlet.jsp.tagext.BodyContent.getEnclosingWriter() may expose internal representation by returning BodyContent.enclosingWriter  At BodyContent.java:[line 119]
M V EI: org.apache.tomcat.jakartaee.commons.compress.utils.SeekableInMemoryByteChannel.array() may expose internal representation by returning SeekableInMemoryByteChannel.data  At SeekableInMemoryByteChannel.java:[line 191]
M V EI2: new org.apache.tomcat.jakartaee.commons.compress.utils.SeekableInMemoryByteChannel(byte[]) may expose internal representation by storing an externally mutable object into SeekableInMemoryByteChannel.data  At SeekableInMemoryByteChannel.java:[line 56]
M V EI2: new org.apache.catalina.tribes.io.ReplicationStream(InputStream, ClassLoader[]) may expose internal representation by storing an externally mutable object into ReplicationStream.classLoaders  At ReplicationStream.java:[line 58]
M V EI2: new org.eclipse.jdt.internal.compiler.ast.NumberLiteral(char[], int, int) may expose internal representation by storing an externally mutable object into NumberLiteral.source  At NumberLiteral.java:[line 22]
M V EI: org.eclipse.jdt.internal.compiler.ast.NumberLiteral.source() may expose internal representation by returning NumberLiteral.source  At NumberLiteral.java:[line 36]
M V EI: jakarta.servlet.jsp.ErrorData.getThrowable() may expose internal representation by returning ErrorData.throwable  At ErrorData.java:[line 61]
M V EI2: new jakarta.servlet.jsp.ErrorData(Throwable, int, String, String) may expose internal representation by storing an externally mutable object into ErrorData.throwable  At ErrorData.java:[line 49]
M V EI2: new org.apache.catalina.webresources.EmptyResourceSet(WebResourceRoot) may expose internal representation by storing an externally mutable object into EmptyResourceSet.root  At EmptyResourceSet.java:[line 46]
M V EI2: org.apache.catalina.webresources.EmptyResourceSet.setRoot(WebResourceRoot) may expose internal representation by storing an externally mutable object into EmptyResourceSet.root  At EmptyResourceSet.java:[line 101]
M D SF: Switch statement found in org.apache.catalina.servlets.CGIServlet$HTTPHeaderInputStream.read() where default case is missing  At CGIServlet.java:[lines 1895-1904]
M V EI2: org.apache.catalina.tribes.transport.AbstractRxTask.setTaskPool(RxTaskPool) may expose internal representation by storing an externally mutable object into AbstractRxTask.pool  At AbstractRxTask.java:[line 36]
M V EI: org.apache.catalina.tribes.transport.AbstractRxTask.getTaskPool() may expose internal representation by returning AbstractRxTask.pool  At AbstractRxTask.java:[line 48]
M V EI: org.apache.tomcat.websocket.WsHandshakeResponse.getHeaders() may expose internal representation by returning WsHandshakeResponse.headers  At WsHandshakeResponse.java:[line 54]
M V EI2: org.apache.tomcat.util.net.Nio2Channel.reset(AsynchronousSocketChannel, SocketWrapperBase) may expose internal representation by storing an externally mutable object into Nio2Channel.socketWrapper  At Nio2Channel.java:[line 58]
M V EI: org.apache.tomcat.util.net.Nio2Channel.getBufHandler() may expose internal representation by returning Nio2Channel.bufHandler  At Nio2Channel.java:[line 110]
M V EI2: org.apache.tomcat.util.net.Nio2Channel.reset(AsynchronousSocketChannel, SocketWrapperBase) may expose internal representation by storing an externally mutable object into Nio2Channel.sc  At Nio2Channel.java:[line 57]
M V EI2: new org.apache.tomcat.util.net.Nio2Channel(SocketBufferHandler) may expose internal representation by storing an externally mutable object into Nio2Channel.bufHandler  At Nio2Channel.java:[line 44]
M V EI: org.apache.tomcat.util.net.Nio2Channel.getIOChannel() may expose internal representation by returning Nio2Channel.sc  At Nio2Channel.java:[line 114]
M V EI2: org.apache.tomcat.util.net.Nio2Channel.setAppReadBufHandler(ApplicationBufferHandler) may expose internal representation by storing an externally mutable object into Nio2Channel.appReadBufHandler  At Nio2Channel.java:[line 219]
M V EI: org.apache.catalina.authenticator.jaspic.PersistentProviderRegistrations$Provider.getProperties() may expose internal representation by returning PersistentProviderRegistrations$Provider.properties  At PersistentProviderRegistrations.java:[line 254]
M V EI: org.apache.tomcat.util.digester.AbstractObjectCreationFactory.getDigester() may expose internal representation by returning AbstractObjectCreationFactory.digester  At AbstractObjectCreationFactory.java:[line 62]
M V EI2: org.apache.tomcat.util.digester.AbstractObjectCreationFactory.setDigester(Digester) may expose internal representation by storing an externally mutable object into AbstractObjectCreationFactory.digester  At AbstractObjectCreationFactory.java:[line 74]
M V EI: org.apache.catalina.users.GenericGroup.getUserDatabase() may expose internal representation by returning GenericGroup.database  At GenericGroup.java:[line 99]
M V EI2: new org.apache.coyote.http2.Http2OutputBuffer(Response, Stream$StreamOutputBuffer) may expose internal representation by storing an externally mutable object into Http2OutputBuffer.coyoteResponse  At Http2OutputBuffer.java:[line 49]
M V EI2: new org.apache.tomcat.util.security.PrivilegedSetTccl(Thread, ClassLoader) may expose internal representation by storing an externally mutable object into PrivilegedSetTccl.cl  At PrivilegedSetTccl.java:[line 32]
M V EI2: new org.apache.tomcat.util.security.PrivilegedSetTccl(Thread, ClassLoader) may expose internal representation by storing an externally mutable object into PrivilegedSetTccl.t  At PrivilegedSetTccl.java:[line 31]
M V EI: jakarta.servlet.HttpConstraintElement.getRolesAllowed() may expose internal representation by returning HttpConstraintElement.rolesAllowed  At HttpConstraintElement.java:[line 123]
M P SBSC: org.eclipse.jdt.internal.compiler.util.SimpleLookupTable.toString() concatenates strings using + in a loop  At SimpleLookupTable.java:[line 169]
M V EI2: new org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath(ServletContext, String) may expose internal representation by storing an externally mutable object into SSIServletExternalResolver$ServletContextAndPath.servletContext  At SSIServletExternalResolver.java:[line 563]
M V EI: org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath.getServletContext() may expose internal representation by returning SSIServletExternalResolver$ServletContextAndPath.servletContext  At SSIServletExternalResolver.java:[line 569]
M P SBSC: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray.toString() concatenates strings using + in a loop  At SimpleSetOfCharArray.java:[line 145]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.LineNumberTable(int, int, LineNumber[], ConstantPool) may expose internal representation by storing an externally mutable object into LineNumberTable.lineNumberTable  At LineNumberTable.java:[line 58]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.LineNumberTable.getLineNumberTable() may expose internal representation by returning LineNumberTable.lineNumberTable  At LineNumberTable.java:[line 114]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.LineNumberTable.setLineNumberTable(LineNumber[]) may expose internal representation by storing an externally mutable object into LineNumberTable.lineNumberTable  At LineNumberTable.java:[line 122]
M B Se: The field org.apache.commons.daemon.DaemonPermission.type is transient but isn't set by deserialization  In DaemonPermission.java
M B Se: The field org.apache.commons.daemon.DaemonPermission.mask is transient but isn't set by deserialization  In DaemonPermission.java
M V EI2: new org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector(FileObject, String) may expose internal representation by storing an externally mutable object into Util$EncodingErrorCollector.fileObject  At Util.java:[line 106]
M X OBL: org.apache.juli.ClassLoaderLogManager.readConfiguration(ClassLoader) may fail to clean up java.io.InputStream  Obligation to clean up resource created at ClassLoaderLogManager.java:[line 500] is not discharged
M V EI2: new org.apache.tomcat.jdbc.pool.ConnectionPool$ConnectionFuture(ConnectionPool, Future) may expose internal representation by storing an externally mutable object into ConnectionPool$ConnectionFuture.this$0  At ConnectionPool.java:[line 1408]
M V EI2: new org.apache.tomcat.jdbc.pool.ConnectionPool$ConnectionFuture(ConnectionPool, PooledConnection) may expose internal representation by storing an externally mutable object into ConnectionPool$ConnectionFuture.pc  At ConnectionPool.java:[line 1413]
M V EI: org.apache.tomcat.jdbc.pool.ConnectionPool$ConnectionFuture.get(long, TimeUnit) may expose internal representation by returning ConnectionPool$ConnectionFuture.result  At ConnectionPool.java:[line 1451]
M V EI2: new org.apache.tomcat.jdbc.pool.ConnectionPool$ConnectionFuture(ConnectionPool, PooledConnection) may expose internal representation by storing an externally mutable object into ConnectionPool$ConnectionFuture.this$0  At ConnectionPool.java:[line 1412]
M C RV: Return value of java.util.concurrent.CountDownLatch.await(long, TimeUnit) ignored in org.apache.tomcat.jdbc.pool.ConnectionPool$ConnectionFuture.get(long, TimeUnit)  At ConnectionPool.java:[line 1464]
M V EI2: org.apache.catalina.authenticator.jaspic.MessageInfoImpl.setResponseMessage(Object) may expose internal representation by storing an externally mutable object into MessageInfoImpl.response  At MessageInfoImpl.java:[line 78]
M V EI: org.apache.catalina.authenticator.jaspic.MessageInfoImpl.getResponseMessage() may expose internal representation by returning MessageInfoImpl.response  At MessageInfoImpl.java:[line 60]
M V EI: org.apache.catalina.authenticator.jaspic.MessageInfoImpl.getMap() may expose internal representation by returning MessageInfoImpl.map  At MessageInfoImpl.java:[line 50]
M V EI2: new org.apache.catalina.authenticator.jaspic.MessageInfoImpl(HttpServletRequest, HttpServletResponse, boolean) may expose internal representation by storing an externally mutable object into MessageInfoImpl.response  At MessageInfoImpl.java:[line 42]
M V EI2: new org.apache.el.util.MessageFactory(ResourceBundle) may expose internal representation by storing an externally mutable object into MessageFactory.bundle  At MessageFactory.java:[line 45]
M V EI2: new org.apache.catalina.tribes.membership.Membership$MbrEntry(Member) may expose internal representation by storing an externally mutable object into Membership$MbrEntry.mbr  At Membership.java:[line 301]
M V EI: org.apache.catalina.tribes.membership.Membership$MbrEntry.getMember() may expose internal representation by returning Membership$MbrEntry.mbr  At Membership.java:[line 317]
M V EI: org.apache.catalina.ha.deploy.UndeployMessage.getAddress() may expose internal representation by returning UndeployMessage.address  At UndeployMessage.java:[line 42]
M V EI2: new org.apache.catalina.ha.deploy.UndeployMessage(Member, long, String, String) may expose internal representation by storing an externally mutable object into UndeployMessage.address  At UndeployMessage.java:[line 34]
M V EI2: org.apache.catalina.ha.deploy.UndeployMessage.setAddress(Member) may expose internal representation by storing an externally mutable object into UndeployMessage.address  At UndeployMessage.java:[line 47]
M V EI2: new org.apache.catalina.loader.WebappClassLoaderBase$PrivilegedJavaseGetResource(WebappClassLoaderBase, String) may expose internal representation by storing an externally mutable object into WebappClassLoaderBase$PrivilegedJavaseGetResource.this$0  At WebappClassLoaderBase.java:[line 183]
M V EI2: new org.apache.tomcat.util.descriptor.web.JspConfigDescriptorImpl(Collection, Collection) may expose internal representation by storing an externally mutable object into JspConfigDescriptorImpl.taglibs  At JspConfigDescriptorImpl.java:[line 34]
M V EI2: new org.apache.tomcat.util.descriptor.web.JspConfigDescriptorImpl(Collection, Collection) may expose internal representation by storing an externally mutable object into JspConfigDescriptorImpl.jspPropertyGroups  At JspConfigDescriptorImpl.java:[line 33]
M V EI2: org.apache.catalina.authenticator.SavedRequest.setBody(ByteChunk) may expose internal representation by storing an externally mutable object into SavedRequest.body  At SavedRequest.java:[line 173]
M V EI: org.apache.catalina.authenticator.SavedRequest.getBody() may expose internal representation by returning SavedRequest.body  At SavedRequest.java:[line 169]
M V EI2: new org.apache.tomcat.jdbc.pool.FairBlockingQueue$FairIterator(FairBlockingQueue) may expose internal representation by storing an externally mutable object into FairBlockingQueue$FairIterator.this$0  At FairBlockingQueue.java:[line 527]
M V EI2: new org.apache.tomcat.util.descriptor.LocalResolver(Map, Map, boolean) may expose internal representation by storing an externally mutable object into LocalResolver.systemIds  At LocalResolver.java:[line 66]
M V EI2: new org.apache.tomcat.util.descriptor.LocalResolver(Map, Map, boolean) may expose internal representation by storing an externally mutable object into LocalResolver.publicIds  At LocalResolver.java:[line 65]
M V EI: org.apache.jasper.runtime.ProtectedFunctionMapper.resolveFunction(String, String) may expose internal representation by returning ProtectedFunctionMapper.theMethod  At ProtectedFunctionMapper.java:[line 150]
M V EI: org.apache.catalina.tribes.UniqueId.getBytes() may expose internal representation by returning UniqueId.id  At UniqueId.java:[line 75]
M V EI2: new org.apache.catalina.tribes.UniqueId(byte[]) may expose internal representation by storing an externally mutable object into UniqueId.id  At UniqueId.java:[line 40]
M V EI2: new org.apache.catalina.session.StandardSessionFacade(HttpSession) may expose internal representation by storing an externally mutable object into StandardSessionFacade.session  At StandardSessionFacade.java:[line 39]
M V EI: org.apache.tomcat.util.http.fileupload.impl.FileUploadIOException.getCause() may expose internal representation by returning FileUploadIOException.cause  At FileUploadIOException.java:[line 60]
M V EI2: new org.apache.tomcat.util.http.fileupload.impl.FileUploadIOException(FileUploadException) may expose internal representation by storing an externally mutable object into FileUploadIOException.cause  At FileUploadIOException.java:[line 49]
M V EI2: new org.apache.catalina.authenticator.jaspic.SimpleServerAuthContext(List) may expose internal representation by storing an externally mutable object into SimpleServerAuthContext.modules  At SimpleServerAuthContext.java:[line 41]
M D Eq: org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties doesn't override java.util.Hashtable.equals(Object)  At Messages.java:[line 1]
M V EI2: new org.apache.tomcat.util.buf.Asn1Parser(byte[]) may expose internal representation by storing an externally mutable object into Asn1Parser.source  At Asn1Parser.java:[line 40]
M V EI: jakarta.servlet.jsp.tagext.BodyTagSupport.getBodyContent() may expose internal representation by returning BodyTagSupport.bodyContent  At BodyTagSupport.java:[line 135]
M V EI2: jakarta.servlet.jsp.tagext.BodyTagSupport.setBodyContent(BodyContent) may expose internal representation by storing an externally mutable object into BodyTagSupport.bodyContent  At BodyTagSupport.java:[line 84]
M V EI: jakarta.security.auth.message.MessagePolicy.getTargetPolicies() may expose internal representation by returning MessagePolicy.targetPolicies  At MessagePolicy.java:[line 40]
M V EI2: new jakarta.security.auth.message.MessagePolicy(MessagePolicy$TargetPolicy[], boolean) may expose internal representation by storing an externally mutable object into MessagePolicy.targetPolicies  At MessagePolicy.java:[line 28]
M V EI2: new jakarta.servlet.jsp.tagext.TagInfo(String, String, String, String, TagLibraryInfo, TagExtraInfo, TagAttributeInfo[], String, String, String, TagVariableInfo[], boolean) may expose internal representation by storing an externally mutable object into TagInfo.tagExtraInfo  At TagInfo.java:[line 197]
M V EI: jakarta.servlet.jsp.tagext.TagInfo.getTagExtraInfo() may expose internal representation by returning TagInfo.tagExtraInfo  At TagInfo.java:[line 297]
M V EI2: new jakarta.servlet.jsp.tagext.TagInfo(String, String, String, String, TagLibraryInfo, TagExtraInfo, TagAttributeInfo[]) may expose internal representation by storing an externally mutable object into TagInfo.attributeInfo  At TagInfo.java:[line 84]
M V EI2: new jakarta.servlet.jsp.tagext.TagInfo(String, String, String, String, TagLibraryInfo, TagExtraInfo, TagAttributeInfo[], String, String, String, TagVariableInfo[]) may expose internal representation by storing an externally mutable object into TagInfo.tagExtraInfo  At TagInfo.java:[line 138]
M V EI2: new jakarta.servlet.jsp.tagext.TagInfo(String, String, String, String, TagLibraryInfo, TagExtraInfo, TagAttributeInfo[]) may expose internal representation by storing an externally mutable object into TagInfo.tagExtraInfo  At TagInfo.java:[line 83]
M V EI2: jakarta.servlet.jsp.tagext.TagInfo.setTagExtraInfo(TagExtraInfo) may expose internal representation by storing an externally mutable object into TagInfo.tagExtraInfo  At TagInfo.java:[line 287]
M V EI2: new jakarta.servlet.jsp.tagext.TagInfo(String, String, String, String, TagLibraryInfo, TagExtraInfo, TagAttributeInfo[], String, String, String, TagVariableInfo[]) may expose internal representation by storing an externally mutable object into TagInfo.tagVariableInfo  At TagInfo.java:[line 143]
M V EI2: new jakarta.servlet.jsp.tagext.TagInfo(String, String, String, String, TagLibraryInfo, TagExtraInfo, TagAttributeInfo[], String, String, String, TagVariableInfo[]) may expose internal representation by storing an externally mutable object into TagInfo.attributeInfo  At TagInfo.java:[line 139]
M V EI2: new jakarta.servlet.jsp.tagext.TagInfo(String, String, String, String, TagLibraryInfo, TagExtraInfo, TagAttributeInfo[], String, String, String, TagVariableInfo[], boolean) may expose internal representation by storing an externally mutable object into TagInfo.tagVariableInfo  At TagInfo.java:[line 202]
M V EI: jakarta.servlet.jsp.tagext.TagInfo.getAttributes() may expose internal representation by returning TagInfo.attributeInfo  At TagInfo.java:[line 228]
M V EI2: new jakarta.servlet.jsp.tagext.TagInfo(String, String, String, String, TagLibraryInfo, TagExtraInfo, TagAttributeInfo[], String, String, String, TagVariableInfo[], boolean) may expose internal representation by storing an externally mutable object into TagInfo.attributeInfo  At TagInfo.java:[line 198]
M V EI: jakarta.servlet.jsp.tagext.TagInfo.getTagVariableInfos() may expose internal representation by returning TagInfo.tagVariableInfo  At TagInfo.java:[line 412]
M B RV: Exceptional return value of java.io.File.renameTo(File) ignored in org.apache.catalina.storeconfig.StoreFileMover.move()  At StoreFileMover.java:[line 166]
M V EI2: new org.apache.jasper.compiler.ServletWriter(PrintWriter) may expose internal representation by storing an externally mutable object into ServletWriter.writer  At ServletWriter.java:[line 50]
M V EI2: new org.apache.catalina.ha.deploy.FileMessage(Member, String, String) may expose internal representation by storing an externally mutable object into FileMessage.address  At FileMessage.java:[line 42]
M V EI2: org.apache.catalina.ha.deploy.FileMessage.setData(byte[], int) may expose internal representation by storing an externally mutable object into FileMessage.data  At FileMessage.java:[line 63]
M V EI: org.apache.catalina.ha.deploy.FileMessage.getData() may expose internal representation by returning FileMessage.data  At FileMessage.java:[line 60]
M V EI: org.apache.tomcat.util.net.NioChannel.getIOChannel() may expose internal representation by returning NioChannel.sc  At NioChannel.java:[line 161]
M V EI2: org.apache.tomcat.util.net.NioChannel.reset(SocketChannel, NioEndpoint$NioSocketWrapper) may expose internal representation by storing an externally mutable object into NioChannel.socketWrapper  At NioChannel.java:[line 57]
M V EI2: org.apache.tomcat.util.net.NioChannel.reset(SocketChannel, NioEndpoint$NioSocketWrapper) may expose internal representation by storing an externally mutable object into NioChannel.sc  At NioChannel.java:[line 56]
M V EI2: org.apache.tomcat.util.net.NioChannel.setAppReadBufHandler(ApplicationBufferHandler) may expose internal representation by storing an externally mutable object into NioChannel.appReadBufHandler  At NioChannel.java:[line 224]
M V EI2: new org.apache.tomcat.util.net.NioChannel(SocketBufferHandler) may expose internal representation by storing an externally mutable object into NioChannel.bufHandler  At NioChannel.java:[line 45]
M V EI: org.apache.tomcat.util.net.NioChannel.getBufHandler() may expose internal representation by returning NioChannel.bufHandler  At NioChannel.java:[line 157]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation doesn't override FieldInfo.equals(Object)  At FieldInfoWithAnnotation.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation.getAnnotations() may expose internal representation by returning FieldInfoWithAnnotation.annotations  At FieldInfoWithAnnotation.java:[line 37]
M V EI: org.eclipse.jdt.internal.compiler.codegen.BranchLabel.forwardReferences() may expose internal representation by returning BranchLabel.forwardReferences  At BranchLabel.java:[line 168]
H D RV: Return value of forwardReferenceCount() ignored, but method has no side effect  At BranchLabel.java:[line 163]
H D RV: Return value of forwardReferences() ignored, but method has no side effect  At BranchLabel.java:[line 167]
M V MS: Public static org.apache.tomcat.util.compat.JreCompat.getInstance() may expose internal representation by returning JreCompat.instance  At JreCompat.java:[line 109]
M B IC: Initialization of org.apache.tomcat.util.compat.JreCompat accesses class org.apache.tomcat.util.compat.Jre19Compat, which isn't initialized yet  At JreCompat.java:[line 72]
M B Nm: The method name org.apache.el.parser.TokenMgrError.LexicalErr(boolean, int, int, int, String, int) doesn't start with a lower case letter  At TokenMgrError.java:[lines 107-108]
M V EI2: new org.apache.tomcat.jakartaee.commons.compress.utils.BoundedSeekableByteChannelInputStream(long, long, SeekableByteChannel) may expose internal representation by storing an externally mutable object into BoundedSeekableByteChannelInputStream.channel  At BoundedSeekableByteChannelInputStream.java:[line 44]
M V EI: org.apache.el.parser.SimpleNode.jjtGetParent() may expose internal representation by returning SimpleNode.parent  At SimpleNode.java:[line 65]
M V EI2: org.apache.el.parser.SimpleNode.jjtSetParent(Node) may expose internal representation by storing an externally mutable object into SimpleNode.parent  At SimpleNode.java:[line 60]
M B ES: Comparison of String objects using == or != in org.apache.tomcat.jakartaee.ManifestConverter.updateValues(Attributes, EESpecProfile)  At ManifestConverter.java:[line 121]
H I Dm: Found reliance on default encoding in new org.apache.tomcat.util.json.JavaCharStream(InputStream, String, int, int, int): new java.io.InputStreamReader(InputStream)  At JavaCharStream.java:[line 482]
H I Dm: Found reliance on default encoding in new org.apache.tomcat.util.json.JavaCharStream(InputStream, int, int, int): new java.io.InputStreamReader(InputStream)  At JavaCharStream.java:[line 489]
H I Dm: Found reliance on default encoding in org.apache.tomcat.util.json.JavaCharStream.ReInit(InputStream, String, int, int, int): new java.io.InputStreamReader(InputStream)  At JavaCharStream.java:[line 522]
H I Dm: Found reliance on default encoding in org.apache.tomcat.util.json.JavaCharStream.ReInit(InputStream, int, int, int): new java.io.InputStreamReader(InputStream)  At JavaCharStream.java:[line 529]
M V EI2: new org.apache.tomcat.util.digester.FactoryCreateRule(ObjectCreationFactory, boolean) may expose internal representation by storing an externally mutable object into FactoryCreateRule.creationFactory  At FactoryCreateRule.java:[line 57]
M V EI: org.apache.tomcat.util.descriptor.web.ServletDef.getParameterMap() may expose internal representation by returning ServletDef.parameters  At ServletDef.java:[line 152]
M V EI: org.apache.tomcat.util.descriptor.web.ServletDef.getSecurityRoleRefs() may expose internal representation by returning ServletDef.securityRoleRefs  At ServletDef.java:[line 207]
M V EI: org.apache.tomcat.util.descriptor.web.ServletDef.getMultipartDef() may expose internal representation by returning ServletDef.multipartDef  At ServletDef.java:[line 225]
M V EI2: org.apache.tomcat.util.descriptor.web.ServletDef.setMultipartDef(MultipartDef) may expose internal representation by storing an externally mutable object into ServletDef.multipartDef  At ServletDef.java:[line 229]
M V EI2: new org.apache.catalina.ha.context.ReplicatedContext$MultiEnumeration(Enumeration[]) may expose internal representation by storing an externally mutable object into ReplicatedContext$MultiEnumeration.enumerations  At ReplicatedContext.java:[line 206]
M V EI2: new org.apache.naming.NamingContextEnumeration(Iterator) may expose internal representation by storing an externally mutable object into NamingContextEnumeration.iterator  At NamingContextEnumeration.java:[line 38]
M V EI: org.apache.tomcat.util.modeler.NotificationInfo.createNotificationInfo() may expose internal representation by returning NotificationInfo.info  At NotificationInfo.java:[line 121]
M V EI: org.apache.tomcat.util.modeler.NotificationInfo.getNotifTypes() may expose internal representation by returning NotificationInfo.notifTypes  At NotificationInfo.java:[line 80]
M V EI2: new jakarta.servlet.jsp.tagext.TagFileInfo(String, String, TagInfo) may expose internal representation by storing an externally mutable object into TagFileInfo.tagInfo  At TagFileInfo.java:[line 48]
M V EI: jakarta.servlet.jsp.tagext.TagFileInfo.getTagInfo() may expose internal representation by returning TagFileInfo.tagInfo  At TagFileInfo.java:[line 77]
H B DE: org.apache.naming.factory.SendMailFactory.lambda$getObjectInstance$0(Reference) might ignore java.lang.Exception  At SendMailFactory.java:[line 119]
M V EI2: new org.apache.catalina.ha.tcp.SendMessageData(Object, Member, Exception) may expose internal representation by storing an externally mutable object into SendMessageData.exception  At SendMessageData.java:[line 41]
M V EI2: new org.apache.catalina.ha.tcp.SendMessageData(Object, Member, Exception) may expose internal representation by storing an externally mutable object into SendMessageData.destination  At SendMessageData.java:[line 40]
M V EI: org.apache.catalina.ha.tcp.SendMessageData.getDestination() may expose internal representation by returning SendMessageData.destination  At SendMessageData.java:[line 48]
M V EI: org.apache.catalina.ha.tcp.SendMessageData.getException() may expose internal representation by returning SendMessageData.exception  At SendMessageData.java:[line 54]
M V EI: org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer$StatementEntry.getAllocationStack() may expose internal representation by returning StatementFinalizer$StatementEntry.allocationStack  At StatementFinalizer.java:[line 112]
M V EI2: new org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer$StatementEntry(StatementFinalizer, Statement) may expose internal representation by storing an externally mutable object into StatementFinalizer$StatementEntry.this$0  At StatementFinalizer.java:[line 100]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.ArrayElementValue(int, ElementValue[], ConstantPool) may expose internal representation by storing an externally mutable object into ArrayElementValue.elementValues  At ArrayElementValue.java:[line 54]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.ArrayElementValue.getElementValuesArray() may expose internal representation by returning ArrayElementValue.elementValues  At ArrayElementValue.java:[line 85]
M V EI: org.apache.catalina.tribes.membership.MembershipServiceBase.getProperties() may expose internal representation by returning MembershipServiceBase.properties  At MembershipServiceBase.java:[line 50]
M V EI2: org.apache.catalina.tribes.membership.MembershipServiceBase.setProperties(Properties) may expose internal representation by storing an externally mutable object into MembershipServiceBase.properties  At MembershipServiceBase.java:[line 42]
M V EI: org.apache.catalina.tribes.membership.MembershipServiceBase.getChannel() may expose internal representation by returning MembershipServiceBase.channel  At MembershipServiceBase.java:[line 136]
M V EI2: org.apache.catalina.tribes.membership.MembershipServiceBase.setChannel(Channel) may expose internal representation by storing an externally mutable object into MembershipServiceBase.channel  At MembershipServiceBase.java:[line 141]
H I Dm: Found reliance on default encoding in new org.apache.el.parser.SimpleCharStream(InputStream, String, int, int, int): new java.io.InputStreamReader(InputStream)  At SimpleCharStream.java:[line 324]
H I Dm: Found reliance on default encoding in new org.apache.el.parser.SimpleCharStream(InputStream, int, int, int): new java.io.InputStreamReader(InputStream)  At SimpleCharStream.java:[line 331]
H I Dm: Found reliance on default encoding in org.apache.el.parser.SimpleCharStream.ReInit(InputStream, String, int, int, int): new java.io.InputStreamReader(InputStream)  At SimpleCharStream.java:[line 364]
H I Dm: Found reliance on default encoding in org.apache.el.parser.SimpleCharStream.ReInit(InputStream, int, int, int): new java.io.InputStreamReader(InputStream)  At SimpleCharStream.java:[line 371]
M V EI2: new org.apache.catalina.authenticator.SpnegoAuthenticator$AcceptAction(GSSContext, byte[]) may expose internal representation by storing an externally mutable object into SpnegoAuthenticator$AcceptAction.gssContext  At SpnegoAuthenticator.java:[line 320]
M V EI2: new org.apache.catalina.authenticator.SpnegoAuthenticator$AcceptAction(GSSContext, byte[]) may expose internal representation by storing an externally mutable object into SpnegoAuthenticator$AcceptAction.decoded  At SpnegoAuthenticator.java:[line 321]
M V EI2: org.apache.jasper.util.FastRemovalDequeue.moveLast(FastRemovalDequeue$Entry) may expose internal representation by storing an externally mutable object into FastRemovalDequeue.last  At FastRemovalDequeue.java:[line 252]
M V EI2: org.apache.jasper.util.FastRemovalDequeue.moveFirst(FastRemovalDequeue$Entry) may expose internal representation by storing an externally mutable object into FastRemovalDequeue.first  At FastRemovalDequeue.java:[line 226]
M V EI2: new org.apache.catalina.realm.UserDatabaseRealm$UserDatabasePrincipal(User, UserDatabase) may expose internal representation by storing an externally mutable object into UserDatabaseRealm$UserDatabasePrincipal.database  At UserDatabaseRealm.java:[line 294]
M V EI2: new org.apache.tomcat.util.net.AprSSLSupport(AprEndpoint$AprSocketWrapper, String) may expose internal representation by storing an externally mutable object into AprSSLSupport.socketWrapper  At AprSSLSupport.java:[line 43]
M V EI2: new org.apache.tomcat.websocket.AsyncChannelWrapperNonSecure(AsynchronousSocketChannel) may expose internal representation by storing an externally mutable object into AsyncChannelWrapperNonSecure.socketChannel  At AsyncChannelWrapperNonSecure.java:[line 42]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfType.toString() concatenates strings using + in a loop  At HashtableOfType.java:[line 131]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.flow.FlowInfo.mergeNullStatus(int, int) where default case is missing  At FlowInfo.java:[lines 387-398]
M V EI2: new org.apache.catalina.tribes.ChannelException$FaultyMember(Member, Exception) may expose internal representation by storing an externally mutable object into ChannelException$FaultyMember.member  At ChannelException.java:[line 162]
M V EI: org.apache.catalina.tribes.ChannelException$FaultyMember.getCause() may expose internal representation by returning ChannelException$FaultyMember.cause  At ChannelException.java:[line 171]
M V EI: org.apache.catalina.tribes.ChannelException$FaultyMember.getMember() may expose internal representation by returning ChannelException$FaultyMember.member  At ChannelException.java:[line 167]
M V EI2: new org.apache.catalina.tribes.ChannelException$FaultyMember(Member, Exception) may expose internal representation by storing an externally mutable object into ChannelException$FaultyMember.cause  At ChannelException.java:[line 163]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues.toString() concatenates strings using + in a loop  At HashtableOfIntValues.java:[line 158]
M V EI2: new org.apache.catalina.SessionEvent(Session, String, Object) may expose internal representation by storing an externally mutable object into SessionEvent.session  At SessionEvent.java:[line 61]
M V EI: org.apache.catalina.SessionEvent.getSession() may expose internal representation by returning SessionEvent.session  At SessionEvent.java:[line 80]
M B OS: org.apache.catalina.servlets.CGIServlet$CGIRunner.run() may fail to close stream  At CGIServlet.java:[line 1650]
H I Dm: Found reliance on default encoding in org.apache.catalina.servlets.CGIServlet$CGIRunner.run(): new java.io.InputStreamReader(InputStream)  At CGIServlet.java:[line 1651]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo.getName() may expose internal representation by returning ElementValuePairInfo.name  At ElementValuePairInfo.java:[line 34]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo(char[], Object) may expose internal representation by storing an externally mutable object into ElementValuePairInfo.name  At ElementValuePairInfo.java:[line 29]
M M VO: Increment of volatile field org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.prepareCount in org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.prepare(long)  At SlowQueryReport.java:[line 418]
M M VO: Increment of volatile field org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.nrOfInvocations in org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.add(long, long)  At SlowQueryReport.java:[line 433]
H M VO: Increment of volatile field org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.failures in org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.failure(long, long)  At SlowQueryReport.java:[line 440]
M V MS: Public static org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.getFieldTypes() may expose internal representation by returning SlowQueryReport$QueryStats.FIELD_TYPES  At SlowQueryReport.java:[line 362]
M V MS: Public static org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.getFieldNames() may expose internal representation by returning SlowQueryReport$QueryStats.FIELD_NAMES  At SlowQueryReport.java:[line 354]
M V MS: Public static org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStats.getFieldDescriptions() may expose internal representation by returning SlowQueryReport$QueryStats.FIELD_DESCRIPTIONS  At SlowQueryReport.java:[line 358]
M V EI: org.apache.catalina.ha.session.SessionMessageImpl.getSession() may expose internal representation by returning SessionMessageImpl.mSession  At SessionMessageImpl.java:[line 108]
M V EI2: new org.eclipse.jdt.internal.compiler.env.IUpdatableModule$AddExports(char[], char[][]) may expose internal representation by storing an externally mutable object into IUpdatableModule$AddExports.name  At IUpdatableModule.java:[line 41]
M V EI2: new org.eclipse.jdt.internal.compiler.env.IUpdatableModule$AddExports(char[], char[][]) may expose internal representation by storing an externally mutable object into IUpdatableModule$AddExports.targets  At IUpdatableModule.java:[line 42]
M V EI: org.eclipse.jdt.internal.compiler.env.IUpdatableModule$AddExports.getTargetModules() may expose internal representation by returning IUpdatableModule$AddExports.targets  At IUpdatableModule.java:[line 54]
M V EI: org.eclipse.jdt.internal.compiler.env.IUpdatableModule$AddExports.getName() may expose internal representation by returning IUpdatableModule$AddExports.name  At IUpdatableModule.java:[line 50]
M V EI: org.eclipse.jdt.internal.compiler.env.IUpdatableModule$UpdatesByKind.getList(IUpdatableModule$UpdateKind, boolean) may expose internal representation by returning IUpdatableModule$UpdatesByKind.moduleUpdates  At IUpdatableModule.java:[line 135]
M V EI: org.eclipse.jdt.internal.compiler.env.IUpdatableModule$UpdatesByKind.getList(IUpdatableModule$UpdateKind, boolean) may expose internal representation by returning IUpdatableModule$UpdatesByKind.packageUpdates  At IUpdatableModule.java:[line 139]
M V EI: org.apache.tomcat.dbcp.dbcp2.SQLExceptionList.getCauseList() may expose internal representation by returning SQLExceptionList.causeList  At SQLExceptionList.java:[line 53]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.SQLExceptionList(List) may expose internal representation by storing an externally mutable object into SQLExceptionList.causeList  At SQLExceptionList.java:[line 44]
M V EI2: org.apache.catalina.storeconfig.StoreDescription.setTransientAttributes(List) may expose internal representation by storing an externally mutable object into StoreDescription.transientAttributes  At StoreDescription.java:[line 246]
M V EI2: org.apache.catalina.storeconfig.StoreDescription.setStoreFactory(IStoreFactory) may expose internal representation by storing an externally mutable object into StoreDescription.storeFactory  At StoreDescription.java:[line 186]
M V EI: org.apache.catalina.storeconfig.StoreDescription.getStoreFactory() may expose internal representation by returning StoreDescription.storeFactory  At StoreDescription.java:[line 178]
M V EI: org.apache.catalina.storeconfig.StoreDescription.getTransientChildren() may expose internal representation by returning StoreDescription.transientChildren  At StoreDescription.java:[line 266]
M V EI2: org.apache.catalina.storeconfig.StoreDescription.setTransientChildren(List) may expose internal representation by storing an externally mutable object into StoreDescription.transientChildren  At StoreDescription.java:[line 274]
M V EI: org.apache.catalina.storeconfig.StoreDescription.getTransientAttributes() may expose internal representation by returning StoreDescription.transientAttributes  At StoreDescription.java:[line 238]
M P SBSC: org.eclipse.jdt.internal.compiler.util.ObjectVector.toString() concatenates strings using + in a loop  At ObjectVector.java:[line 138]
M V EI: org.eclipse.jdt.internal.compiler.impl.IrritantSet.getBits() may expose internal representation by returning IrritantSet.bits  At IrritantSet.java:[line 288]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfInt.toString() concatenates strings using + in a loop  At HashtableOfInt.java:[line 99]
M V EI: org.apache.catalina.mapper.WrapperMappingInfo.getWrapper() may expose internal representation by returning WrapperMappingInfo.wrapper  At WrapperMappingInfo.java:[line 44]
M V EI2: new org.apache.catalina.mapper.WrapperMappingInfo(String, Wrapper, boolean, boolean) may expose internal representation by storing an externally mutable object into WrapperMappingInfo.wrapper  At WrapperMappingInfo.java:[line 34]
M V EI: org.apache.tomcat.util.descriptor.tld.TagXml.getVariables() may expose internal representation by returning TagXml.variables  At TagXml.java:[line 122]
M V EI: org.apache.tomcat.util.descriptor.tld.TagXml.getAttributes() may expose internal representation by returning TagXml.attributes  At TagXml.java:[line 118]
M D NP: Load of known null value in org.apache.jasper.el.JasperELResolver.getValue(ELContext, Object, Object)  At JasperELResolver.java:[line 106]
M V EI: org.apache.tomcat.dbcp.pool2.impl.AbandonedConfig.getLogWriter() may expose internal representation by returning AbandonedConfig.logWriter  At AbandonedConfig.java:[line 140]
M V EI2: org.apache.tomcat.dbcp.pool2.impl.AbandonedConfig.setLogWriter(PrintWriter) may expose internal representation by storing an externally mutable object into AbandonedConfig.logWriter  At AbandonedConfig.java:[line 256]
M B Nm: The method name org.apache.tomcat.util.json.TokenMgrError.LexicalErr(boolean, int, int, int, String, int) doesn't start with a lower case letter  At TokenMgrError.java:[lines 123-124]
M B Se: org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport$QueryStatsComparator implements Comparator but not Serializable  At SlowQueryReport.java:[lines 496-505]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.ComponentInfoWithTypeAnnotation doesn't override RecordComponentInfo.equals(Object)  At ComponentInfoWithTypeAnnotation.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ComponentInfoWithTypeAnnotation.getTypeAnnotations() may expose internal representation by returning ComponentInfoWithTypeAnnotation.typeAnnotations  At ComponentInfoWithTypeAnnotation.java:[line 26]
H I Dm: Found reliance on default encoding in new org.apache.tomcat.jakartaee.bcel.classfile.Signature$MyByteArrayInputStream(String): String.getBytes()  At Signature.java:[line 131]
H I Dm: Found reliance on default encoding in org.apache.tomcat.jakartaee.bcel.classfile.Signature$MyByteArrayInputStream.getData(): new String(byte[])  At Signature.java:[line 136]
M V EI: org.apache.tomcat.dbcp.dbcp2.ListException.getExceptionList() may expose internal representation by returning ListException.exceptionList  At ListException.java:[line 53]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.ListException(String, List) may expose internal representation by storing an externally mutable object into ListException.exceptionList  At ListException.java:[line 44]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.managed.LocalXAConnectionFactory$LocalXAResource(Connection) may expose internal representation by storing an externally mutable object into LocalXAConnectionFactory$LocalXAResource.connection  At LocalXAConnectionFactory.java:[line 68]
M V EI: org.apache.tomcat.websocket.WsExtension.getParameters() may expose internal representation by returning WsExtension.parameters  At WsExtension.java:[line 44]
M V EI: org.apache.tomcat.util.modeler.ParameterInfo.createParameterInfo() may expose internal representation by returning FeatureInfo.info  At ParameterInfo.java:[line 53]
M V EI: org.apache.catalina.users.GenericUser.getUserDatabase() may expose internal representation by returning GenericUser.database  At GenericUser.java:[line 119]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.constantPoolName() may expose internal representation by returning BaseTypeBinding.constantPoolName  At BaseTypeBinding.java:[line 150]
M V EI: org.apache.catalina.tribes.group.Response.getSource() may expose internal representation by returning Response.source  At Response.java:[line 47]
M V EI2: new org.apache.catalina.tribes.group.Response(Member, Serializable) may expose internal representation by storing an externally mutable object into Response.source  At Response.java:[line 34]
M V EI2: org.apache.catalina.tribes.group.Response.setSource(Member) may expose internal representation by storing an externally mutable object into Response.source  At Response.java:[line 39]
M V EI2: new org.apache.catalina.tribes.group.GroupChannel$InterceptorIterator(ChannelInterceptor, ChannelInterceptor) may expose internal representation by storing an externally mutable object into GroupChannel$InterceptorIterator.end  At GroupChannel.java:[line 818]
M V EI2: new org.apache.catalina.tribes.group.GroupChannel$InterceptorIterator(ChannelInterceptor, ChannelInterceptor) may expose internal representation by storing an externally mutable object into GroupChannel$InterceptorIterator.start  At GroupChannel.java:[line 819]
M V EI: org.apache.tomcat.util.descriptor.web.SessionConfig.getSessionTrackingModes() may expose internal representation by returning SessionConfig.sessionTrackingModes  At SessionConfig.java:[line 97]
M V EI2: new org.apache.naming.NamingContextBindingsEnumeration(Iterator, Context) may expose internal representation by storing an externally mutable object into NamingContextBindingsEnumeration.iterator  At NamingContextBindingsEnumeration.java:[line 41]
M V EI2: new org.apache.naming.NamingContextBindingsEnumeration(Iterator, Context) may expose internal representation by storing an externally mutable object into NamingContextBindingsEnumeration.ctx  At NamingContextBindingsEnumeration.java:[line 42]
M V EI: org.apache.tomcat.util.bcel.classfile.ArrayElementValue.getElementValuesArray() may expose internal representation by returning ArrayElementValue.elementValues  At ArrayElementValue.java:[line 53]
M V EI: org.apache.jasper.servlet.JasperLoader.getPermissions(CodeSource) may expose internal representation by returning JasperLoader.permissionCollection  At JasperLoader.java:[line 167]
M V EI2: new org.apache.jasper.servlet.JasperLoader(URL[], ClassLoader, String, PermissionCollection) may expose internal representation by storing an externally mutable object into JasperLoader.permissionCollection  At JasperLoader.java:[line 42]
M V PERM: Custom class loader org.apache.jasper.servlet.JasperLoader.getPermissions(CodeSource) does not call its superclass's getPermissions()  At JasperLoader.java:[line 167]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.PolyParameterizedGenericMethodBinding(ParameterizedGenericMethodBinding) may expose internal representation by storing an externally mutable object into PolyParameterizedGenericMethodBinding.wrappedBinding  At PolyParameterizedGenericMethodBinding.java:[line 21]
M D NP: Possible null pointer dereference in org.apache.tomcat.jakartaee.bcel.util.ClassPath$JrtModule$1.getBase() due to return value of called method  Dereferenced at ClassPath.java:[line 289]
M V EI: jakarta.servlet.jsp.tagext.TagAdapter.getAdaptee() may expose internal representation by returning TagAdapter.simpleTagAdaptee  At TagAdapter.java:[line 123]
M V EI: jakarta.servlet.jsp.tagext.TagAdapter.getParent() may expose internal representation by returning TagAdapter.parent  At TagAdapter.java:[line 112]
M V EI2: new jakarta.servlet.jsp.tagext.TagAdapter(SimpleTag) may expose internal representation by storing an externally mutable object into TagAdapter.simpleTagAdaptee  At TagAdapter.java:[line 57]
M B Nm: Class org.apache.tomcat.jdbc.pool.TrapException is not derived from an Exception, even though it is named as such  At TrapException.java:[lines 33-80]
M V EI2: new jakarta.security.auth.message.callback.PasswordValidationCallback(Subject, String, char[]) may expose internal representation by storing an externally mutable object into PasswordValidationCallback.subject  At PasswordValidationCallback.java:[line 36]
M V EI2: new jakarta.security.auth.message.callback.PasswordValidationCallback(Subject, String, char[]) may expose internal representation by storing an externally mutable object into PasswordValidationCallback.password  At PasswordValidationCallback.java:[line 38]
M V EI: jakarta.security.auth.message.callback.PasswordValidationCallback.getSubject() may expose internal representation by returning PasswordValidationCallback.subject  At PasswordValidationCallback.java:[line 42]
M V EI: jakarta.security.auth.message.callback.PasswordValidationCallback.getPassword() may expose internal representation by returning PasswordValidationCallback.password  At PasswordValidationCallback.java:[line 50]
M V EI2: org.apache.tomcat.util.net.SocketProcessorBase.reset(SocketWrapperBase, SocketEvent) may expose internal representation by storing an externally mutable object into SocketProcessorBase.socketWrapper  At SocketProcessorBase.java:[line 33]
H M VO: Increment of volatile field org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.completedTasks in org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor$Worker)  At ThreadPoolExecutor.java:[line 1199]
M V EI2: new org.apache.tomcat.util.threads.ThreadPoolExecutor(int, int, long, TimeUnit, BlockingQueue, ThreadFactory, ThreadPoolExecutor$RejectedExecutionHandler) may expose internal representation by storing an externally mutable object into ThreadPoolExecutor.workQueue  At ThreadPoolExecutor.java:[line 1365]
M V EI: org.apache.tomcat.util.threads.ThreadPoolExecutor.getQueue() may expose internal representation by returning ThreadPoolExecutor.workQueue  At ThreadPoolExecutor.java:[line 1876]
M P SBSC: org.apache.tomcat.util.json.ParseException.initialise(Token, int[][], String[]) concatenates strings using + in a loop  At ParseException.java:[line 141]
M V EI: org.apache.catalina.webresources.AbstractResource.getWebResourceRoot() may expose internal representation by returning AbstractResource.root  At AbstractResource.java:[line 46]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException(Exception, char[], int, int) may expose internal representation by storing an externally mutable object into ClassFormatException.nestedException  At ClassFormatException.java:[line 65]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException(RuntimeException, char[]) may expose internal representation by storing an externally mutable object into ClassFormatException.nestedException  At ClassFormatException.java:[line 58]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException(Exception, char[], int, int) may expose internal representation by storing an externally mutable object into ClassFormatException.fileName  At ClassFormatException.java:[line 66]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException(RuntimeException, char[]) may expose internal representation by storing an externally mutable object into ClassFormatException.fileName  At ClassFormatException.java:[line 59]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException.getException() may expose internal representation by returning ClassFormatException.nestedException  At ClassFormatException.java:[line 89]
M V EI2: new org.apache.catalina.tribes.group.interceptors.OrderInterceptor$MessageOrder(int, ChannelMessage) may expose internal representation by storing an externally mutable object into OrderInterceptor$MessageOrder.msg  At OrderInterceptor.java:[line 257]
M V EI: org.apache.catalina.tribes.group.interceptors.OrderInterceptor$MessageOrder.getMessage() may expose internal representation by returning OrderInterceptor$MessageOrder.msg  At OrderInterceptor.java:[line 265]
M V EI2: org.apache.catalina.tribes.group.interceptors.OrderInterceptor$MessageOrder.setMessage(ChannelMessage) may expose internal representation by storing an externally mutable object into OrderInterceptor$MessageOrder.msg  At OrderInterceptor.java:[line 269]
M V EI: org.apache.catalina.tribes.group.interceptors.OrderInterceptor$MessageOrder.getNext() may expose internal representation by returning OrderInterceptor$MessageOrder.next  At OrderInterceptor.java:[line 276]
M V EI2: org.apache.catalina.tribes.group.interceptors.OrderInterceptor$MessageOrder.setNext(OrderInterceptor$MessageOrder) may expose internal representation by storing an externally mutable object into OrderInterceptor$MessageOrder.next  At OrderInterceptor.java:[line 273]
M V EI: org.apache.tomcat.jakartaee.commons.io.output.StringBuilderWriter.getBuilder() may expose internal representation by returning StringBuilderWriter.builder  At StringBuilderWriter.java:[line 153]
M V EI2: org.apache.tomcat.util.threads.TaskQueue.setParent(ThreadPoolExecutor) may expose internal representation by storing an externally mutable object into TaskQueue.parent  At TaskQueue.java:[line 53]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding(PackageBinding, char[][], LookupEnvironment) may expose internal representation by storing an externally mutable object into MissingTypeBinding.environment  At MissingTypeBinding.java:[line 34]
M V EI: org.apache.catalina.mapper.Mapper$MappedHost.getAliases() may expose internal representation by returning Mapper$MappedHost.aliases  At Mapper.java:[line 1634]
M V EI2: new org.apache.catalina.mapper.Mapper$MappedHost(String, Host) may expose internal representation by storing an externally mutable object into Mapper$MappedHost.realHost  At Mapper.java:[line 1603]
M V EI: org.apache.catalina.mapper.Mapper$MappedHost.getRealHost() may expose internal representation by returning Mapper$MappedHost.realHost  At Mapper.java:[line 1626]
M V EI2: new org.apache.catalina.mapper.Mapper$MappedHost(String, Mapper$MappedHost) may expose internal representation by storing an externally mutable object into Mapper$MappedHost.realHost  At Mapper.java:[line 1616]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher(IProcessorProvider, RoundEnvironment, Set, PrintWriter, PrintWriter) may expose internal representation by storing an externally mutable object into RoundDispatcher._traceProcessorInfo  At RoundDispatcher.java:[line 65]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher(IProcessorProvider, RoundEnvironment, Set, PrintWriter, PrintWriter) may expose internal representation by storing an externally mutable object into RoundDispatcher._traceRounds  At RoundDispatcher.java:[line 66]
M V EI2: new org.apache.tomcat.websocket.pojo.PojoMessageHandlerBase(Object, Method, Session, Object[], int, boolean, int, long) may expose internal representation by storing an externally mutable object into PojoMessageHandlerBase.method  At PojoMessageHandlerBase.java:[line 52]
M V EI2: new org.apache.tomcat.websocket.pojo.PojoMessageHandlerBase(Object, Method, Session, Object[], int, boolean, int, long) may expose internal representation by storing an externally mutable object into PojoMessageHandlerBase.params  At PojoMessageHandlerBase.java:[line 62]
M V EI2: new org.apache.tomcat.websocket.pojo.PojoMessageHandlerBase(Object, Method, Session, Object[], int, boolean, int, long) may expose internal representation by storing an externally mutable object into PojoMessageHandlerBase.session  At PojoMessageHandlerBase.java:[line 61]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfObject.toString() concatenates strings using + in a loop  At HashtableOfObject.java:[line 190]
M V EI2: new org.apache.catalina.authenticator.jaspic.SimpleServerAuthConfig(String, String, CallbackHandler, Map) may expose internal representation by storing an externally mutable object into SimpleServerAuthConfig.properties  At SimpleServerAuthConfig.java:[line 60]
M V EI: org.apache.tomcat.util.descriptor.web.FilterDef.getParameterMap() may expose internal representation by returning FilterDef.parameters  At FilterDef.java:[line 140]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithTypeAnnotations doesn't override MethodInfo.equals(Object)  At AnnotationMethodInfoWithTypeAnnotations.java:[line 1]
M V EI2: new org.apache.tomcat.websocket.WsRemoteEndpointImplClient(AsyncChannelWrapper) may expose internal representation by storing an externally mutable object into WsRemoteEndpointImplClient.channel  At WsRemoteEndpointImplClient.java:[line 33]
M V EI2: new org.apache.tomcat.util.log.SystemLogHandler(PrintStream) may expose internal representation by storing an externally mutable object into SystemLogHandler.out  At SystemLogHandler.java:[line 50]
H I Dm: Found reliance on default encoding in new org.apache.tomcat.util.log.SystemLogHandler(PrintStream): new org.apache.tomcat.util.log.SystemLogHandler(OutputStream)  At SystemLogHandler.java:[line 49]
M V EI2: new org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector(FileObject, String) may expose internal representation by storing an externally mutable object into Util$EncodingErrorCollector.fileObject  At Util.java:[line 106]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations doesn't override MethodInfo.equals(Object)  At MethodInfoWithParameterAnnotations.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.env.EnumConstantSignature.getTypeName() may expose internal representation by returning EnumConstantSignature.typeName  At EnumConstantSignature.java:[line 38]
M V EI: org.eclipse.jdt.internal.compiler.env.EnumConstantSignature.getEnumConstantName() may expose internal representation by returning EnumConstantSignature.constName  At EnumConstantSignature.java:[line 45]
M V EI2: new org.eclipse.jdt.internal.compiler.env.EnumConstantSignature(char[], char[]) may expose internal representation by storing an externally mutable object into EnumConstantSignature.constName  At EnumConstantSignature.java:[line 31]
M V EI2: new org.eclipse.jdt.internal.compiler.env.EnumConstantSignature(char[], char[]) may expose internal representation by storing an externally mutable object into EnumConstantSignature.typeName  At EnumConstantSignature.java:[line 30]
M V EI2: org.apache.tomcat.util.descriptor.tld.TaglibXml.setValidator(ValidatorXml) may expose internal representation by storing an externally mutable object into TaglibXml.validator  At TaglibXml.java:[line 90]
M V EI: org.apache.tomcat.util.descriptor.tld.TaglibXml.getTagFiles() may expose internal representation by returning TaglibXml.tagFiles  At TaglibXml.java:[line 106]
M V EI: org.apache.tomcat.util.descriptor.tld.TaglibXml.getTags() may expose internal representation by returning TaglibXml.tags  At TaglibXml.java:[line 98]
M V EI: org.apache.tomcat.util.descriptor.tld.TaglibXml.getValidator() may expose internal representation by returning TaglibXml.validator  At TaglibXml.java:[line 86]
M V EI: org.apache.tomcat.util.descriptor.tld.TaglibXml.getListeners() may expose internal representation by returning TaglibXml.listeners  At TaglibXml.java:[line 114]
M V EI: org.apache.tomcat.util.descriptor.tld.TaglibXml.getFunctions() may expose internal representation by returning TaglibXml.functions  At TaglibXml.java:[line 122]
M V EI2: new org.apache.tomcat.jdbc.pool.FairBlockingQueue$ItemFuture(FairBlockingQueue, Object) may expose internal representation by storing an externally mutable object into FairBlockingQueue$ItemFuture.this$0  At FairBlockingQueue.java:[line 449]
M V EI2: new org.apache.tomcat.jdbc.pool.FairBlockingQueue$ItemFuture(FairBlockingQueue, FairBlockingQueue$ExchangeCountDownLatch) may expose internal representation by storing an externally mutable object into FairBlockingQueue$ItemFuture.latch  At FairBlockingQueue.java:[line 454]
M V EI2: new org.apache.tomcat.jdbc.pool.FairBlockingQueue$ItemFuture(FairBlockingQueue, FairBlockingQueue$ExchangeCountDownLatch) may expose internal representation by storing an externally mutable object into FairBlockingQueue$ItemFuture.this$0  At FairBlockingQueue.java:[line 453]
M V EI2: new org.apache.tomcat.jdbc.pool.interceptor.StatementDecoratorInterceptor$StatementProxy(StatementDecoratorInterceptor, Statement, String) may expose internal representation by storing an externally mutable object into StatementDecoratorInterceptor$StatementProxy.delegate  At StatementDecoratorInterceptor.java:[line 162]
M V EI2: new org.apache.tomcat.jdbc.pool.interceptor.StatementDecoratorInterceptor$StatementProxy(StatementDecoratorInterceptor, Statement, String) may expose internal representation by storing an externally mutable object into StatementDecoratorInterceptor$StatementProxy.this$0  At StatementDecoratorInterceptor.java:[line 161]
M V EI2: org.apache.tomcat.jdbc.pool.interceptor.StatementDecoratorInterceptor$StatementProxy.setConstructor(Constructor) may expose internal representation by storing an externally mutable object into StatementDecoratorInterceptor$StatementProxy.constructor  At StatementDecoratorInterceptor.java:[line 192]
M V EI: org.apache.tomcat.jdbc.pool.interceptor.StatementDecoratorInterceptor$StatementProxy.getConstructor() may expose internal representation by returning StatementDecoratorInterceptor$StatementProxy.constructor  At StatementDecoratorInterceptor.java:[line 189]
M V EI: org.apache.tomcat.jdbc.pool.interceptor.StatementDecoratorInterceptor$StatementProxy.getDelegate() may expose internal representation by returning StatementDecoratorInterceptor$StatementProxy.delegate  At StatementDecoratorInterceptor.java:[line 166]
M V EI: org.apache.el.lang.VariableMapperFactory.create() may expose internal representation by returning VariableMapperFactory.momento  At VariableMapperFactory.java:[line 37]
M V EI2: new org.apache.el.lang.VariableMapperFactory(VariableMapper) may expose internal representation by storing an externally mutable object into VariableMapperFactory.target  At VariableMapperFactory.java:[line 33]
H I Dm: Found reliance on default encoding in org.apache.juli.FileHandler.openWriter(): new java.io.OutputStreamWriter(OutputStream)  At FileHandler.java:[line 470]
M D NP: Possible null pointer dereference in org.eclipse.jdt.internal.compiler.util.JRTUtil.sanitizedFileName(Path) due to return value of called method  Dereferenced at JRTUtil.java:[line 208]
M C NP: Null passed for non-null parameter of new java.io.PrintWriter(Writer) in jakarta.servlet.http.HttpServlet$NoBodyPrintWriter.resetBuffer()  Method invoked at HttpServlet.java:[line 1040]
H I Dm: Found reliance on default encoding in new jakarta.servlet.http.HttpServlet$NoBodyPrintWriter(HttpServlet$NoBodyOutputStream, String): new jakarta.servlet.http.HttpServlet$NoBodyPrintWriter(OutputStream)  At HttpServlet.java:[line 1020]
M B NP: org.apache.tomcat.util.buf.CharChunk.toString() may return null  At CharChunk.java:[line 401]
M B HE: org.apache.tomcat.util.buf.CharChunk defines equals but not hashCode  At CharChunk.java:[lines 418-421]
M V EI2: org.apache.tomcat.util.buf.CharChunk.setChars(char[], int, int) may expose internal representation by storing an externally mutable object into CharChunk.buff  At CharChunk.java:[line 120]
M V EI: org.apache.tomcat.util.buf.CharChunk.getBuffer() may expose internal representation by returning CharChunk.buff  At CharChunk.java:[line 140]
H I Dm: Found reliance on default encoding in org.apache.tomcat.util.http.fileupload.util.Streams.asString(InputStream): java.io.ByteArrayOutputStream.toString()  At Streams.java:[line 134]
M V EI: org.apache.tomcat.util.descriptor.XmlErrorHandler.getWarnings() may expose internal representation by returning XmlErrorHandler.warnings  At XmlErrorHandler.java:[line 62]
M V EI: org.apache.tomcat.util.descriptor.XmlErrorHandler.getErrors() may expose internal representation by returning XmlErrorHandler.errors  At XmlErrorHandler.java:[line 57]
M D SF: Switch statement found in org.apache.tomcat.util.descriptor.tld.TldRuleSet$Variable.setScope(String) where default case is missing  At TldRuleSet.java:[lines 364-372]
M V EI2: new org.apache.jasper.runtime.JspWriterImpl(ServletResponse, int, boolean) may expose internal representation by storing an externally mutable object into JspWriterImpl.response  At JspWriterImpl.java:[line 70]
M V EI: org.apache.tomcat.util.descriptor.web.ResourceBase.getNamingResources() may expose internal representation by returning ResourceBase.resources  At ResourceBase.java:[line 228]
M V EI2: org.apache.tomcat.util.descriptor.web.ResourceBase.setNamingResources(NamingResources) may expose internal representation by storing an externally mutable object into ResourceBase.resources  At ResourceBase.java:[line 232]
M V EI: org.apache.tomcat.util.descriptor.web.ResourceBase.getInjectionTargets() may expose internal representation by returning ResourceBase.injectionTargets  At ResourceBase.java:[line 146]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfPackage.toString() concatenates strings using + in a loop  At HashtableOfPackage.java:[line 119]
M V EI2: new org.apache.el.parser.ELParserTokenManager(SimpleCharStream) may expose internal representation by storing an externally mutable object into ELParserTokenManager.input_stream  At ELParserTokenManager.java:[line 2254]
M V EI2: org.apache.el.parser.ELParserTokenManager.ReInit(SimpleCharStream) may expose internal representation by storing an externally mutable object into ELParserTokenManager.input_stream  At ELParserTokenManager.java:[line 2273]
M D SF: Switch statement found in org.apache.el.parser.ELParserTokenManager.getNextToken() where default case is missing  At ELParserTokenManager.java:[lines 2092-2126]
M B Nm: The method name org.apache.el.parser.ELParserTokenManager.ReInit(SimpleCharStream) doesn't start with a lower case letter  At ELParserTokenManager.java:[lines 2269-2275]
M B Nm: The method name org.apache.el.parser.ELParserTokenManager.ReInit(SimpleCharStream, int) doesn't start with a lower case letter  At ELParserTokenManager.java:[lines 2290-2292]
M B Nm: The method name org.apache.el.parser.ELParserTokenManager.SwitchTo(int) doesn't start with a lower case letter  At ELParserTokenManager.java:[lines 2297-2302]
M D UC: Method org.apache.el.parser.ELParserTokenManager.SkipLexicalActions(Token) seems to be useless  At ELParserTokenManager.java:[line 2182]
M V EI: org.eclipse.jdt.internal.compiler.env.ClassSignature.getTypeName() may expose internal representation by returning ClassSignature.className  At ClassSignature.java:[line 37]
M V EI2: new org.eclipse.jdt.internal.compiler.env.ClassSignature(char[]) may expose internal representation by storing an externally mutable object into ClassSignature.className  At ClassSignature.java:[line 30]
M V EI2: org.apache.catalina.valves.ValveBase.setContainer(Container) may expose internal representation by storing an externally mutable object into ValveBase.container  At ValveBase.java:[line 100]
M V EI: org.apache.catalina.valves.ValveBase.getContainer() may expose internal representation by returning ValveBase.container  At ValveBase.java:[line 89]
M V EI: org.apache.catalina.valves.ValveBase.getNext() may expose internal representation by returning ValveBase.next  At ValveBase.java:[line 121]
M V EI2: org.apache.catalina.valves.ValveBase.setNext(Valve) may expose internal representation by storing an externally mutable object into ValveBase.next  At ValveBase.java:[line 132]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithTypeAnnotation doesn't override FieldInfo.equals(Object)  At FieldInfoWithTypeAnnotation.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithTypeAnnotation.getTypeAnnotations() may expose internal representation by returning FieldInfoWithTypeAnnotation.typeAnnotations  At FieldInfoWithTypeAnnotation.java:[line 28]
M V EI: org.apache.catalina.util.ManifestResource.getAvailableExtensions() may expose internal representation by returning ManifestResource.availableExtensions  At ManifestResource.java:[line 67]
M V EI: org.apache.catalina.util.ManifestResource.getRequiredExtensions() may expose internal representation by returning ManifestResource.requiredExtensions  At ManifestResource.java:[line 76]
M D SF: Switch statement found in org.apache.catalina.util.ManifestResource.toString() where default case is missing  At ManifestResource.java:[lines 128-131]
M V EI2: new org.apache.catalina.ssi.ResponseIncludeWrapper(HttpServletResponse, ServletOutputStream) may expose internal representation by storing an externally mutable object into ResponseIncludeWrapper.captureServletOutputStream  At ResponseIncludeWrapper.java:[line 62]
M V EI: org.apache.catalina.ssi.ResponseIncludeWrapper.getWriter() may expose internal representation by returning ResponseIncludeWrapper.printWriter  At ResponseIncludeWrapper.java:[line 99]
M V EI: org.apache.catalina.ssi.ResponseIncludeWrapper.getOutputStream() may expose internal representation by returning ResponseIncludeWrapper.servletOutputStream  At ResponseIncludeWrapper.java:[line 119]
M V EI2: org.apache.catalina.ssi.ResponseIncludeWrapper.getOutputStream() may expose internal representation by storing an externally mutable object into ResponseIncludeWrapper.servletOutputStream  At ResponseIncludeWrapper.java:[line 117]
M D SF: Switch statement found in org.apache.catalina.util.DOMWriter.print(Node) where default case is missing  At DOMWriter.java:[lines 54-103]
M V EI2: new org.apache.catalina.ssi.SSIMediator(SSIExternalResolver, long) may expose internal representation by storing an externally mutable object into SSIMediator.ssiExternalResolver  At SSIMediator.java:[line 68]
M D RCN: Redundant nullcheck of charset, which is known to be non-null in org.apache.tomcat.util.buf.CharsetCache.getCharset(String)  Redundant null check at CharsetCache.java:[line 194]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.DelegatingStatement(DelegatingConnection, Statement) may expose internal representation by storing an externally mutable object into DelegatingStatement.statement  At DelegatingStatement.java:[line 59]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.DelegatingStatement(DelegatingConnection, Statement) may expose internal representation by storing an externally mutable object into DelegatingStatement.connection  At DelegatingStatement.java:[line 60]
M V EI2: org.apache.tomcat.dbcp.dbcp2.DelegatingStatement.setDelegate(Statement) may expose internal representation by storing an externally mutable object into DelegatingStatement.statement  At DelegatingStatement.java:[line 711]
M V EI: org.apache.tomcat.dbcp.dbcp2.DelegatingStatement.getDelegate() may expose internal representation by returning DelegatingStatement.statement  At DelegatingStatement.java:[line 414]
M V EI2: new org.apache.tomcat.jdbc.pool.MultiLockFairBlockingQueue$ItemFuture(MultiLockFairBlockingQueue, Object) may expose internal representation by storing an externally mutable object into MultiLockFairBlockingQueue$ItemFuture.this$0  At MultiLockFairBlockingQueue.java:[line 448]
M V EI2: new org.apache.tomcat.jdbc.pool.MultiLockFairBlockingQueue$ItemFuture(MultiLockFairBlockingQueue, MultiLockFairBlockingQueue$ExchangeCountDownLatch) may expose internal representation by storing an externally mutable object into MultiLockFairBlockingQueue$ItemFuture.latch  At MultiLockFairBlockingQueue.java:[line 453]
M V EI2: new org.apache.tomcat.jdbc.pool.MultiLockFairBlockingQueue$ItemFuture(MultiLockFairBlockingQueue, MultiLockFairBlockingQueue$ExchangeCountDownLatch) may expose internal representation by storing an externally mutable object into MultiLockFairBlockingQueue$ItemFuture.this$0  At MultiLockFairBlockingQueue.java:[line 452]
M V EI2: org.apache.tomcat.util.json.JSONParserTokenManager.ReInit(JavaCharStream) may expose internal representation by storing an externally mutable object into JSONParserTokenManager.input_stream  At JSONParserTokenManager.java:[line 807]
M V EI2: new org.apache.tomcat.util.json.JSONParserTokenManager(JavaCharStream) may expose internal representation by storing an externally mutable object into JSONParserTokenManager.input_stream  At JSONParserTokenManager.java:[line 791]
M B Nm: The method name org.apache.tomcat.util.json.JSONParserTokenManager.ReInit(JavaCharStream) doesn't start with a lower case letter  At JSONParserTokenManager.java:[lines 803-809]
M B Nm: The method name org.apache.tomcat.util.json.JSONParserTokenManager.ReInit(JavaCharStream, int) doesn't start with a lower case letter  At JSONParserTokenManager.java:[lines 823-825]
M B Nm: The method name org.apache.tomcat.util.json.JSONParserTokenManager.SwitchTo(int) doesn't start with a lower case letter  At JSONParserTokenManager.java:[lines 830-835]
M D UC: Method org.apache.tomcat.util.json.JSONParserTokenManager.SkipLexicalActions(Token) seems to be useless  At JSONParserTokenManager.java:[line 739]
M D UC: Method org.apache.tomcat.util.json.JSONParserTokenManager.TokenLexicalActions(Token) seems to be useless  At JSONParserTokenManager.java:[line 756]
H B DMI: Random object created and used only once in org.apache.catalina.realm.DigestCredentialHandlerBase.mutate(String)  At DigestCredentialHandlerBase.java:[line 125]
H B ES: Comparison of String parameter using == or != in org.apache.catalina.realm.DigestCredentialHandlerBase.equals(String, String, boolean)  At DigestCredentialHandlerBase.java:[line 315]
M V EI2: new org.apache.jasper.runtime.ServletResponseWrapperInclude(ServletResponse, JspWriter) may expose internal representation by storing an externally mutable object into ServletResponseWrapperInclude.jspWriter  At ServletResponseWrapperInclude.java:[line 51]
M V EI: org.apache.jasper.runtime.ServletResponseWrapperInclude.getWriter() may expose internal representation by returning ServletResponseWrapperInclude.printWriter  At ServletResponseWrapperInclude.java:[line 59]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.DriverConnectionFactory(Driver, String, Properties) may expose internal representation by storing an externally mutable object into DriverConnectionFactory.properties  At DriverConnectionFactory.java:[line 47]
M V EI: org.apache.tomcat.dbcp.dbcp2.DriverConnectionFactory.getProperties() may expose internal representation by returning DriverConnectionFactory.properties  At DriverConnectionFactory.java:[line 76]
M V EI2: org.apache.tomcat.websocket.PerMessageDeflate.setNext(Transformation) may expose internal representation by storing an externally mutable object into PerMessageDeflate.next  At PerMessageDeflate.java:[line 305]
M D DCN: Do not catch NullPointerException like in org.apache.tomcat.websocket.PerMessageDeflate.getMoreData(byte, boolean, int, ByteBuffer)  At PerMessageDeflate.java:[line 207]
M D DCN: Do not catch NullPointerException like in org.apache.tomcat.websocket.PerMessageDeflate.getMoreData(byte, boolean, int, ByteBuffer)  At PerMessageDeflate.java:[line 239]
M D DCN: Do not catch NullPointerException like in org.apache.tomcat.websocket.PerMessageDeflate.sendMessagePart(List)  At PerMessageDeflate.java:[line 362]
M D DCN: Do not catch NullPointerException like in org.apache.tomcat.websocket.PerMessageDeflate.sendMessagePart(List)  At PerMessageDeflate.java:[line 420]
M D DCN: Do not catch NullPointerException like in org.apache.tomcat.websocket.PerMessageDeflate.startNewMessage()  At PerMessageDeflate.java:[line 474]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithTypeAnnotations doesn't override MethodInfo.equals(Object)  At MethodInfoWithTypeAnnotations.java:[line 1]
M V EI: org.apache.tomcat.dbcp.pool2.impl.BaseGenericObjectPool.getJmxName() may expose internal representation by returning BaseGenericObjectPool.objectName  At BaseGenericObjectPool.java:[line 659]
M C NP: Possible null pointer dereference of AccessRuleSet.classpathEntryName in org.eclipse.jdt.internal.compiler.env.AccessRuleSet.equals(Object)  Dereferenced at AccessRuleSet.java:[line 54]
M V EI2: new org.eclipse.jdt.internal.compiler.env.AccessRuleSet(AccessRule[], byte, String) may expose internal representation by storing an externally mutable object into AccessRuleSet.accessRules  At AccessRuleSet.java:[line 37]
M V EI: org.eclipse.jdt.internal.compiler.env.AccessRuleSet.getAccessRules() may expose internal representation by returning AccessRuleSet.accessRules  At AccessRuleSet.java:[line 66]
M B IC: Initialization of org.eclipse.jdt.internal.compiler.impl.Constant accesses class org.eclipse.jdt.internal.compiler.impl.DoubleConstant, which isn't initialized yet  At Constant.java:[line 23]
M V EI: org.apache.tomcat.util.modeler.OperationInfo.getSignature() may expose internal representation by returning OperationInfo.parameters  At OperationInfo.java:[line 110]
M V EI: jakarta.servlet.jsp.tagext.TagLibraryInfo.getTags() may expose internal representation by returning TagLibraryInfo.tags  At TagLibraryInfo.java:[line 113]
M V EI: jakarta.servlet.jsp.tagext.TagLibraryInfo.getFunctions() may expose internal representation by returning TagLibraryInfo.functions  At TagLibraryInfo.java:[line 185]
M V EI: jakarta.servlet.jsp.tagext.TagLibraryInfo.getTagFiles() may expose internal representation by returning TagLibraryInfo.tagFiles  At TagLibraryInfo.java:[line 125]
M V EI2: new org.apache.catalina.tribes.membership.Membership(Member, Comparator, boolean) may expose internal representation by storing an externally mutable object into Membership.local  At Membership.java:[line 107]
M V EI: org.apache.catalina.tribes.membership.Membership.getMembers() may expose internal representation by returning Membership.members  At Membership.java:[line 286]
H M ML: Synchronization on Membership.membersLock in futile attempt to guard it  At Membership.java:[line 84]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.provides() may expose internal representation by returning ModuleInfo.provides  At ModuleInfo.java:[line 79]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.name() may expose internal representation by returning ModuleInfo.name  At ModuleInfo.java:[line 60]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.requires() may expose internal representation by returning ModuleInfo.requires  At ModuleInfo.java:[line 67]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.getAnnotations() may expose internal representation by returning ModuleInfo.annotations  At ModuleInfo.java:[line 87]
M V EI2: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.setName(char[]) may expose internal representation by storing an externally mutable object into ModuleInfo.name  At ModuleInfo.java:[line 63]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.exports() may expose internal representation by returning ModuleInfo.exports  At ModuleInfo.java:[line 71]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.uses() may expose internal representation by returning ModuleInfo.uses  At ModuleInfo.java:[line 75]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.opens() may expose internal representation by returning ModuleInfo.opens  At ModuleInfo.java:[line 83]
H B Se: Class org.apache.tomcat.dbcp.dbcp2.datasources.UserPassKey defines non-transient non-serializable instance field name  In UserPassKey.java
H B Se: Class org.apache.tomcat.dbcp.dbcp2.datasources.UserPassKey defines non-transient non-serializable instance field password  In UserPassKey.java
M V MS: org.apache.naming.factory.ResourceLinkFactory.setGlobalContext(Context) may expose internal static state by storing a mutable object into a static field org.apache.naming.factory.ResourceLinkFactory.globalContext  At ResourceLinkFactory.java:[line 66]
M D Eq: org.apache.naming.ServiceRef doesn't override javax.naming.Reference.equals(Object)  At ServiceRef.java:[line 1]
H I Dm: Found reliance on default encoding in org.apache.tomcat.util.http.fileupload.MultipartStream.readHeaders(): java.io.ByteArrayOutputStream.toString()  At MultipartStream.java:[line 542]
M M UL: org.apache.tomcat.jdbc.pool.FairBlockingQueue.poll(long, TimeUnit) does not release lock on all exception paths  At FairBlockingQueue.java:[line 142]
M B NP: org.apache.tomcat.util.buf.ByteChunk.toString() may return null  At ByteChunk.java:[line 533]
M B HE: org.apache.tomcat.util.buf.ByteChunk defines equals but not hashCode  At ByteChunk.java:[lines 562-565]
M V EI2: org.apache.tomcat.util.buf.ByteChunk.setBytes(byte[], int, int) may expose internal representation by storing an externally mutable object into ByteChunk.buff  At ByteChunk.java:[line 197]
M V EI: org.apache.tomcat.util.buf.ByteChunk.getBuffer() may expose internal representation by returning ByteChunk.buff  At ByteChunk.java:[line 230]
M V EI2: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.setDiskStartNumber(ZipLong) may expose internal representation by storing an externally mutable object into Zip64ExtendedInformationExtraField.diskStart  At Zip64ExtendedInformationExtraField.java:[line 325]
M V EI: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getDiskStartNumber() may expose internal representation by returning Zip64ExtendedInformationExtraField.diskStart  At Zip64ExtendedInformationExtraField.java:[line 317]
M V EI2: new org.apache.tomcat.jakartaee.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField(ZipEightByteInteger, ZipEightByteInteger, ZipEightByteInteger, ZipLong) may expose internal representation by storing an externally mutable object into Zip64ExtendedInformationExtraField.diskStart  At Zip64ExtendedInformationExtraField.java:[line 103]
M D ST: Write to static field org.eclipse.jdt.internal.compiler.impl.CompilerOptions.tolerateIllegalAmbiguousVarargsInvocation from instance method new org.eclipse.jdt.internal.compiler.impl.CompilerOptions(Map)  At CompilerOptions.java:[line 523]
M D RCN: Redundant nullcheck of result, which is known to be non-null in org.eclipse.jdt.internal.compiler.impl.CompilerOptions.stringToNameList(String)  Redundant null check at CompilerOptions.java:[line 2131]
H I Dm: Found reliance on default encoding in new org.eclipse.jdt.internal.compiler.util.GenericXMLWriter(OutputStream, String, boolean): new java.io.PrintWriter(OutputStream)  At GenericXMLWriter.java:[line 64]
M V EI2: new org.eclipse.jdt.internal.compiler.problem.DefaultProblem(char[], String, int, String[], int, int, int, int, int) may expose internal representation by storing an externally mutable object into DefaultProblem.fileName  At DefaultProblem.java:[line 49]
M V EI2: new org.eclipse.jdt.internal.compiler.problem.DefaultProblem(char[], String, int, String[], int, int, int, int, int) may expose internal representation by storing an externally mutable object into DefaultProblem.arguments  At DefaultProblem.java:[line 52]
M V EI: org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getOriginatingFileName() may expose internal representation by returning DefaultProblem.fileName  At DefaultProblem.java:[line 205]
M V EI: org.eclipse.jdt.internal.compiler.problem.DefaultProblem.getArguments() may expose internal representation by returning DefaultProblem.arguments  At DefaultProblem.java:[line 119]
M V EI2: org.eclipse.jdt.internal.compiler.problem.DefaultProblem.setOriginatingFileName(char[]) may expose internal representation by storing an externally mutable object into DefaultProblem.fileName  At DefaultProblem.java:[line 254]
M P SBSC: org.eclipse.jdt.internal.compiler.problem.DefaultProblem.toString() concatenates strings using + in a loop  At DefaultProblem.java:[line 281]
M D RV: Return value of java.nio.file.FileSystems.getDefault() ignored, but method has no side effect  At LogFactory.java:[line 88]
M B Nm: The field name org.eclipse.jdt.internal.compiler.ast.OperatorExpression.OperatorSignatures doesn't start with a lower case letter  In OperatorExpression.java
M P SBSC: org.eclipse.jdt.internal.compiler.ast.OperatorExpression.generateTableTestCase() concatenates strings using + in a loop  At OperatorExpression.java:[line 167]
M V EI2: org.apache.catalina.core.StandardPipeline.setBasic(Valve) may expose internal representation by storing an externally mutable object into StandardPipeline.basic  At StandardPipeline.java:[line 307]
M V EI: org.apache.catalina.core.StandardPipeline.getFirst() may expose internal representation by returning StandardPipeline.first  At StandardPipeline.java:[line 467]
M V EI: org.apache.catalina.core.StandardPipeline.getFirst() may expose internal representation by returning StandardPipeline.basic  At StandardPipeline.java:[line 470]
M V EI: org.apache.catalina.core.StandardPipeline.getBasic() may expose internal representation by returning StandardPipeline.basic  At StandardPipeline.java:[line 238]
M V EI: org.apache.catalina.core.StandardPipeline.getContainer() may expose internal representation by returning StandardPipeline.container  At StandardPipeline.java:[line 138]
M V EI2: org.apache.catalina.core.StandardPipeline.addValve(Valve) may expose internal representation by storing an externally mutable object into StandardPipeline.first  At StandardPipeline.java:[line 352]
M V EI2: org.apache.catalina.core.StandardPipeline.setContainer(Container) may expose internal representation by storing an externally mutable object into StandardPipeline.container  At StandardPipeline.java:[line 149]
H B DMI: Random object created and used only once in org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom()  At SessionIdGeneratorBase.java:[line 290]
H B DMI: Random object created and used only once in org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom()  At SessionIdGeneratorBase.java:[line 295]
M V EI2: new org.apache.tomcat.util.security.PrivilegedSetAccessControlContext(Thread) may expose internal representation by storing an externally mutable object into PrivilegedSetAccessControlContext.t  At PrivilegedSetAccessControlContext.java:[line 52]
M M UL: org.apache.tomcat.jdbc.pool.MultiLockFairBlockingQueue.poll(long, TimeUnit) does not release lock on all exception paths  At MultiLockFairBlockingQueue.java:[line 152]
M V EI: org.apache.tomcat.util.net.jsse.PEMFile.getCertificates() may expose internal representation by returning PEMFile.certificates  At PEMFile.java:[line 86]
M D SF: Switch statement found in new org.apache.tomcat.util.net.jsse.PEMFile(String, String, String) where default case is missing  At PEMFile.java:[lines 135-156]
M B OS: new org.apache.tomcat.util.net.jsse.PEMFile(String, String, String) may fail to close stream  At PEMFile.java:[line 107]
M V EI2: new org.apache.catalina.ssi.SSIProcessor(SSIExternalResolver, int, boolean) may expose internal representation by storing an externally mutable object into SSIProcessor.ssiExternalResolver  At SSIProcessor.java:[line 50]
M V EI: org.apache.tomcat.jdbc.pool.jmx.ConnectionPool.getPool() may expose internal representation by returning ConnectionPool.pool  At ConnectionPool.java:[line 71]
M V EI2: org.apache.tomcat.jdbc.pool.jmx.ConnectionPool.preRegister(MBeanServer, ObjectName) may expose internal representation by storing an externally mutable object into ConnectionPool.oname  At ConnectionPool.java:[line 85]
M V EI2: new org.apache.tomcat.jdbc.pool.jmx.ConnectionPool(ConnectionPool) may expose internal representation by storing an externally mutable object into ConnectionPool.pool  At ConnectionPool.java:[line 67]
M V EI: org.apache.tomcat.jdbc.pool.jmx.ConnectionPool.getObjectName() may expose internal representation by returning ConnectionPool.oname  At ConnectionPool.java:[line 79]
M V EI: org.apache.catalina.webresources.FileResource.getManifest() may expose internal representation by returning FileResource.manifest  At FileResource.java:[line 290]
M V EI2: new org.apache.catalina.webresources.FileResource(WebResourceRoot, String, File, boolean, Manifest) may expose internal representation by storing an externally mutable object into FileResource.manifest  At FileResource.java:[line 89]
H I Dm: Found reliance on default encoding in org.apache.catalina.webresources.FileResource.getContent(): new String(byte[])  At FileResource.java:[line 231]
M V EI: org.apache.tomcat.util.descriptor.web.SecurityCollection.findOmittedMethods() may expose internal representation by returning SecurityCollection.omittedMethods  At SecurityCollection.java:[line 265]
M V EI: org.apache.tomcat.util.descriptor.web.SecurityCollection.findPatterns() may expose internal representation by returning SecurityCollection.patterns  At SecurityCollection.java:[line 291]
M V EI: org.apache.tomcat.util.descriptor.web.SecurityCollection.findMethods() may expose internal representation by returning SecurityCollection.methods  At SecurityCollection.java:[line 255]
M V EI: org.apache.tomcat.jdbc.pool.PoolProperties$InterceptorDefinition.getProperties() may expose internal representation by returning PoolProperties$InterceptorDefinition.properties  At PoolProperties.java:[line 960]
M V EI2: new org.apache.tomcat.util.net.SSLHostConfigCertificate(SSLHostConfig, SSLHostConfigCertificate$Type) may expose internal representation by storing an externally mutable object into SSLHostConfigCertificate.sslHostConfig  At SSLHostConfigCertificate.java:[line 83]
M V EI: org.apache.tomcat.util.net.SSLHostConfigCertificate.getSSLHostConfig() may expose internal representation by returning SSLHostConfigCertificate.sslHostConfig  At SSLHostConfigCertificate.java:[line 99]
M V EI2: org.apache.tomcat.util.net.SSLHostConfigCertificate.setObjectName(ObjectName) may expose internal representation by storing an externally mutable object into SSLHostConfigCertificate.oname  At SSLHostConfigCertificate.java:[line 111]
M V EI2: org.apache.tomcat.util.net.SSLHostConfigCertificate.setCertificateKeystore(KeyStore) may expose internal representation by storing an externally mutable object into SSLHostConfigCertificate.certificateKeystore  At SSLHostConfigCertificate.java:[line 199]
M V EI: org.apache.tomcat.util.net.SSLHostConfigCertificate.getObjectName() may expose internal representation by returning SSLHostConfigCertificate.oname  At SSLHostConfigCertificate.java:[line 106]
M V EI2: new org.apache.catalina.session.StandardSession(Manager) may expose internal representation by storing an externally mutable object into StandardSession.manager  At StandardSession.java:[line 98]
M V EI: org.apache.catalina.session.StandardSession.getManager() may expose internal representation by returning StandardSession.manager  At StandardSession.java:[line 532]
M V EI2: org.apache.catalina.session.StandardSession.setManager(Manager) may expose internal representation by storing an externally mutable object into StandardSession.manager  At StandardSession.java:[line 543]
M V EI: org.apache.catalina.session.StandardSession.getSession() may expose internal representation by returning StandardSession.facade  At StandardSession.java:[line 626]
M B Se: The field org.apache.catalina.session.StandardSession.activityCheck is transient but isn't set by deserialization  In StandardSession.java
M B Se: The field org.apache.catalina.session.StandardSession.support is transient but isn't set by deserialization  In StandardSession.java
M B Se: The field org.apache.catalina.session.StandardSession.notes is transient but isn't set by deserialization  In StandardSession.java
M B Se: The field org.apache.catalina.session.StandardSession.listeners is transient but isn't set by deserialization  In StandardSession.java
M B Se: The field org.apache.catalina.session.StandardSession.lastAccessAtStart is transient but isn't set by deserialization  In StandardSession.java
M V EI: org.apache.tomcat.util.descriptor.web.FilterMap.getURLPatterns() may expose internal representation by returning FilterMap.urlPatterns  At FilterMap.java:[line 126]
M V EI: org.apache.tomcat.util.descriptor.web.FilterMap.getServletNames() may expose internal representation by returning FilterMap.servletNames  At FilterMap.java:[line 81]
M V EI2: new org.apache.catalina.tribes.group.RpcMessage(byte[], byte[], Serializable) may expose internal representation by storing an externally mutable object into RpcMessage.uuid  At RpcMessage.java:[line 40]
M V EI2: new org.apache.catalina.tribes.group.RpcMessage(byte[], byte[], Serializable) may expose internal representation by storing an externally mutable object into RpcMessage.rpcId  At RpcMessage.java:[line 39]
M V EI2: new org.apache.catalina.core.ApplicationServletRegistration(Wrapper, Context) may expose internal representation by storing an externally mutable object into ApplicationServletRegistration.context  At ApplicationServletRegistration.java:[line 51]
M V EI2: org.apache.catalina.core.ApplicationServletRegistration.setServletSecurity(ServletSecurityElement) may expose internal representation by storing an externally mutable object into ApplicationServletRegistration.constraint  At ApplicationServletRegistration.java:[line 161]
M V EI2: new org.apache.catalina.core.ApplicationServletRegistration(Wrapper, Context) may expose internal representation by storing an externally mutable object into ApplicationServletRegistration.wrapper  At ApplicationServletRegistration.java:[line 50]
M V EI: org.eclipse.jdt.internal.compiler.impl.JavaFeature.getRestrictedKeywords() may expose internal representation by returning JavaFeature.restrictedKeywords  At JavaFeature.java:[line 72]
M V EI: org.apache.jasper.compiler.JspRuntimeContext.getParentClassLoader() may expose internal representation by returning JspRuntimeContext.parentClassLoader  At JspRuntimeContext.java:[line 283]
M V EI: org.apache.jasper.compiler.JspRuntimeContext.getSmaps() may expose internal representation by returning JspRuntimeContext.smaps  At JspRuntimeContext.java:[line 439]
M V EI2: new org.apache.jasper.compiler.JspRuntimeContext(ServletContext, Options) may expose internal representation by storing an externally mutable object into JspRuntimeContext.context  At JspRuntimeContext.java:[line 90]
M V EI: org.apache.jasper.compiler.JspRuntimeContext.getCodeSource() may expose internal representation by returning JspRuntimeContext.codeSource  At JspRuntimeContext.java:[line 274]
M V EI: org.apache.jasper.compiler.JspRuntimeContext.getPermissionCollection() may expose internal representation by returning JspRuntimeContext.permissionCollection  At JspRuntimeContext.java:[line 293]
M M VO: Increment of volatile field org.apache.coyote.http2.HpackDecoder.headerCount in org.apache.coyote.http2.HpackDecoder.emitHeader(String, String)  At HpackDecoder.java:[line 430]
M M VO: Increment of volatile field org.apache.coyote.http2.HpackDecoder.headerCount in org.apache.coyote.http2.HpackDecoder.emitHeader(String, String)  At HpackDecoder.java:[line 434]
H C SA: Self assignment of field HpackDecoder.filledTableSlots in org.apache.coyote.http2.HpackDecoder.handleMaxMemorySizeChange(ByteBuffer, int)  At HpackDecoder.java:[line 194]
H C SA: Self assignment of field HpackDecoder.currentMemorySize in org.apache.coyote.http2.HpackDecoder.handleMaxMemorySizeChange(ByteBuffer, int)  At HpackDecoder.java:[line 195]
M V EI: org.apache.tomcat.util.net.SSLHostConfig.getJsseCipherNames() may expose internal representation by returning SSLHostConfig.jsseCipherNames  At SSLHostConfig.java:[line 414]
M V EI2: org.apache.tomcat.util.net.SSLHostConfig.setObjectName(ObjectName) may expose internal representation by storing an externally mutable object into SSLHostConfig.oname  At SSLHostConfig.java:[line 230]
M V EI: org.apache.tomcat.util.net.SSLHostConfig.getProtocols() may expose internal representation by returning SSLHostConfig.protocols  At SSLHostConfig.java:[line 498]
M V EI: org.apache.tomcat.util.net.SSLHostConfig.getCipherList() may expose internal representation by returning SSLHostConfig.cipherList  At SSLHostConfig.java:[line 399]
M V EI2: org.apache.tomcat.util.net.SSLHostConfig.setTrustStore(KeyStore) may expose internal representation by storing an externally mutable object into SSLHostConfig.truststore  At SSLHostConfig.java:[line 650]
M V EI: org.apache.tomcat.util.net.SSLHostConfig.getEnabledProtocols() may expose internal representation by returning SSLHostConfig.enabledProtocols  At SSLHostConfig.java:[line 200]
M V EI: org.apache.tomcat.util.net.SSLHostConfig.getCertificates(boolean) may expose internal representation by returning SSLHostConfig.certificates  At SSLHostConfig.java:[line 290]
M V EI2: org.apache.tomcat.util.net.SSLHostConfig.setOpenSslConf(OpenSSLConf) may expose internal representation by storing an externally mutable object into SSLHostConfig.openSslConf  At SSLHostConfig.java:[line 277]
M V EI: org.apache.tomcat.util.net.SSLHostConfig.getEnabledCiphers() may expose internal representation by returning SSLHostConfig.enabledCiphers  At SSLHostConfig.java:[line 215]
M V EI2: org.apache.tomcat.util.net.SSLHostConfig.setEnabledCiphers(String[]) may expose internal representation by storing an externally mutable object into SSLHostConfig.enabledCiphers  At SSLHostConfig.java:[line 220]
M V EI: org.apache.tomcat.util.net.SSLHostConfig.getOpenSslConf() may expose internal representation by returning SSLHostConfig.openSslConf  At SSLHostConfig.java:[line 266]
M V EI2: org.apache.tomcat.util.net.SSLHostConfig.setEnabledProtocols(String[]) may expose internal representation by storing an externally mutable object into SSLHostConfig.enabledProtocols  At SSLHostConfig.java:[line 205]
M V EI: org.apache.tomcat.util.net.SSLHostConfig.getObjectName() may expose internal representation by returning SSLHostConfig.oname  At SSLHostConfig.java:[line 225]
M V EI: org.apache.tomcat.util.modeler.ManagedBean.getNotifications() may expose internal representation by returning ManagedBean.notifications  At ManagedBean.java:[line 192]
M V MS: Public static org.apache.catalina.tribes.io.BufferPool.getBufferPool() may expose internal representation by returning BufferPool.instance  At BufferPool.java:[line 50]
H B DMI: Random object created and used only once in org.apache.catalina.tribes.util.UUIDGenerator.<static initializer for UUIDGenerator>()  At UUIDGenerator.java:[line 46]
H B DMI: Random object created and used only once in org.apache.catalina.tribes.util.UUIDGenerator.<static initializer for UUIDGenerator>()  At UUIDGenerator.java:[line 50]
M V EI2: org.apache.tomcat.jdbc.pool.PoolProperties.setDbProperties(Properties) may expose internal representation by storing an externally mutable object into PoolProperties.dbProperties  At PoolProperties.java:[line 530]
M V EI: org.apache.tomcat.jdbc.pool.PoolProperties.getJdbcInterceptorsAsArray() may expose internal representation by returning PoolProperties.interceptors  At PoolProperties.java:[line 502]
M V EI: org.apache.tomcat.jdbc.pool.PoolProperties.getDbProperties() may expose internal representation by returning PoolProperties.dbProperties  At PoolProperties.java:[line 155]
H I Dm: Found reliance on default encoding in org.apache.tomcat.jdbc.pool.PoolProperties.getProperties(String, Properties): String.getBytes()  At PoolProperties.java:[line 1213]
M V EI: org.apache.tomcat.util.net.TLSClientHelloExtractor.getClientRequestedApplicationProtocols() may expose internal representation by returning TLSClientHelloExtractor.clientRequestedApplicationProtocols  At TLSClientHelloExtractor.java:[line 233]
M V EI: org.apache.tomcat.util.net.TLSClientHelloExtractor.getClientRequestedCipherNames() may expose internal representation by returning TLSClientHelloExtractor.clientRequestedCipherNames  At TLSClientHelloExtractor.java:[line 224]
M V EI: org.apache.tomcat.util.net.TLSClientHelloExtractor.getClientRequestedCiphers() may expose internal representation by returning TLSClientHelloExtractor.clientRequestedCiphers  At TLSClientHelloExtractor.java:[line 215]
M V EI: org.apache.tomcat.util.net.TLSClientHelloExtractor.getClientRequestedProtocols() may expose internal representation by returning TLSClientHelloExtractor.clientRequestedProtocols  At TLSClientHelloExtractor.java:[line 242]
M V EI: org.apache.jasper.compiler.ELNode$Function.getParameters() may expose internal representation by returning ELNode$Function.parameters  At ELNode.java:[line 178]
M V EI2: org.apache.jasper.compiler.ELNode$Function.setParameters(String[]) may expose internal representation by storing an externally mutable object into ELNode$Function.parameters  At ELNode.java:[line 174]
M V EI: org.apache.catalina.tribes.io.XByteBuffer.getBytesDirect() may expose internal representation by returning XByteBuffer.buf  At XByteBuffer.java:[line 132]
M V MS: Public static org.apache.catalina.security.SecurityConfig.newInstance() may expose internal representation by returning SecurityConfig.singleton  At SecurityConfig.java:[line 95]
M B Dm: org.apache.catalina.startup.Bootstrap.initClassLoaders() invokes System.exit(...), which shuts down the entire virtual machine  At Bootstrap.java:[line 154]
M D DLS: Dead store to url in org.apache.catalina.startup.Bootstrap.createClassLoader(String, ClassLoader)  At Bootstrap.java:[line 177]
M B NP: org.apache.tomcat.util.buf.MessageBytes.toString() may return null  At MessageBytes.java:[line 178]
M V EI: org.apache.tomcat.util.buf.MessageBytes.getByteChunk() may expose internal representation by returning MessageBytes.byteC  At MessageBytes.java:[line 197]
M V EI: org.apache.tomcat.util.buf.MessageBytes.getCharChunk() may expose internal representation by returning MessageBytes.charC  At MessageBytes.java:[line 206]
M D SF: Switch statement found in org.apache.tomcat.util.buf.MessageBytes.duplicate(MessageBytes) where default case is missing  At MessageBytes.java:[lines 473-489]
M V EI2: new org.apache.catalina.core.DefaultInstanceManager(Context, Map, Context, ClassLoader) may expose internal representation by storing an externally mutable object into DefaultInstanceManager.containerClassLoader  At DefaultInstanceManager.java:[line 119]
M V EI2: new org.apache.catalina.core.DefaultInstanceManager(Context, Map, Context, ClassLoader) may expose internal representation by storing an externally mutable object into DefaultInstanceManager.injectionMap  At DefaultInstanceManager.java:[line 134]
M V EI2: new org.apache.catalina.core.DefaultInstanceManager(Context, Map, Context, ClassLoader) may expose internal representation by storing an externally mutable object into DefaultInstanceManager.context  At DefaultInstanceManager.java:[line 133]
H M VO: Increment of volatile field org.apache.tomcat.dbcp.pool2.impl.DefaultPooledObject.borrowedCount in org.apache.tomcat.dbcp.pool2.impl.DefaultPooledObject.allocate()  At DefaultPooledObject.java:[line 76]
M B Eq: org.apache.tomcat.dbcp.pool2.impl.DefaultPooledObject defines compareTo(Object) and uses Object.equals()  At DefaultPooledObject.java:[line 40]
M V EI2: new org.apache.tomcat.util.net.Acceptor(AbstractEndpoint) may expose internal representation by storing an externally mutable object into Acceptor.endpoint  At Acceptor.java:[line 48]
M V EI: org.apache.catalina.tribes.membership.MemberImpl.getUniqueId() may expose internal representation by returning MemberImpl.uniqueId  At MemberImpl.java:[line 479]
M V EI: org.apache.catalina.tribes.membership.MemberImpl.getPayload() may expose internal representation by returning MemberImpl.payload  At MemberImpl.java:[line 484]
M V EI2: org.apache.catalina.tribes.membership.MemberImpl.setHost(byte[]) may expose internal representation by storing an externally mutable object into MemberImpl.host  At MemberImpl.java:[line 577]
M V EI: org.apache.catalina.tribes.membership.MemberImpl.getHost() may expose internal representation by returning MemberImpl.host  At MemberImpl.java:[line 445]
M V EI: org.apache.catalina.tribes.membership.MemberImpl.getData(boolean, boolean) may expose internal representation by returning MemberImpl.dataPkg  At MemberImpl.java:[line 214]
M V EI: org.apache.catalina.tribes.membership.MemberImpl.getDomain() may expose internal representation by returning MemberImpl.domain  At MemberImpl.java:[line 494]
M V EI: org.apache.catalina.tribes.membership.MemberImpl.getCommand() may expose internal representation by returning MemberImpl.command  At MemberImpl.java:[line 489]
M V EI2: new org.apache.tomcat.websocket.AsyncChannelWrapperSecure(AsynchronousSocketChannel, SSLEngine) may expose internal representation by storing an externally mutable object into AsyncChannelWrapperSecure.sslEngine  At AsyncChannelWrapperSecure.java:[line 71]
M V EI2: new org.apache.tomcat.websocket.AsyncChannelWrapperSecure(AsynchronousSocketChannel, SSLEngine) may expose internal representation by storing an externally mutable object into AsyncChannelWrapperSecure.socketChannel  At AsyncChannelWrapperSecure.java:[line 70]
M M UG: org.apache.catalina.tribes.membership.MemberImpl.getUniqueId() is unsynchronized, org.apache.catalina.tribes.membership.MemberImpl.setUniqueId(byte[]) is synchronized  At MemberImpl.java:[line 479]
M M UG: org.apache.catalina.tribes.membership.MemberImpl.getSecurePort() is unsynchronized, org.apache.catalina.tribes.membership.MemberImpl.setSecurePort(int) is synchronized  At MemberImpl.java:[line 499]
M M UG: org.apache.catalina.tribes.membership.MemberImpl.getUdpPort() is unsynchronized, org.apache.catalina.tribes.membership.MemberImpl.setUdpPort(int) is synchronized  At MemberImpl.java:[line 504]
M M UG: org.apache.catalina.tribes.membership.MemberImpl.getPort() is unsynchronized, org.apache.catalina.tribes.membership.MemberImpl.setPort(int) is synchronized  At MemberImpl.java:[line 436]
M M UG: org.apache.catalina.tribes.membership.MemberImpl.getHost() is unsynchronized, org.apache.catalina.tribes.membership.MemberImpl.setHost(byte[]) is synchronized  At MemberImpl.java:[line 445]
M M UG: org.apache.catalina.tribes.membership.MemberImpl.getCommand() is unsynchronized, org.apache.catalina.tribes.membership.MemberImpl.setCommand(byte[]) is synchronized  At MemberImpl.java:[line 489]
M M UG: org.apache.catalina.tribes.membership.MemberImpl.getPayload() is unsynchronized, org.apache.catalina.tribes.membership.MemberImpl.setPayload(byte[]) is synchronized  At MemberImpl.java:[line 484]
M M UG: org.apache.catalina.tribes.membership.MemberImpl.getDomain() is unsynchronized, org.apache.catalina.tribes.membership.MemberImpl.setDomain(byte[]) is synchronized  At MemberImpl.java:[line 494]
M C NP: Possible null pointer dereference of params in org.apache.tomcat.util.IntrospectionUtils.findMethod(Class, String, Class[])  Dereferenced at IntrospectionUtils.java:[line 435]
M V EI: org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getIncludeCodas() may expose internal representation by returning JspPropertyGroup.includeCodas  At JspPropertyGroup.java:[line 47]
M V EI: org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getUrlPatterns() may expose internal representation by returning JspPropertyGroup.urlPattern  At JspPropertyGroup.java:[line 86]
M V EI: org.apache.tomcat.util.descriptor.web.JspPropertyGroup.getIncludePreludes() may expose internal representation by returning JspPropertyGroup.includePreludes  At JspPropertyGroup.java:[line 53]
H P Dm: Invocation of java.net.URL.equals(Object), which blocks to do domain name resolution, in org.apache.tomcat.util.descriptor.tld.TldResourcePath.equals(Object)  At TldResourcePath.java:[line 159]
H P Dm: Invocation of java.net.URL.hashCode(), which blocks to do domain name resolution, in org.apache.tomcat.util.descriptor.tld.TldResourcePath.hashCode()  At TldResourcePath.java:[line 166]
M D NP: Possible null pointer dereference of prevPath on branch that might be infeasible in org.apache.jasper.compiler.JspConfig.selectProperty(JspConfig$JspPropertyGroup, JspConfig$JspPropertyGroup)  Dereferenced at JspConfig.java:[line 210]
M V EI2: new org.apache.jasper.compiler.JspConfig(ServletContext) may expose internal representation by storing an externally mutable object into JspConfig.ctxt  At JspConfig.java:[line 58]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapEntry.getBackupNodes() may expose internal representation by returning AbstractReplicatedMap$MapEntry.backupNodes  At AbstractReplicatedMap.java:[line 1387]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapEntry.getPrimary() may expose internal representation by returning AbstractReplicatedMap$MapEntry.primary  At AbstractReplicatedMap.java:[line 1395]
M V EI2: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapEntry.setPrimary(Member) may expose internal representation by storing an externally mutable object into AbstractReplicatedMap$MapEntry.primary  At AbstractReplicatedMap.java:[line 1391]
M V EI2: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapEntry.setBackupNodes(Member[]) may expose internal representation by storing an externally mutable object into AbstractReplicatedMap$MapEntry.backupNodes  At AbstractReplicatedMap.java:[line 1383]
M V EI2: new org.apache.naming.NamingContext(Hashtable, String, HashMap) may expose internal representation by storing an externally mutable object into NamingContext.bindings  At NamingContext.java:[line 99]
M V EI: org.apache.naming.NamingContext.getEnvironment() may expose internal representation by returning NamingContext.env  At NamingContext.java:[line 749]
M V EI: org.apache.tomcat.jdbc.pool.ConnectionPool.getProxyConstructor(boolean) may expose internal representation by returning ConnectionPool.proxyClassConstructor  At ConnectionPool.java:[line 372]
M V EI: org.apache.tomcat.jdbc.pool.ConnectionPool.getJmxPool() may expose internal representation by returning ConnectionPool.jmxPool  At ConnectionPool.java:[line 1309]
M V EI: org.apache.tomcat.jdbc.pool.ConnectionPool.getPoolProperties() may expose internal representation by returning ConnectionPool.poolProperties  At ConnectionPool.java:[line 245]
H I Dm: Found reliance on default encoding in org.apache.tomcat.jdbc.pool.ConnectionPool.getStackTrace(Throwable): java.io.ByteArrayOutputStream.toString()  At ConnectionPool.java:[line 1239]
H I Dm: Found reliance on default encoding in org.apache.tomcat.jdbc.pool.ConnectionPool.getStackTrace(Throwable): new java.io.PrintStream(OutputStream)  At ConnectionPool.java:[line 1237]
M V EI2: new org.apache.tomcat.util.net.jsse.JSSESupport(SSLSession, Map) may expose internal representation by storing an externally mutable object into JSSESupport.session  At JSSESupport.java:[line 91]
M V EI2: new org.apache.tomcat.util.net.jsse.JSSESupport(SSLSession, Map) may expose internal representation by storing an externally mutable object into JSSESupport.additionalAttributes  At JSSESupport.java:[line 92]
M V EI2: org.apache.tomcat.util.net.jsse.JSSESupport.setSession(SSLSession) may expose internal representation by storing an externally mutable object into JSSESupport.session  At JSSESupport.java:[line 211]
M V EI2: org.apache.tomcat.util.http.Parameters.setQuery(MessageBytes) may expose internal representation by storing an externally mutable object into Parameters.queryMB  At Parameters.java:[line 78]
M V EI: org.apache.catalina.core.ContainerBase.getCluster() may expose internal representation by returning ContainerBase.cluster  At ContainerBase.java:[line 373]
M V EI: org.apache.catalina.core.ContainerBase.getRealm() may expose internal representation by returning ContainerBase.realm  At ContainerBase.java:[line 599]
M V EI: org.apache.catalina.core.ContainerBase.getParent() may expose internal representation by returning ContainerBase.parent  At ContainerBase.java:[line 516]
M V EI: org.apache.catalina.core.ContainerBase.getAccessLog() may expose internal representation by returning ContainerBase.accessLog  At ContainerBase.java:[line 1077]
M V EI: org.apache.catalina.core.ContainerBase.getPipeline() may expose internal representation by returning ContainerBase.pipeline  At ContainerBase.java:[line 583]
M V EI: org.apache.catalina.core.ContainerBase.getParentClassLoader() may expose internal representation by returning ContainerBase.parentClassLoader  At ContainerBase.java:[line 549]
M V EI2: org.apache.catalina.core.ContainerBase.setParentClassLoader(ClassLoader) may expose internal representation by storing an externally mutable object into ContainerBase.parentClassLoader  At ContainerBase.java:[line 570]
M V EI2: org.apache.catalina.core.ContainerBase.setCluster(Cluster) may expose internal representation by storing an externally mutable object into ContainerBase.cluster  At ContainerBase.java:[line 418]
M V EI2: org.apache.catalina.core.ContainerBase.setParent(Container) may expose internal representation by storing an externally mutable object into ContainerBase.parent  At ContainerBase.java:[line 535]
M V EI2: org.apache.catalina.core.ContainerBase.setRealm(Realm) may expose internal representation by storing an externally mutable object into ContainerBase.realm  At ContainerBase.java:[line 637]
M V MS: Public static org.apache.tomcat.util.modeler.Registry.getRegistry(Object, Object) may expose internal representation by returning Registry.registry  At Registry.java:[line 144]
M V EI2: org.apache.tomcat.util.modeler.Registry.preRegister(MBeanServer, ObjectName) may expose internal representation by storing an externally mutable object into Registry.server  At Registry.java:[line 748]
M V EI: org.apache.tomcat.util.modeler.Registry.getMBeanServer() may expose internal representation by returning Registry.server  At Registry.java:[line 471]
M X OBL: org.apache.tomcat.util.modeler.Registry.load(String, Object, String) may fail to clean up java.io.InputStream  Obligation to clean up resource created at Registry.java:[line 589] is not discharged
M V EI2: new org.apache.coyote.http11.filters.SavedRequestInputFilter(ByteChunk) may expose internal representation by storing an externally mutable object into SavedRequestInputFilter.input  At SavedRequestInputFilter.java:[line 44]
M M VO: Increment of volatile field org.apache.catalina.session.ManagerBase.duplicates in org.apache.catalina.session.ManagerBase.generateSessionId()  At ManagerBase.java:[line 955]
M V EI2: org.apache.catalina.session.ManagerBase.setContext(Context) may expose internal representation by storing an externally mutable object into ManagerBase.context  At ManagerBase.java:[line 433]
M V EI: org.apache.catalina.session.ManagerBase.getSessionIdGenerator() may expose internal representation by returning ManagerBase.sessionIdGenerator  At ManagerBase.java:[line 449]
M V EI2: org.apache.catalina.session.ManagerBase.setSessionIdGenerator(SessionIdGenerator) may expose internal representation by storing an externally mutable object into ManagerBase.sessionIdGenerator  At ManagerBase.java:[line 464]
M V EI: org.apache.catalina.session.ManagerBase.getContext() may expose internal representation by returning ManagerBase.context  At ManagerBase.java:[line 419]
M V EI: org.apache.tomcat.util.descriptor.web.ContextService.getServiceqname() may expose internal representation by returning ContextService.serviceqname  At ContextService.java:[line 134]
M V EI2: org.apache.tomcat.util.descriptor.web.ContextService.setServiceqname(String[]) may expose internal representation by storing an externally mutable object into ContextService.serviceqname  At ContextService.java:[line 150]
M V EI: org.apache.tomcat.util.net.openssl.OpenSSLEngine.getSession() may expose internal representation by returning OpenSSLEngine.session  At OpenSSLEngine.java:[line 892]
M V EI: org.apache.catalina.tribes.group.RpcChannel.getChannel() may expose internal representation by returning RpcChannel.channel  At RpcChannel.java:[line 202]
M V EI2: new org.apache.catalina.tribes.group.RpcChannel(byte[], Channel, RpcCallback) may expose internal representation by storing an externally mutable object into RpcChannel.rpcId  At RpcChannel.java:[line 65]
M V EI2: new org.apache.catalina.tribes.group.RpcChannel(byte[], Channel, RpcCallback) may expose internal representation by storing an externally mutable object into RpcChannel.channel  At RpcChannel.java:[line 63]
M V EI2: org.apache.catalina.tribes.group.RpcChannel.setRpcId(byte[]) may expose internal representation by storing an externally mutable object into RpcChannel.rpcId  At RpcChannel.java:[line 222]
M V EI2: org.apache.catalina.tribes.group.RpcChannel.setChannel(Channel) may expose internal representation by storing an externally mutable object into RpcChannel.channel  At RpcChannel.java:[line 214]
M V EI: org.apache.catalina.tribes.group.RpcChannel.getRpcId() may expose internal representation by returning RpcChannel.rpcId  At RpcChannel.java:[line 210]
M V EI: org.apache.tomcat.util.http.ServerCookie.getName() may expose internal representation by returning ServerCookie.name  At ServerCookie.java:[line 81]
M V EI: org.apache.tomcat.util.http.ServerCookie.getValue() may expose internal representation by returning ServerCookie.value  At ServerCookie.java:[line 85]
M V EI: org.apache.tomcat.util.http.ServerCookie.getDomain() may expose internal representation by returning ServerCookie.domain  At ServerCookie.java:[line 73]
M V EI: org.apache.tomcat.util.http.ServerCookie.getComment() may expose internal representation by returning ServerCookie.comment  At ServerCookie.java:[line 69]
M V EI: org.apache.tomcat.util.http.ServerCookie.getPath() may expose internal representation by returning ServerCookie.path  At ServerCookie.java:[line 77]
M V EI2: org.apache.catalina.loader.WebappClassLoaderBase.setResources(WebResourceRoot) may expose internal representation by storing an externally mutable object into WebappClassLoaderBase.resources  At WebappClassLoaderBase.java:[line 448]
M V PERM: Custom class loader org.apache.catalina.loader.WebappClassLoaderBase.getPermissions(CodeSource) does not call its superclass's getPermissions()  At WebappClassLoaderBase.java:[line 1496]
M V EI: org.apache.tomcat.util.descriptor.web.SecurityConstraint.findAuthRoles() may expose internal representation by returning SecurityConstraint.authRoles  At SecurityConstraint.java:[line 331]
M V EI: org.apache.tomcat.util.descriptor.web.SecurityConstraint.findCollections() may expose internal representation by returning SecurityConstraint.collections  At SecurityConstraint.java:[line 362]
M V EI: org.apache.catalina.core.StandardEngine.getParentClassLoader() may expose internal representation by returning ContainerBase.parentClassLoader  At StandardEngine.java:[line 343]
M V EI2: org.apache.catalina.core.StandardEngine.setService(Service) may expose internal representation by storing an externally mutable object into StandardEngine.service  At StandardEngine.java:[line 201]
M V EI: org.apache.catalina.core.StandardEngine.getService() may expose internal representation by returning StandardEngine.service  At StandardEngine.java:[line 190]
M V EI2: org.apache.tomcat.util.net.AbstractEndpoint.setAddress(InetAddress) may expose internal representation by storing an externally mutable object into AbstractEndpoint.address  At AbstractEndpoint.java:[line 588]
M V EI: org.apache.tomcat.util.net.AbstractEndpoint.getSocketProperties() may expose internal representation by returning AbstractEndpoint.socketProperties  At AbstractEndpoint.java:[line 185]
M V EI: org.apache.tomcat.util.net.AbstractEndpoint.getAddress() may expose internal representation by returning AbstractEndpoint.address  At AbstractEndpoint.java:[line 587]
M V EI2: new org.apache.catalina.core.ApplicationFilterRegistration(FilterDef, Context) may expose internal representation by storing an externally mutable object into ApplicationFilterRegistration.filterDef  At ApplicationFilterRegistration.java:[line 47]
M V EI2: new org.apache.catalina.core.ApplicationFilterRegistration(FilterDef, Context) may expose internal representation by storing an externally mutable object into ApplicationFilterRegistration.context  At ApplicationFilterRegistration.java:[line 48]
M V EI2: new org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage(byte[], int, boolean, Serializable, Serializable, byte[], Member, Member[]) may expose internal representation by storing an externally mutable object into AbstractReplicatedMap$MapMessage.primary  At AbstractReplicatedMap.java:[line 1545]
M V EI2: new org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage(byte[], int, boolean, Serializable, Serializable, byte[], Member, Member[]) may expose internal representation by storing an externally mutable object into AbstractReplicatedMap$MapMessage.nodes  At AbstractReplicatedMap.java:[line 1544]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.getDiffValue() may expose internal representation by returning AbstractReplicatedMap$MapMessage.diffvalue  At AbstractReplicatedMap.java:[line 1612]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.getValueData() may expose internal representation by returning AbstractReplicatedMap$MapMessage.valuedata  At AbstractReplicatedMap.java:[line 1608]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.getPrimary() may expose internal representation by returning AbstractReplicatedMap$MapMessage.primary  At AbstractReplicatedMap.java:[line 1620]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.getBackupNodes() may expose internal representation by returning AbstractReplicatedMap$MapMessage.nodes  At AbstractReplicatedMap.java:[line 1616]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.getKeyData() may expose internal representation by returning AbstractReplicatedMap$MapMessage.keydata  At AbstractReplicatedMap.java:[line 1584]
M V EI2: new org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage(byte[], int, boolean, Serializable, Serializable, byte[], Member, Member[]) may expose internal representation by storing an externally mutable object into AbstractReplicatedMap$MapMessage.mapId  At AbstractReplicatedMap.java:[line 1538]
M V EI2: new org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage(byte[], int, boolean, Serializable, Serializable, byte[], Member, Member[]) may expose internal representation by storing an externally mutable object into AbstractReplicatedMap$MapMessage.diffvalue  At AbstractReplicatedMap.java:[line 1543]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.getMapId() may expose internal representation by returning AbstractReplicatedMap$MapMessage.mapId  At AbstractReplicatedMap.java:[line 1628]
M B Se: The field org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.key is transient but isn't set by deserialization  In AbstractReplicatedMap.java
M B Se: The field org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.value is transient but isn't set by deserialization  In AbstractReplicatedMap.java
H I Dm: Found reliance on default encoding in org.apache.catalina.tribes.tipis.AbstractReplicatedMap$MapMessage.toString(): new String(byte[])  At AbstractReplicatedMap.java:[line 1505]
M V EI: org.apache.tomcat.util.buf.UEncoder.encodeURL(String, int, int) may expose internal representation by returning UEncoder.output  At UEncoder.java:[line 120]
M V EI2: org.apache.catalina.tribes.io.ChannelData.setUniqueId(byte[]) may expose internal representation by storing an externally mutable object into ChannelData.uniqueId  At ChannelData.java:[line 133]
M V EI2: new org.apache.catalina.tribes.io.ChannelData(byte[], XByteBuffer, long) may expose internal representation by storing an externally mutable object into ChannelData.uniqueId  At ChannelData.java:[line 89]
M V EI: org.apache.catalina.tribes.io.ChannelData.getAddress() may expose internal representation by returning ChannelData.address  At ChannelData.java:[line 160]
M V EI2: new org.apache.catalina.tribes.io.ChannelData(byte[], XByteBuffer, long) may expose internal representation by storing an externally mutable object into ChannelData.message  At ChannelData.java:[line 90]
M V EI2: org.apache.catalina.tribes.io.ChannelData.setMessage(XByteBuffer) may expose internal representation by storing an externally mutable object into ChannelData.message  At ChannelData.java:[line 106]
M V EI2: org.apache.catalina.tribes.io.ChannelData.setAddress(Member) may expose internal representation by storing an externally mutable object into ChannelData.address  At ChannelData.java:[line 169]
M V EI: org.apache.catalina.tribes.io.ChannelData.getMessage() may expose internal representation by returning ChannelData.message  At ChannelData.java:[line 99]
M V EI: org.apache.catalina.tribes.io.ChannelData.getUniqueId() may expose internal representation by returning ChannelData.uniqueId  At ChannelData.java:[line 127]
H B DE: org.apache.catalina.tribes.membership.McastServiceImpl.stop(int) might ignore java.lang.Exception  At McastServiceImpl.java:[line 347]
M V EI2: org.apache.catalina.tribes.membership.McastServiceImpl.setChannel(Channel) may expose internal representation by storing an externally mutable object into McastServiceImpl.channel  At McastServiceImpl.java:[line 549]
M V EI2: new org.apache.catalina.tribes.membership.McastServiceImpl(MemberImpl, long, long, int, InetAddress, InetAddress, int, int, MembershipListener, MessageListener, boolean) may expose internal representation by storing an externally mutable object into McastServiceImpl.address  At McastServiceImpl.java:[line 176]
M V EI2: new org.apache.catalina.tribes.membership.McastServiceImpl(MemberImpl, long, long, int, InetAddress, InetAddress, int, int, MembershipListener, MessageListener, boolean) may expose internal representation by storing an externally mutable object into McastServiceImpl.mcastBindAddress  At McastServiceImpl.java:[line 180]
M V EI2: new org.apache.catalina.tribes.membership.McastServiceImpl(MemberImpl, long, long, int, InetAddress, InetAddress, int, int, MembershipListener, MessageListener, boolean) may expose internal representation by storing an externally mutable object into McastServiceImpl.member  At McastServiceImpl.java:[line 175]
M V EI: org.apache.catalina.tribes.membership.McastServiceImpl.getChannel() may expose internal representation by returning McastServiceImpl.channel  At McastServiceImpl.java:[line 545]
H P Dm: org.apache.catalina.core.StandardHost.findReloadedContextMemoryLeaks() forces garbage collection; extremely dubious except in benchmarking code  At StandardHost.java:[line 780]
M V EI: org.apache.catalina.core.StandardHost.getAliases() may expose internal representation by returning StandardHost.aliases  At StandardHost.java:[line 913]
M V EI: org.apache.catalina.core.StandardHost.findAliases() may expose internal representation by returning StandardHost.aliases  At StandardHost.java:[line 804]
M V EI2: new org.apache.catalina.mapper.MapperListener(Service) may expose internal representation by storing an externally mutable object into MapperListener.service  At MapperListener.java:[line 87]
M V MS: Public static org.apache.catalina.mbeans.MBeanUtils.createServer() may expose internal representation by returning MBeanUtils.mserver  At MBeanUtils.java:[line 611]
M V MS: Public static org.apache.catalina.mbeans.MBeanUtils.createRegistry() may expose internal representation by returning MBeanUtils.registry  At MBeanUtils.java:[line 597]
M D RCN: Redundant nullcheck of jisw which is known to be null in org.apache.catalina.webresources.AbstractArchiveResource.getContent()  Redundant null check at AbstractArchiveResource.java:[line 198]
M D NP: Load of known null value in org.apache.catalina.webresources.AbstractArchiveResource.getContent()  At AbstractArchiveResource.java:[line 198]
M V EI: org.apache.catalina.webresources.AbstractArchiveResource.getCertificates() may expose internal representation by returning AbstractArchiveResource.certificates  At AbstractArchiveResource.java:[line 217]
M V EI: org.apache.catalina.deploy.NamingResourcesImpl.getTransaction() may expose internal representation by returning NamingResourcesImpl.transaction  At NamingResourcesImpl.java:[line 207]
M V EI2: org.apache.catalina.deploy.NamingResourcesImpl.setTransaction(ContextTransaction) may expose internal representation by storing an externally mutable object into NamingResourcesImpl.transaction  At NamingResourcesImpl.java:[line 199]
M V EI: org.apache.coyote.AbstractProtocol.getObjectName() may expose internal representation by returning AbstractProtocol.oname  At AbstractProtocol.java:[line 492]
M V EI2: org.apache.coyote.AbstractProtocol.preRegister(MBeanServer, ObjectName) may expose internal representation by storing an externally mutable object into AbstractProtocol.mserver  At AbstractProtocol.java:[line 503]
M V EI2: new org.apache.coyote.AbstractProtocol(AbstractEndpoint) may expose internal representation by storing an externally mutable object into AbstractProtocol.endpoint  At AbstractProtocol.java:[line 99]
M V EI: org.apache.coyote.AbstractProtocol.getGlobalRequestProcessorMBeanName() may expose internal representation by returning AbstractProtocol.rgOname  At AbstractProtocol.java:[line 148]
M V EI2: org.apache.coyote.AbstractProtocol.preRegister(MBeanServer, ObjectName) may expose internal representation by storing an externally mutable object into AbstractProtocol.oname  At AbstractProtocol.java:[line 502]
M V EI: org.apache.tomcat.util.net.SocketWrapperBase.getError() may expose internal representation by returning SocketWrapperBase.error  At SocketWrapperBase.java:[line 166]
M V EI2: org.apache.tomcat.util.net.SocketWrapperBase.setError(IOException) may expose internal representation by storing an externally mutable object into SocketWrapperBase.error  At SocketWrapperBase.java:[line 173]
M V EI: org.apache.tomcat.util.net.SocketWrapperBase.getSocketBufferHandler() may expose internal representation by returning SocketWrapperBase.socketBufferHandler  At SocketWrapperBase.java:[line 276]
M V EI2: new org.apache.tomcat.util.net.SocketWrapperBase(Object, AbstractEndpoint) may expose internal representation by storing an externally mutable object into SocketWrapperBase.endpoint  At SocketWrapperBase.java:[line 117]
M V EI: org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getOutputStream() may expose internal representation by returning DiskFileItem.dfos  At DiskFileItem.java:[line 507]
M B RV: Exceptional return value of java.io.File.delete() ignored in org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete()  At DiskFileItem.java:[line 432]
M B RV: Exceptional return value of java.io.File.delete() ignored in org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.finalize()  At DiskFileItem.java:[line 548]
H I Dm: Found reliance on default encoding in org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getString(): new String(byte[])  At DiskFileItem.java:[line 351]
M V EI2: new org.apache.catalina.core.ApplicationPart(FileItem, File) may expose internal representation by storing an externally mutable object into ApplicationPart.fileItem  At ApplicationPart.java:[line 48]
M D ST: Write to static field org.apache.tomcat.util.digester.Digester.propertySourcesSet from instance method new org.apache.tomcat.util.digester.Digester()  At Digester.java:[line 357]
M V MS: org.apache.tomcat.util.digester.Digester.setPropertySource(IntrospectionUtils$PropertySource[]) may expose internal static state by storing a mutable object into a static field org.apache.tomcat.util.digester.Digester.propertySources  At Digester.java:[line 133]
M V EI: org.apache.tomcat.util.digester.Digester.getClassLoader() may expose internal representation by returning Digester.classLoader  At Digester.java:[line 469]
M V EI: org.apache.tomcat.util.digester.Digester.getRules() may expose internal representation by returning Digester.rules  At Digester.java:[line 737]
M V EI: org.apache.tomcat.util.digester.Digester.getXMLReader() may expose internal representation by returning Digester.reader  At Digester.java:[line 890]
M V EI2: org.apache.tomcat.util.digester.Digester.setClassLoader(ClassLoader) may expose internal representation by storing an externally mutable object into Digester.classLoader  At Digester.java:[line 489]
M V EI: org.apache.tomcat.util.digester.Digester.getFakeAttributes() may expose internal representation by returning Digester.fakeAttributes  At Digester.java:[line 819]
M V EI: org.apache.tomcat.util.digester.Digester.getFactory() may expose internal representation by returning Digester.factory  At Digester.java:[line 559]
M V EI2: org.apache.tomcat.util.digester.Digester.setFakeAttributes(Map) may expose internal representation by storing an externally mutable object into Digester.fakeAttributes  At Digester.java:[line 852]
M V EI: org.apache.tomcat.util.digester.Digester.getParser() may expose internal representation by returning Digester.parser  At Digester.java:[line 690]
M V EI2: org.apache.tomcat.util.digester.Digester.setRules(Rules) may expose internal representation by storing an externally mutable object into Digester.rules  At Digester.java:[line 748]
M V EI: org.apache.tomcat.util.digester.Digester.getGeneratedCode() may expose internal representation by returning Digester.code  At Digester.java:[line 407]
H B ES: Comparison of String objects using == or != in org.apache.tomcat.util.digester.Digester.updateBodyText(StringBuilder)  At Digester.java:[line 2042]
M V EI2: new org.apache.coyote.http11.upgrade.UpgradeServletInputStream(UpgradeProcessorBase, SocketWrapperBase, UpgradeInfo) may expose internal representation by storing an externally mutable object into UpgradeServletInputStream.upgradeInfo  At UpgradeServletInputStream.java:[line 53]
M V EI2: new org.apache.coyote.http11.upgrade.UpgradeServletInputStream(UpgradeProcessorBase, SocketWrapperBase, UpgradeInfo) may expose internal representation by storing an externally mutable object into UpgradeServletInputStream.socketWrapper  At UpgradeServletInputStream.java:[line 52]
M V EI2: new org.apache.coyote.http11.upgrade.UpgradeServletInputStream(UpgradeProcessorBase, SocketWrapperBase, UpgradeInfo) may expose internal representation by storing an externally mutable object into UpgradeServletInputStream.processor  At UpgradeServletInputStream.java:[line 51]
M V EI2: new org.apache.coyote.http11.upgrade.UpgradeServletOutputStream(UpgradeProcessorBase, SocketWrapperBase, UpgradeInfo) may expose internal representation by storing an externally mutable object into UpgradeServletOutputStream.processor  At UpgradeServletOutputStream.java:[line 67]
M V EI2: new org.apache.coyote.http11.upgrade.UpgradeServletOutputStream(UpgradeProcessorBase, SocketWrapperBase, UpgradeInfo) may expose internal representation by storing an externally mutable object into UpgradeServletOutputStream.upgradeInfo  At UpgradeServletOutputStream.java:[line 69]
M V EI2: new org.apache.coyote.http11.upgrade.UpgradeServletOutputStream(UpgradeProcessorBase, SocketWrapperBase, UpgradeInfo) may expose internal representation by storing an externally mutable object into UpgradeServletOutputStream.socketWrapper  At UpgradeServletOutputStream.java:[line 68]
M V EI2: org.apache.coyote.Response.setErrorException(Exception) may expose internal representation by storing an externally mutable object into Response.errorException  At Response.java:[line 294]
M V EI: org.apache.coyote.Response.getErrorException() may expose internal representation by returning Response.errorException  At Response.java:[line 304]
M V EI: org.apache.coyote.Response.getRequest() may expose internal representation by returning Response.req  At Response.java:[line 170]
M V EI: org.apache.coyote.Response.getMimeHeaders() may expose internal representation by returning Response.headers  At Response.java:[line 184]
M V EI2: org.apache.coyote.Response.setRequest(Request) may expose internal representation by storing an externally mutable object into Response.req  At Response.java:[line 174]
M V EI: org.apache.coyote.http11.upgrade.UpgradeProcessorExternal.getInputStream() may expose internal representation by returning UpgradeProcessorExternal.upgradeServletInputStream  At UpgradeProcessorExternal.java:[line 79]
M V EI: org.apache.coyote.http11.upgrade.UpgradeProcessorExternal.getOutputStream() may expose internal representation by returning UpgradeProcessorExternal.upgradeServletOutputStream  At UpgradeProcessorExternal.java:[line 84]
M V EI: org.apache.coyote.Request.remoteHost() may expose internal representation by returning Request.remoteHostMB  At Request.java:[line 357]
M V EI: org.apache.coyote.Request.getRequestProcessor() may expose internal representation by returning Request.reqProcessorMX  At Request.java:[line 813]
M V EI: org.apache.coyote.Request.localAddr() may expose internal representation by returning Request.localAddrMB  At Request.java:[line 365]
M V EI: org.apache.coyote.Request.scheme() may expose internal representation by returning Request.schemeMB  At Request.java:[line 306]
M V EI: org.apache.coyote.Request.peerAddr() may expose internal representation by returning Request.peerAddrMB  At Request.java:[line 353]
M V EI: org.apache.coyote.Request.serverName() may expose internal representation by returning Request.serverNameMB  At Request.java:[line 337]
M V EI: org.apache.coyote.Request.getAttributes() may expose internal representation by returning Request.attributes  At Request.java:[line 555]
M V EI: org.apache.coyote.Request.getAuthType() may expose internal representation by returning Request.authType  At Request.java:[line 575]
M V EI2: org.apache.coyote.Request.setResponse(Response) may expose internal representation by storing an externally mutable object into Request.response  At Request.java:[line 505]
M V EI: org.apache.coyote.Request.getResponse() may expose internal representation by returning Request.response  At Request.java:[line 501]
M V EI: org.apache.coyote.Request.getErrorException() may expose internal representation by returning Request.errorException  At Request.java:[line 668]
M V EI: org.apache.coyote.Request.protocol() may expose internal representation by returning Request.protoMB  At Request.java:[line 326]
M V EI2: org.apache.coyote.Request.setContentType(MessageBytes) may expose internal representation by storing an externally mutable object into Request.contentTypeMB  At Request.java:[line 479]
M V EI: org.apache.coyote.Request.localName() may expose internal representation by returning Request.localNameMB  At Request.java:[line 361]
M V EI: org.apache.coyote.Request.contentType() may expose internal representation by returning Request.contentTypeMB  At Request.java:[line 474]
M V EI: org.apache.coyote.Request.getParameters() may expose internal representation by returning Request.parameters  At Request.java:[line 534]
M V EI: org.apache.coyote.Request.getMimeHeaders() may expose internal representation by returning Request.headers  At Request.java:[line 282]
M V EI: org.apache.coyote.Request.remoteAddr() may expose internal representation by returning Request.remoteAddrMB  At Request.java:[line 349]
M V EI: org.apache.coyote.Request.decodedURI() may expose internal representation by returning Request.decodedUriMB  At Request.java:[line 318]
M V EI2: org.apache.coyote.Request.setErrorException(Exception) may expose internal representation by storing an externally mutable object into Request.errorException  At Request.java:[line 658]
M V EI: org.apache.coyote.Request.method() may expose internal representation by returning Request.methodMB  At Request.java:[line 310]
M V EI: org.apache.coyote.Request.getCookies() may expose internal representation by returning Request.serverCookies  At Request.java:[line 527]
M V EI: org.apache.coyote.Request.queryString() may expose internal representation by returning Request.queryMB  At Request.java:[line 322]
M V EI: org.apache.coyote.Request.getTrailerFields() may expose internal representation by returning Request.trailerFields  At Request.java:[line 294]
M V EI: org.apache.coyote.Request.requestURI() may expose internal representation by returning Request.uriMB  At Request.java:[line 314]
M V EI: org.apache.coyote.Request.getRemoteUser() may expose internal representation by returning Request.remoteUser  At Request.java:[line 563]
M V EI: org.apache.coyote.AbstractProcessor.getRequest() may expose internal representation by returning AbstractProcessor.request  At AbstractProcessor.java:[line 134]
M D SF: Switch statement found in org.apache.coyote.AbstractProcessor.parseHost(MessageBytes) where one case falls through to the next case  At AbstractProcessor.java:[lines 331-334]
M V EI2: org.apache.catalina.connector.InputBuffer.setRequest(Request) may expose internal representation by storing an externally mutable object into InputBuffer.coyoteRequest  At InputBuffer.java:[line 171]
M V EI: org.apache.coyote.CompressionConfig.getCompressibleMimeTypes() may expose internal representation by returning CompressionConfig.compressibleMimeTypes  At CompressionConfig.java:[line 153]
M V EI2: new org.apache.jasper.compiler.TldCache(ServletContext, Map, Map) may expose internal representation by storing an externally mutable object into TldCache.servletContext  At TldCache.java:[line 66]
M V EI: org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser.getPlugins() may expose internal representation by returning TagPluginParser.plugins  At TagPluginParser.java:[line 78]
M V EI2: org.apache.catalina.webresources.StandardRoot.setContext(Context) may expose internal representation by storing an externally mutable object into StandardRoot.context  At StandardRoot.java:[line 575]
M V EI: org.apache.catalina.webresources.StandardRoot.getContext() may expose internal representation by returning StandardRoot.context  At StandardRoot.java:[line 570]
M V EI2: new org.apache.catalina.webresources.StandardRoot(Context) may expose internal representation by storing an externally mutable object into StandardRoot.context  At StandardRoot.java:[line 110]
M V DP: org.apache.jasper.JspCompilationContext.getJspLoader() creates a org.apache.jasper.servlet.JasperLoader classloader, which should be performed within a doPrivileged block  At JspCompilationContext.java:[line 181]
M V EI: org.apache.jasper.JspCompilationContext.getServletContext() may expose internal representation by returning JspCompilationContext.context  At JspCompilationContext.java:[line 515]
M V EI: org.apache.jasper.JspCompilationContext.getWriter() may expose internal representation by returning JspCompilationContext.writer  At JspCompilationContext.java:[line 552]
M V EI2: org.apache.jasper.JspCompilationContext.setWriter(ServletWriter) may expose internal representation by storing an externally mutable object into JspCompilationContext.writer  At JspCompilationContext.java:[line 556]
M V EI2: org.apache.jasper.JspCompilationContext.setClassLoader(ClassLoader) may expose internal representation by storing an externally mutable object into JspCompilationContext.loader  At JspCompilationContext.java:[line 176]
M V EI: org.apache.jasper.JspCompilationContext.getTagInfo() may expose internal representation by returning JspCompilationContext.tagInfo  At JspCompilationContext.java:[line 426]
M V EI: org.apache.jasper.JspCompilationContext.getJspLoader() may expose internal representation by returning JspCompilationContext.jspLoader  At JspCompilationContext.java:[line 184]
M V EI2: org.apache.jasper.JspCompilationContext.setTagInfo(TagInfo) may expose internal representation by storing an externally mutable object into JspCompilationContext.tagInfo  At JspCompilationContext.java:[line 430]
M V EI: org.apache.jasper.JspCompilationContext.getCompiler() may expose internal representation by returning JspCompilationContext.jspCompiler  At JspCompilationContext.java:[line 257]
M V EI: org.apache.jasper.JspCompilationContext.createCompiler() may expose internal representation by returning JspCompilationContext.jspCompiler  At JspCompilationContext.java:[line 216]
M V EI: org.apache.jasper.JspCompilationContext.getClassLoader() may expose internal representation by returning JspCompilationContext.loader  At JspCompilationContext.java:[line 170]
M V EI: org.apache.jasper.JspCompilationContext.getRuntimeContext() may expose internal representation by returning JspCompilationContext.rctxt  At JspCompilationContext.java:[line 519]
M V EI2: new org.apache.catalina.connector.CoyoteReader(InputBuffer) may expose internal representation by storing an externally mutable object into CoyoteReader.ib  At CoyoteReader.java:[line 53]
M B RR: org.apache.catalina.connector.CoyoteReader.readLine() ignores result of org.apache.catalina.connector.CoyoteReader.skip(long)  At CoyoteReader.java:[line 201]
M V EI2: new org.apache.jasper.compiler.JavacErrorDetail(String, int, String, int, StringBuilder, JspCompilationContext) may expose internal representation by storing an externally mutable object into JavacErrorDetail.errMsg  At JavacErrorDetail.java:[line 82]
H I Dm: Found reliance on default encoding in org.apache.jasper.compiler.JavacErrorDetail.readFile(InputStream): new java.io.InputStreamReader(InputStream)  At JavacErrorDetail.java:[line 220]
M V EI2: new org.apache.catalina.connector.Connector(ProtocolHandler) may expose internal representation by storing an externally mutable object into Connector.protocolHandler  At Connector.java:[line 98]
M V EI: org.apache.catalina.connector.Connector.getProtocolHandler() may expose internal representation by returning Connector.protocolHandler  At Connector.java:[line 662]
M V EI: org.apache.catalina.connector.Connector.getService() may expose internal representation by returning Connector.service  At Connector.java:[line 334]
M V EI2: org.apache.catalina.connector.Connector.setService(Service) may expose internal representation by storing an externally mutable object into Connector.service  At Connector.java:[line 344]
M V EI: org.apache.catalina.core.StandardService.getServer() may expose internal representation by returning StandardService.server  At StandardService.java:[line 198]
M V EI2: org.apache.catalina.core.StandardService.setContainer(Engine) may expose internal representation by storing an externally mutable object into StandardService.engine  At StandardService.java:[line 136]
M V EI2: org.apache.catalina.core.StandardService.setParentClassLoader(ClassLoader) may expose internal representation by storing an externally mutable object into StandardService.parentClassLoader  At StandardService.java:[line 609]
M V EI: org.apache.catalina.core.StandardService.getParentClassLoader() may expose internal representation by returning StandardService.parentClassLoader  At StandardService.java:[line 592]
M V EI2: org.apache.catalina.core.StandardService.setServer(Server) may expose internal representation by storing an externally mutable object into StandardService.server  At StandardService.java:[line 209]
M V EI: org.apache.catalina.core.StandardService.findConnectors() may expose internal representation by returning StandardService.connectors  At StandardService.java:[line 270]
M V EI: org.apache.catalina.core.StandardService.getContainer() may expose internal representation by returning StandardService.engine  At StandardService.java:[line 126]
M V EI: org.apache.catalina.core.StandardService.getMapper() may expose internal representation by returning StandardService.mapper  At StandardService.java:[line 120]
M B Dm: org.apache.catalina.startup.Catalina.stopServer(String[]) invokes System.exit(...), which shuts down the entire virtual machine  At Catalina.java:[line 676]
M V EI2: org.apache.catalina.startup.Catalina.setParentClassLoader(ClassLoader) may expose internal representation by storing an externally mutable object into Catalina.parentClassLoader  At Catalina.java:[line 267]
M V EI2: org.apache.catalina.startup.Catalina.setServer(Server) may expose internal representation by storing an externally mutable object into Catalina.server  At Catalina.java:[line 278]
M V EI: org.apache.catalina.startup.Catalina.getParentClassLoader() may expose internal representation by returning Catalina.parentClassLoader  At Catalina.java:[line 272]
M V EI: org.apache.catalina.startup.Catalina.getServer() may expose internal representation by returning Catalina.server  At Catalina.java:[line 283]
H I Dm: Found reliance on default encoding in org.apache.catalina.startup.Catalina.parseServerXml(boolean): new java.io.FileWriter(File)  At Catalina.java:[line 646]
H I Dm: Found reliance on default encoding in org.apache.catalina.startup.Catalina.generateLoader(): new java.io.FileWriter(File)  At Catalina.java:[line 964]
M C NP: Possible null pointer dereference of upperBound in org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isTypeArgumentContainedBy(TypeBinding) on exception path  Dereferenced at TypeBinding.java:[line 1282]
M V EI: org.eclipse.jdt.internal.compiler.lookup.TypeBinding.getTypeAnnotations() may expose internal representation by returning TypeBinding.typeAnnotations  At TypeBinding.java:[line 1589]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding.setTypeAnnotations(AnnotationBinding[], boolean) may expose internal representation by storing an externally mutable object into TypeBinding.typeAnnotations  At TypeBinding.java:[line 1596]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.TypeBinding.findSuperTypeOriginatingFrom(TypeBinding) where default case is missing  At TypeBinding.java:[lines 399-497]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.TypeBinding.isTypeArgumentContainedBy(TypeBinding) where default case is missing  At TypeBinding.java:[lines 1268-1278]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.InferenceContext(MethodBinding) may expose internal representation by storing an externally mutable object into InferenceContext.genericMethod  At InferenceContext.java:[line 32]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.InferenceContext.toString() where default case is missing  At InferenceContext.java:[lines 89-94]
M V EI2: new org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker(int, TypeBinding) may expose internal representation by storing an externally mutable object into StackMapFrameCodeStream$ExceptionMarker.binding  At StackMapFrameCodeStream.java:[line 44]
M V EI: org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker.getBinding() may expose internal representation by returning StackMapFrameCodeStream$ExceptionMarker.binding  At StackMapFrameCodeStream.java:[line 65]
M V EI2: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.setSwitchExpression(SwitchExpression) may expose internal representation by storing an externally mutable object into SubRoutineStatement.switchExpression  At SubRoutineStatement.java:[line 85]
M V EI: org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement.getSwitchExpression() may expose internal representation by returning SubRoutineStatement.switchExpression  At SubRoutineStatement.java:[line 81]
H D UC: Useless condition: it's known that typeName.length != 0 at this point  At ReferenceBinding.java:[line 812]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getFileName() may expose internal representation by returning ReferenceBinding.fileName  At ReferenceBinding.java:[line 1098]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.constantPoolName() may expose internal representation by returning ReferenceBinding.constantPoolName  At ReferenceBinding.java:[line 981]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.getSingleAbstractMethod(Scope, boolean) may expose internal representation by returning ReferenceBinding.samProblemBinding  At ReferenceBinding.java:[line 2292]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.signature() may expose internal representation by returning ReferenceBinding.signature  At ReferenceBinding.java:[line 1996]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.computeId() where default case is missing  At ReferenceBinding.java:[lines 483-956]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.applyCloseableClassWhitelists(CompilerOptions) where default case is missing  At ReferenceBinding.java:[lines 2097-2121]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.applyCloseableInterfaceWhitelists() where default case is missing  At ReferenceBinding.java:[lines 2161-2180]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isCompatibleWith(TypeBinding, Scope)  At ReferenceBinding.java:[line 1423]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ElementValuePair$UnresolvedEnumConstant.getEnumConstantName() may expose internal representation by returning ElementValuePair$UnresolvedEnumConstant.enumConstantName  At ElementValuePair.java:[line 47]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.closestMatch() may expose internal representation by returning ProblemReferenceBinding.closestMatch  At ProblemReferenceBinding.java:[line 46]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding.closestReferenceMatch() may expose internal representation by returning ProblemReferenceBinding.closestMatch  At ProblemReferenceBinding.java:[line 53]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding(char[][], ReferenceBinding, int) may expose internal representation by storing an externally mutable object into ProblemReferenceBinding.closestMatch  At ProblemReferenceBinding.java:[line 30]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.PackageBinding(char[][], PackageBinding, LookupEnvironment, ModuleBinding) may expose internal representation by storing an externally mutable object into PackageBinding.parent  At PackageBinding.java:[line 59]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.PackageBinding.isExported()  At PackageBinding.java:[line 457]
M C NP: Possible null pointer dereference of null in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingTypeInMethod(ASTNode, MethodBinding)  Dereferenced at ProblemReporter.java:[line 6881]
M C NP: offendingArgument could be null and is guaranteed to be dereferenced in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wildcardInvocation(ASTNode, TypeBinding, MethodBinding, TypeBinding[])  Dereferenced at ProblemReporter.java:[line 9968]
M C NP: offendingParameter could be null and is guaranteed to be dereferenced in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.wildcardInvocation(ASTNode, TypeBinding, MethodBinding, TypeBinding[])  Dereferenced at ProblemReporter.java:[line 9990]
M C BIT: Bitwise OR of signed byte value computed in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.getElaborationId(int, byte)  At ProblemReporter.java:[line 254]
M P Dm: org.eclipse.jdt.internal.compiler.problem.ProblemReporter.sealedSuperInterfaceDoesNotPermit(SourceTypeBinding, TypeReference, TypeBinding) invokes inefficient new String(String) constructor  At ProblemReporter.java:[line 12024]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.importProblem(ImportReference, Binding) where default case is missing  At ProblemReporter.java:[lines 3373-3388]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocVisibilityArgument(int, int) where default case is missing  At ProblemReporter.java:[lines 6127-6143]
M D UC: Useless object stored in variable arguments of method org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatchingTypeAnnotation(Expression, TypeBinding, TypeBinding, NullAnnotationMatching)  At ProblemReporter.java:[line 10874]
M D UC: Useless object stored in variable shortArguments of method org.eclipse.jdt.internal.compiler.problem.ProblemReporter.nullityMismatchingTypeAnnotation(Expression, TypeBinding, TypeBinding, NullAnnotationMatching)  At ProblemReporter.java:[line 10875]
M D DLS: Dead store to binding in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.expressionNonNullComparison(Expression, boolean)  At ProblemReporter.java:[line 6259]
M D BC: Unchecked/unconfirmed cast from org.eclipse.jdt.internal.compiler.lookup.MethodBinding to org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidConstructor(Statement, MethodBinding)  At ProblemReporter.java:[line 3907]
M D BC: Unchecked/unconfirmed cast from org.eclipse.jdt.internal.compiler.lookup.MethodBinding to org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.invalidMethod(MessageSend, MethodBinding, Scope)  At ProblemReporter.java:[line 4534]
M D BC: Unchecked/unconfirmed cast from org.eclipse.jdt.internal.compiler.lookup.MethodBinding to org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidConstructor(Statement, MethodBinding, int)  At ProblemReporter.java:[line 5447]
M D BC: Unchecked/unconfirmed cast from org.eclipse.jdt.internal.compiler.lookup.MethodBinding to org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.javadocInvalidMethod(MessageSend, MethodBinding, int)  At ProblemReporter.java:[line 5611]
M D BC: instanceof will always return true for all non-null values in org.eclipse.jdt.internal.compiler.problem.ProblemReporter.missingTypeInMethod(ASTNode, MethodBinding), since all org.eclipse.jdt.internal.compiler.ast.MessageSend are instances of org.eclipse.jdt.internal.compiler.ast.MessageSend  At ProblemReporter.java:[line 6880]
M V EI: org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.prototype() may expose internal representation by returning UnresolvedReferenceBinding.prototype  At UnresolvedReferenceBinding.java:[line 92]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.getOpens() may expose internal representation by returning ModuleBinding.openedPackages  At ModuleBinding.java:[line 218]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.getExports() may expose internal representation by returning ModuleBinding.exportedPackages  At ModuleBinding.java:[line 202]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.getRequires() may expose internal representation by returning ModuleBinding.requires  At ModuleBinding.java:[line 240]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.getAllRequiredModules() may expose internal representation by returning ModuleBinding.requiredModules  At ModuleBinding.java:[line 464]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.getServices() may expose internal representation by returning ModuleBinding.services  At ModuleBinding.java:[line 252]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.getRequiresTransitive() may expose internal representation by returning ModuleBinding.requiresTransitive  At ModuleBinding.java:[line 244]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.setPackageNames(SimpleSetOfCharArray) may expose internal representation by storing an externally mutable object into ModuleBinding.packageNames  At ModuleBinding.java:[line 296]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.getUses() may expose internal representation by returning ModuleBinding.uses  At ModuleBinding.java:[line 248]
M P SBSC: org.eclipse.jdt.internal.compiler.util.HashtableOfModule.toString() concatenates strings using + in a loop  At HashtableOfModule.java:[line 107]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding$UnNamedModule.readableName() may expose internal representation by returning ModuleBinding$UnNamedModule.UNNAMED_READABLE_NAME  At ModuleBinding.java:[line 123]
H C NP: Possible null pointer dereference of memberType in org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getTypeFromTypeSignature(SignatureWrapper, TypeVariableBinding[], ReferenceBinding, char[][][], ITypeAnnotationWalker)  Dereferenced at LookupEnvironment.java:[line 2056]
M V EI: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.methodVerifier() may expose internal representation by returning LookupEnvironment.verifier  At LookupEnvironment.java:[line 2144]
H D NS: Potentially dangerous use of non-short-circuit logic in org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.maybeCreateParameterizedType(ReferenceBinding, ReferenceBinding)  At LookupEnvironment.java:[line 1372]
M B Nm: The field name org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.UnNamedModule doesn't start with a lower case letter  In LookupEnvironment.java
M B Nm: The field name org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.JavaBaseModule doesn't start with a lower case letter  In LookupEnvironment.java
M D DLS: Dead store to unitModule in org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.buildTypeBindings(CompilationUnitDeclaration, AccessRestriction)  At LookupEnvironment.java:[line 468]
M D DCN: Do not catch NullPointerException like in org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getModuleFromAnswer(NameEnvironmentAnswer)  At LookupEnvironment.java:[line 439]
M D BC: instanceof will always return true for all non-null values in org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.getInaccessibleBinding(char[][], ModuleBinding), since all org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding are instances of org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding  At LookupEnvironment.java:[line 2314]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.NonNullDefaultAwareTypeAnnotationWalker(IBinaryTypeAnnotation[], int, LookupEnvironment) may expose internal representation by storing an externally mutable object into NonNullDefaultAwareTypeAnnotationWalker.environment  At NonNullDefaultAwareTypeAnnotationWalker.java:[line 49]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.Scope.createTypeVariables(TypeParameter[], Binding) where default case is missing  At Scope.java:[lines 1088-1101]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.Scope.getBinding(char[], int, InvocationSite, boolean) where one case falls through to the next case  At Scope.java:[lines 2091-2095]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(char[], int, boolean) where one case falls through to the next case  At Scope.java:[lines 3339-3342]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.Scope.typeAnnotationsResolutionScope(Scope) where default case is missing  At Scope.java:[lines 5438-5444]
M P SBSC: org.eclipse.jdt.internal.compiler.lookup.Scope.getStaticFactory(ParameterizedTypeBinding, ReferenceBinding, TypeBinding[], InvocationSite) concatenates strings using + in a loop  At Scope.java:[line 5232]
M C BC: instanceof will always return false in org.eclipse.jdt.internal.compiler.lookup.Scope.getOnlyPackage(char[][]), since a org.eclipse.jdt.internal.compiler.lookup.PackageBinding cannot be a org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding  At Scope.java:[line 3159]
M D BC: Unchecked/unconfirmed cast from org.eclipse.jdt.internal.compiler.lookup.MethodBinding to org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding in org.eclipse.jdt.internal.compiler.lookup.Scope.parameterCompatibilityLevel(MethodBinding, TypeBinding[], InvocationSite)  At Scope.java:[line 4921]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.BlockScope.emulateOuterAccess(LocalVariableBinding) where default case is missing  At BlockScope.java:[lines 355-362]
M P SBSC: org.eclipse.jdt.internal.compiler.lookup.BlockScope.basicToString(int) concatenates strings using + in a loop  At BlockScope.java:[line 189]
M P SBSC: org.eclipse.jdt.internal.compiler.lookup.BlockScope.toString(int) concatenates strings using + in a loop  At BlockScope.java:[line 1104]
H D UC: Useless condition: it's known that sourceLevel >= 3801088 (0x3a0000) at this point  At TypeReference.java:[line 370]
M P Dm: org.eclipse.jdt.internal.compiler.ast.TypeReference.checkYieldUsage(Scope) invokes inefficient new String(String) constructor  At TypeReference.java:[line 368]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.WildcardBinding(ReferenceBinding, int, TypeBinding, TypeBinding[], int, LookupEnvironment) may expose internal representation by storing an externally mutable object into WildcardBinding.environment  At WildcardBinding.java:[line 64]
M V EI: org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.superclass() may expose internal representation by returning WildcardBinding.superclass  At WildcardBinding.java:[line 926]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.setTypeAnnotations(AnnotationBinding[], boolean) may expose internal representation by storing an externally mutable object into WildcardBinding.typeAnnotations  At WildcardBinding.java:[line 102]
M V EI: org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.superInterfaces() may expose internal representation by returning WildcardBinding.superInterfaces  At WildcardBinding.java:[line 955]
M V EI: org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.signature() may expose internal representation by returning ReferenceBinding.signature  At WildcardBinding.java:[line 896]
M V EI: org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.genericTypeSignature() may expose internal representation by returning WildcardBinding.genericSignature  At WildcardBinding.java:[line 614]
M V EI: org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.typeVariable() may expose internal representation by returning WildcardBinding.typeVariable  At WildcardBinding.java:[line 1012]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.WildcardBinding.resolve() where default case is missing  At WildcardBinding.java:[lines 835-849]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Expression.computeConversion(Scope, TypeBinding, TypeBinding) where default case is missing  At Expression.java:[lines 721-737]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Expression.postConversionType(Scope) where default case is missing  At Expression.java:[lines 1064-1087]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.PolyTypeBinding(Expression) may expose internal representation by storing an externally mutable object into PolyTypeBinding.expression  At PolyTypeBinding.java:[line 28]
M D RCN: Redundant nullcheck of org.apache.catalina.connector.Request.getPathInfo(), which is known to be non-null in org.apache.catalina.connector.Request.getPathTranslated()  Redundant null check at Request.java:[line 2361]
M D RCN: Redundant nullcheck of pathInfo, which is known to be non-null in org.apache.catalina.connector.Request.getRequestDispatcher(String)  Redundant null check at Request.java:[line 1417]
M V EI: org.apache.catalina.connector.Request.startAsync(ServletRequest, ServletResponse) may expose internal representation by returning Request.asyncContext  At Request.java:[line 1700]
M V EI: org.apache.catalina.connector.Request.getCoyoteRequest() may expose internal representation by returning Request.coyoteRequest  At Request.java:[line 170]
M V EI: org.apache.catalina.connector.Request.getAsyncContext() may expose internal representation by returning Request.asyncContext  At Request.java:[line 1781]
M V EI: org.apache.catalina.connector.Request.getConnector() may expose internal representation by returning Request.connector  At Request.java:[line 549]
M V EI: org.apache.catalina.connector.Request.getInputStream() may expose internal representation by returning Request.inputStream  At Request.java:[line 1049]
M V EI2: org.apache.catalina.connector.Request.setResponse(Response) may expose internal representation by storing an externally mutable object into Request.response  At Request.java:[line 683]
M V EI: org.apache.catalina.connector.Request.getParameterMap() may expose internal representation by returning Request.parameterMap  At Request.java:[line 1131]
M V EI: org.apache.catalina.connector.Request.getReader() may expose internal representation by returning Request.reader  At Request.java:[line 1231]
M V EI: org.apache.catalina.connector.Request.getResponse() may expose internal representation by returning Request.response  At Request.java:[line 674]
M V EI: org.apache.catalina.connector.Request.getAsyncContextInternal() may expose internal representation by returning Request.asyncContext  At Request.java:[line 1785]
M V EI: org.apache.catalina.connector.Request.getParts() may expose internal representation by returning Request.parts  At Request.java:[line 2814]
M V EI: org.apache.catalina.connector.Request.getStream() may expose internal representation by returning Request.inputStream  At Request.java:[line 693]
M V EI: org.apache.catalina.connector.Request.getCookies() may expose internal representation by returning Request.cookies  At Request.java:[line 2223]
M V EI: org.apache.catalina.connector.Request.createInputStream() may expose internal representation by returning Request.inputStream  At Request.java:[line 740]
M V EI2: new org.apache.catalina.connector.Request(Connector) may expose internal representation by storing an externally mutable object into Request.connector  At Request.java:[line 142]
M V EI2: org.apache.catalina.connector.Request.setCoyoteRequest(Request) may expose internal representation by storing an externally mutable object into Request.coyoteRequest  At Request.java:[line 160]
M V EI2: new org.apache.catalina.connector.RequestFacade(Request) may expose internal representation by storing an externally mutable object into RequestFacade.request  At RequestFacade.java:[line 230]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding.setTypeAnnotations(AnnotationBinding[]) may expose internal representation by storing an externally mutable object into MethodBinding.typeAnnotations  At MethodBinding.java:[line 999]
M V EI: org.eclipse.jdt.internal.compiler.lookup.MethodBinding.getTypeAnnotations() may expose internal representation by returning MethodBinding.typeAnnotations  At MethodBinding.java:[line 995]
M V EI: org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature() may expose internal representation by returning MethodBinding.signature  At MethodBinding.java:[line 1063]
M V EI: org.eclipse.jdt.internal.compiler.lookup.MethodBinding.signature(ClassFile) may expose internal representation by returning MethodBinding.signature  At MethodBinding.java:[line 1171]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SyntheticFactoryMethodBinding.getConstructor() may expose internal representation by returning SyntheticFactoryMethodBinding.staticFactoryFor  At SyntheticFactoryMethodBinding.java:[line 36]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.SyntheticFactoryMethodBinding(MethodBinding, LookupEnvironment, ReferenceBinding) may expose internal representation by storing an externally mutable object into SyntheticFactoryMethodBinding.environment  At SyntheticFactoryMethodBinding.java:[line 30]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.SyntheticFactoryMethodBinding(MethodBinding, LookupEnvironment, ReferenceBinding) may expose internal representation by storing an externally mutable object into SyntheticFactoryMethodBinding.enclosingType  At SyntheticFactoryMethodBinding.java:[line 32]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.SyntheticFactoryMethodBinding(MethodBinding, LookupEnvironment, ReferenceBinding) may expose internal representation by storing an externally mutable object into SyntheticFactoryMethodBinding.staticFactoryFor  At SyntheticFactoryMethodBinding.java:[line 31]
M P SBSC: org.eclipse.jdt.internal.compiler.lookup.MethodScope.basicToString(int) concatenates strings using + in a loop  At MethodScope.java:[line 95]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding(char[], Binding, int, LookupEnvironment) may expose internal representation by storing an externally mutable object into TypeVariableBinding.environment  At TypeVariableBinding.java:[line 86]
M V EI: org.eclipse.jdt.internal.compiler.lookup.InferenceVariable.prototype() may expose internal representation by returning InferenceVariable.prototype  At InferenceVariable.java:[line 139]
M V EI: org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.signature() may expose internal representation by returning ReferenceBinding.signature  At CaptureBinding.java:[line 592]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.CaptureBinding.initializeBounds(Scope, ParameterizedTypeBinding) where default case is missing  At CaptureBinding.java:[lines 173-206]
M V EI: org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.readableName() may expose internal representation by returning CaptureBinding18.originalName  At CaptureBinding18.java:[line 323]
M V EI: org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.shortReadableName() may expose internal representation by returning CaptureBinding18.originalName  At CaptureBinding18.java:[line 350]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18(ReferenceBinding, char[], char[], int, int, int, LookupEnvironment) may expose internal representation by storing an externally mutable object into CaptureBinding18.prototype  At CaptureBinding18.java:[line 31]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18.setUpperBounds(TypeBinding[], ReferenceBinding) may expose internal representation by storing an externally mutable object into CaptureBinding18.upperBounds  At CaptureBinding18.java:[line 43]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.CaptureBinding18(ReferenceBinding, char[], char[], int, int, int, LookupEnvironment) may expose internal representation by storing an externally mutable object into CaptureBinding18.originalName  At CaptureBinding18.java:[line 30]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.enclosingType() may expose internal representation by returning ParameterizedTypeBinding.enclosingType  At ParameterizedTypeBinding.java:[line 453]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.swapUnresolved(UnresolvedReferenceBinding, ReferenceBinding, LookupEnvironment) may expose internal representation by storing an externally mutable object into ParameterizedTypeBinding.type  At ParameterizedTypeBinding.java:[line 1474]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding(ReferenceBinding, TypeBinding[], ReferenceBinding, LookupEnvironment) may expose internal representation by storing an externally mutable object into ParameterizedTypeBinding.enclosingType  At ParameterizedTypeBinding.java:[line 83]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.actualType() may expose internal representation by returning ParameterizedTypeBinding.type  At ParameterizedTypeBinding.java:[line 109]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.signature() may expose internal representation by returning ReferenceBinding.signature  At ParameterizedTypeBinding.java:[line 1389]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.genericType() may expose internal representation by returning ParameterizedTypeBinding.type  At ParameterizedTypeBinding.java:[line 620]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.TypeBindingVisitor.visit(TypeBindingVisitor, TypeBinding)  At TypeBindingVisitor.java:[line 82]
M V EI: org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding.enclosingType() may expose internal representation by returning ParameterizedTypeBinding.enclosingType  At RawTypeBinding.java:[line 335]
M C INT: Bad comparison of nonnegative value with 0 in org.eclipse.jdt.internal.compiler.util.Util.appendEscapedChar(StringBuffer, char, boolean)  At Util.java:[line 1714]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.util.Util.computeOuterMostVisibility(TypeDeclaration, int) where default case is missing  At Util.java:[lines 376-387]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in org.eclipse.jdt.internal.compiler.util.Util.buildAllDirectoriesInto(String, String)  At Util.java:[line 289]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(InputStream, int, String): new java.io.InputStreamReader(InputStream)  At Util.java:[line 575]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding.shallowOriginal() may expose internal representation by returning ParameterizedMethodBinding.originalMethod  At ParameterizedMethodBinding.java:[line 363]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding(ParameterizedTypeBinding, MethodBinding) may expose internal representation by storing an externally mutable object into ParameterizedMethodBinding.originalMethod  At ParameterizedMethodBinding.java:[line 48]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding(ReferenceBinding, MethodBinding, char[][], LookupEnvironment) may expose internal representation by storing an externally mutable object into ParameterizedMethodBinding.originalMethod  At ParameterizedMethodBinding.java:[line 187]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution(LookupEnvironment, InferenceVariable[], InvocationSite) may expose internal representation by storing an externally mutable object into InferenceSubstitution.variables  At InferenceSubstitution.java:[line 27]
M V EI: org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution.environment() may expose internal representation by returning InferenceSubstitution.environment  At InferenceSubstitution.java:[line 155]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.InferenceSubstitution(LookupEnvironment, InferenceVariable[], InvocationSite) may expose internal representation by storing an externally mutable object into InferenceSubstitution.environment  At InferenceSubstitution.java:[line 26]
M D SF: Switch statement found in new org.eclipse.jdt.internal.compiler.lookup.TypeBound(InferenceVariable, TypeBinding, int, boolean) where default case is missing  At TypeBound.java:[lines 52-55]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.toString() where default case is missing  At LocalVariableBinding.java:[lines 282-290]
M P SBSC: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding.toString() concatenates strings using + in a loop  At LocalVariableBinding.java:[line 299]
M B Nm: The field name org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.CoverageTestId doesn't start with a lower case letter  In UnconditionalFlowInfo.java
M P SBSC: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.toString() concatenates strings using + in a loop  At UnconditionalFlowInfo.java:[line 2108]
M V EI: org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding.getPreciseTypes() may expose internal representation by returning CatchParameterBinding.preciseTypes  At CatchParameterBinding.java:[line 27]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.setTypeAnnotations(AnnotationBinding[], boolean) may expose internal representation by storing an externally mutable object into ArrayBinding.typeAnnotations  At ArrayBinding.java:[line 441]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.getCloneMethod(MethodBinding) may expose internal representation by returning ArrayBinding.clone  At ArrayBinding.java:[line 548]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.genericTypeSignature() may expose internal representation by returning ArrayBinding.genericTypeSignature  At ArrayBinding.java:[line 254]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ArrayBinding(TypeBinding, int, LookupEnvironment) may expose internal representation by storing an externally mutable object into ArrayBinding.environment  At ArrayBinding.java:[line 65]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.environment() may expose internal representation by returning ArrayBinding.environment  At ArrayBinding.java:[line 243]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding.constantPoolName() may expose internal representation by returning ArrayBinding.constantPoolName  At ArrayBinding.java:[line 156]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.ConstraintTypeFormula.reduceSubType(Scope, TypeBinding, TypeBinding) where one case falls through to the next case  At ConstraintTypeFormula.java:[lines 343-346]
M V EI2: new org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo(TypeBinding) may expose internal representation by storing an externally mutable object into VerificationTypeInfo.binding  At VerificationTypeInfo.java:[line 95]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo.toString() where default case is missing  At VerificationTypeInfo.java:[lines 156-182]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.numberOfDifferentLocals(StackMapFrame) where default case is missing  At StackMapFrame.java:[lines 170-173]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.getNumberOfLocals() where default case is missing  At StackMapFrame.java:[lines 306-309]
M V EI: org.apache.jasper.compiler.Node$ChildInfoBase.getChildInfo() may expose internal representation by returning Node$ChildInfoBase.childInfo  At Node.java:[line 1415]
M V EI2: new org.apache.jasper.compiler.BeanRepository(ClassLoader, ErrorDispatcher) may expose internal representation by storing an externally mutable object into BeanRepository.loader  At BeanRepository.java:[line 42]
M D SF: Switch statement found in org.apache.jasper.compiler.JspUtil.toJavaSourceType(String) where default case is missing  At JspUtil.java:[lines 918-927]
M V EI: org.apache.jasper.compiler.Node$AttributeGenerator.getTag() may expose internal representation by returning Node$AttributeGenerator.tag  At Node.java:[line 1855]
M V EI2: new org.apache.jasper.compiler.Node$AttributeGenerator(Mark, String, Node$CustomTag) may expose internal representation by storing an externally mutable object into Node$AttributeGenerator.tag  At Node.java:[line 1842]
M V EI: org.apache.jasper.compiler.Node$CustomTag.getCustomTagParent() may expose internal representation by returning Node$CustomTag.customTagParent  At Node.java:[line 1665]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setScriptingVars(List, int) may expose internal representation by storing an externally mutable object into Node$CustomTag.atBeginScriptingVars  At Node.java:[line 1679]
M V EI: org.apache.jasper.compiler.Node$CustomTag.getTagPluginContext() may expose internal representation by returning Node$CustomTag.tagPluginContext  At Node.java:[line 1756]
M V EI2: new org.apache.jasper.compiler.Node$CustomTag(String, String, String, String, Attributes, Attributes, Attributes, Mark, Node, TagInfo, Class) may expose internal representation by storing an externally mutable object into Node$CustomTag.tagInfo  At Node.java:[line 1503]
M V EI: org.apache.jasper.compiler.Node$CustomTag.getAtSTag() may expose internal representation by returning Node$CustomTag.atSTag  At Node.java:[line 1764]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setAtETag(Node$Nodes) may expose internal representation by storing an externally mutable object into Node$CustomTag.atETag  At Node.java:[line 1768]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setTagPluginContext(TagPluginContext) may expose internal representation by storing an externally mutable object into Node$CustomTag.tagPluginContext  At Node.java:[line 1752]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setJspAttributes(Node$JspAttribute[]) may expose internal representation by storing an externally mutable object into Node$CustomTag.jspAttrs  At Node.java:[line 1577]
M V EI: org.apache.jasper.compiler.Node$CustomTag.getJspAttributes() may expose internal representation by returning Node$CustomTag.jspAttrs  At Node.java:[line 1581]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setCustomTagParent(Node$CustomTag) may expose internal representation by storing an externally mutable object into Node$CustomTag.customTagParent  At Node.java:[line 1661]
M V EI: org.apache.jasper.compiler.Node$CustomTag.getAtETag() may expose internal representation by returning Node$CustomTag.atETag  At Node.java:[line 1772]
M V EI: org.apache.jasper.compiler.Node$CustomTag.getTagInfo() may expose internal representation by returning Node$CustomTag.tagInfo  At Node.java:[line 1605]
M V EI: org.apache.jasper.compiler.Node$CustomTag.getVariableInfos() may expose internal representation by returning Node$CustomTag.varInfos  At Node.java:[line 1657]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setScriptingVars(List, int) may expose internal representation by storing an externally mutable object into Node$CustomTag.nestedScriptingVars  At Node.java:[line 1685]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setTagData(TagData) may expose internal representation by storing an externally mutable object into Node$CustomTag.tagData  At Node.java:[line 1585]
M V EI: org.apache.jasper.compiler.Node$CustomTag.getTagData() may expose internal representation by returning Node$CustomTag.tagData  At Node.java:[line 1593]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setScriptingVars(List, int) may expose internal representation by storing an externally mutable object into Node$CustomTag.atEndScriptingVars  At Node.java:[line 1682]
M V EI2: org.apache.jasper.compiler.Node$CustomTag.setAtSTag(Node$Nodes) may expose internal representation by storing an externally mutable object into Node$CustomTag.atSTag  At Node.java:[line 1760]
M D SF: Switch statement found in org.apache.jasper.compiler.Node$CustomTag.setScriptingVars(List, int) where default case is missing  At Node.java:[lines 1677-1685]
M D SF: Switch statement found in org.apache.jasper.compiler.Node$CustomTag.getScriptingVars(int) where default case is missing  At Node.java:[lines 1697-1705]
M V EI: org.apache.jasper.compiler.Node$TemplateText.getExtraSmap() may expose internal representation by returning Node$TemplateText.extraSmap  At Node.java:[line 2095]
H D DLS: Dead store to unused in org.apache.jasper.compiler.ELFunctionMapper.map(Node$Nodes)  At ELFunctionMapper.java:[line 69]
M V EI: org.apache.jasper.compiler.Node$JspAttribute.getEL() may expose internal representation by returning Node$JspAttribute.el  At Node.java:[line 2329]
M V EI: org.apache.jasper.compiler.Node$JspAttribute.getNamedAttributeNode() may expose internal representation by returning Node$JspAttribute.namedAttributeNode  At Node.java:[line 2283]
M V EI2: new org.apache.jasper.compiler.TagPluginManager(ServletContext) may expose internal representation by storing an externally mutable object into TagPluginManager.ctxt  At TagPluginManager.java:[line 52]
M V EI2: org.eclipse.jdt.internal.compiler.ast.Annotation.setPersistibleAnnotation(ContainerAnnotation) may expose internal representation by storing an externally mutable object into Annotation.persistibleAnnotation  At Annotation.java:[line 1432]
M V EI: org.eclipse.jdt.internal.compiler.ast.Annotation.getPersistibleAnnotation() may expose internal representation by returning Annotation.persistibleAnnotation  At Annotation.java:[line 1428]
M V EI2: new org.eclipse.jdt.internal.compiler.ast.Annotation() may expose internal representation by storing an externally mutable object into Annotation.persistibleAnnotation  At Annotation.java:[line 59]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Annotation.detectStandardAnnotation(Scope, ReferenceBinding, MemberValuePair) where default case is missing  At Annotation.java:[lines 338-428]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Annotation.resolveType(BlockScope) where default case is missing  At Annotation.java:[lines 987-1102]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Annotation.isAnnotationTargetAllowed(Annotation, BlockScope, TypeBinding, int) where default case is missing  At Annotation.java:[lines 1311-1319]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.TypeParameter.getAllAnnotationContexts(int, int, List) where default case is missing  At TypeParameter.java:[lines 73-78]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFields() where default case is missing  At ClassScope.java:[lines 240-243]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.ClassScope.checkAndSetModifiers() where default case is missing  At ClassScope.java:[lines 660-695]
M D RV: Return value of TypeBinding.isLocalType() ignored, but method has no side effect  At ClassScope.java:[line 1261]
M D RCN: Redundant nullcheck of org.eclipse.jdt.internal.compiler.ast.Expression.resolvedType which is known to be null in org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference.getTypeBinding(Scope)  Redundant null check at QualifiedTypeReference.java:[line 112]
M C INT: Bad comparison of signed byte with 127 in org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateInlinedValue(byte)  At CodeStream.java:[line 2389]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.checkcast(int) where default case is missing  At CodeStream.java:[lines 663-686]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.fieldAccess(byte, int, char[], char[], char[], int, TypeBinding) where default case is missing  At CodeStream.java:[lines 1470-1501]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateBoxingConversion(int) where default case is missing  At CodeStream.java:[lines 1744-1962]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateConstant(Constant, int) where default case is missing  At CodeStream.java:[lines 2080-2106]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateImplicitConversion(int) where default case is missing  At CodeStream.java:[lines 2238-2348]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateUnboxingConversion(int) where default case is missing  At CodeStream.java:[lines 3495-3582]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.getBaseTypeValue(int) where default case is missing  At CodeStream.java:[lines 3616-3703]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.getTYPE(int) where default case is missing  At CodeStream.java:[lines 3806-3889]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.newWrapperFor(int) where default case is missing  At CodeStream.java:[lines 6764-6799]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.codegen.CodeStream.sendOperator(int, int) where default case is missing  At CodeStream.java:[lines 7348-7362]
M B Nm: The field name org.eclipse.jdt.internal.compiler.codegen.CodeStream.ImplicitThis doesn't start with a lower case letter  In CodeStream.java
M P WMI: org.eclipse.jdt.internal.compiler.codegen.CodeStream.generateSyntheticBodyForDeserializeLambda(SyntheticMethodBinding, SyntheticMethodBinding[]) makes inefficient use of keySet iterator instead of entrySet iterator  At CodeStream.java:[line 2842]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding, ASTNode, FlowInfo, BlockScope, boolean) where default case is missing  At FlowContext.java:[lines 284-297]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.flow.FlowContext.checkExceptionHandlers(TypeBinding[], ASTNode, FlowInfo, BlockScope) where default case is missing  At FlowContext.java:[lines 413-430]
M D DLS: Dead store to dimSeverity in org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.analyse(TypeBinding, TypeBinding, TypeBinding, Substitution, int, Expression, NullAnnotationMatching$CheckMode)  At NullAnnotationMatching.java:[line 311]
M P SBSC: org.eclipse.jdt.internal.compiler.ast.CastExpression.printExpression(int, StringBuffer) concatenates strings using + in a loop  At CastExpression.java:[line 600]
M V EI2: org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.setExpectedType(TypeBinding) may expose internal representation by storing an externally mutable object into ConditionalExpression.expectedType  At ConditionalExpression.java:[line 793]
M V EI: org.eclipse.jdt.internal.compiler.ast.Statement.getPatternVariablesWhenTrue() may expose internal representation by returning Statement.patternVarsWhenTrue  At Statement.java:[line 490]
M V EI: org.eclipse.jdt.internal.compiler.ast.Statement.getPatternVariablesWhenFalse() may expose internal representation by returning Statement.patternVarsWhenFalse  At Statement.java:[line 493]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.ast.Statement.analyseArguments(BlockScope, FlowContext, FlowInfo, MethodBinding, Expression[])  At Statement.java:[line 180]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.ast.Statement.internalAnalyseOneArgument18(BlockScope, FlowContext, TypeBinding, Expression, FlowInfo, int, Boolean, TypeBinding)  At Statement.java:[line 217]
M D DCN: Do not catch NullPointerException like in org.eclipse.jdt.internal.compiler.ast.Statement.checkAgainstNullAnnotation(BlockScope, FlowContext, FlowInfo, Expression)  At Statement.java:[line 244]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.ConstantPool.getConstantPool() may expose internal representation by returning ConstantPool.constantPool  At ConstantPool.java:[line 272]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.ConstantPool(Constant[]) may expose internal representation by storing an externally mutable object into ConstantPool.constantPool  At ConstantPool.java:[line 45]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.ConstantPool.setConstantPool(Constant[]) may expose internal representation by storing an externally mutable object into ConstantPool.constantPool  At ConstantPool.java:[line 341]
M D ST: Write to static field org.apache.tomcat.jakartaee.bcel.classfile.ConstantUtf8.created from instance method new org.apache.tomcat.jakartaee.bcel.classfile.ConstantUtf8(String)  At ConstantUtf8.java:[line 218]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.LocalVariable.getConstantPool() may expose internal representation by returning LocalVariable.constantPool  At LocalVariable.java:[line 151]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.LocalVariable.setConstantPool(ConstantPool) may expose internal representation by storing an externally mutable object into LocalVariable.constantPool  At LocalVariable.java:[line 239]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.LocalVariable(int, int, int, int, int, ConstantPool) may expose internal representation by storing an externally mutable object into LocalVariable.constantPool  At LocalVariable.java:[line 93]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.LocalVariable(int, int, int, int, int, ConstantPool, int) may expose internal representation by storing an externally mutable object into LocalVariable.constantPool  At LocalVariable.java:[line 114]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.ElementValuePair(int, ElementValue, ConstantPool) may expose internal representation by storing an externally mutable object into ElementValuePair.constantPool  At ElementValuePair.java:[line 43]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.AnnotationEntry(int, ConstantPool, boolean) may expose internal representation by storing an externally mutable object into AnnotationEntry.constantPool  At AnnotationEntry.java:[line 66]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.AnnotationEntry.getConstantPool() may expose internal representation by returning AnnotationEntry.constantPool  At AnnotationEntry.java:[line 75]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.ParameterAnnotationEntry.getAnnotationEntries() may expose internal representation by returning ParameterAnnotationEntry.annotationTable  At ParameterAnnotationEntry.java:[line 69]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.LocalVariableTable.getLocalVariableTable() may expose internal representation by returning LocalVariableTable.localVariableTable  At LocalVariableTable.java:[line 112]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.LocalVariableTable.setLocalVariableTable(LocalVariable[]) may expose internal representation by storing an externally mutable object into LocalVariableTable.localVariableTable  At LocalVariableTable.java:[line 158]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.LocalVariableTable(int, int, LocalVariable[], ConstantPool) may expose internal representation by storing an externally mutable object into LocalVariableTable.localVariableTable  At LocalVariableTable.java:[line 56]
M D SF: Switch statement found in org.apache.tomcat.jakartaee.bcel.classfile.Utility.codeToString(ByteSequence, ConstantPool, boolean) where one case falls through to the next case  At Utility.java:[lines 334-337]
M B Nm: Class org.apache.tomcat.jakartaee.bcel.classfile.CodeException is not derived from an Exception, even though it is named as such  At CodeException.java:[lines 51-215]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.ExceptionTable.getExceptionIndexTable() may expose internal representation by returning ExceptionTable.exceptionIndexTable  At ExceptionTable.java:[line 114]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.InnerClasses.getInnerClasses() may expose internal representation by returning InnerClasses.innerClasses  At InnerClasses.java:[line 114]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Code.getExceptionTable() may expose internal representation by returning Code.exceptionTable  At Code.java:[line 207]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Code.getCode() may expose internal representation by returning Code.code  At Code.java:[line 198]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Code.getAttributes() may expose internal representation by returning Code.attributes  At Code.java:[line 164]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.typeToRecord(TypeBinding) where default case is missing  At CompilationUnitScope.java:[lines 919-929]
M V EI: org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.getAnnotationType() may expose internal representation by returning AnnotationBinding.type  At AnnotationBinding.java:[line 231]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding(ReferenceBinding, ElementValuePair[]) may expose internal representation by storing an externally mutable object into AnnotationBinding.type  At AnnotationBinding.java:[line 207]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding(ReferenceBinding, ElementValuePair[]) may expose internal representation by storing an externally mutable object into AnnotationBinding.pairs  At AnnotationBinding.java:[line 208]
M V EI: org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding.getElementValuePairs() may expose internal representation by returning AnnotationBinding.pairs  At AnnotationBinding.java:[line 239]
M V EI2: org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.setAnnotationsOnDimensions(Annotation[][]) may expose internal representation by storing an externally mutable object into ArrayTypeReference.annotationsOnDimensions  At ArrayTypeReference.java:[line 90]
M V EI2: new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference(char[], int, Annotation[][], long) may expose internal representation by storing an externally mutable object into ArrayTypeReference.annotationsOnDimensions  At ArrayTypeReference.java:[line 60]
M V EI: org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.getAnnotationsOnDimensions(boolean) may expose internal representation by returning ArrayTypeReference.annotationsOnDimensions  At ArrayTypeReference.java:[line 80]
M V EI2: org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.setAnnotationsOnDimensions(Annotation[][]) may expose internal representation by storing an externally mutable object into ArrayQualifiedTypeReference.annotationsOnDimensions  At ArrayQualifiedTypeReference.java:[line 69]
M V EI: org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference.getAnnotationsOnDimensions(boolean) may expose internal representation by returning ArrayQualifiedTypeReference.annotationsOnDimensions  At ArrayQualifiedTypeReference.java:[line 59]
M V EI2: new org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference(char[][], int, Annotation[][], long[]) may expose internal representation by storing an externally mutable object into ArrayQualifiedTypeReference.annotationsOnDimensions  At ArrayQualifiedTypeReference.java:[line 37]
M V EI: org.eclipse.jdt.internal.compiler.ast.Initializer.getMethodBinding() may expose internal representation by returning Initializer.methodBinding  At Initializer.java:[line 153]
M C RCN: Nullcheck of org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration.type at line 1458 of value previously dereferenced in org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypeFor(RecordComponentBinding)  At SourceTypeBinding.java:[line 1420]
M D NP: Load of known null value in org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticRecordComponentAccessor(RecordComponentBinding, int)  At SourceTypeBinding.java:[line 994]
M D NP: Load of known null value in org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.addSyntheticRecordOverrideMethod(char[], int)  At SourceTypeBinding.java:[line 1013]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.unannotated() may expose internal representation by returning SourceTypeBinding.prototype  At SourceTypeBinding.java:[line 3421]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setMethods(MethodBinding[]) may expose internal representation by storing an externally mutable object into SourceTypeBinding.methods  At SourceTypeBinding.java:[line 3133]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods() may expose internal representation by returning SourceTypeBinding.methods  At SourceTypeBinding.java:[line 2193]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setComponents(RecordComponentBinding[]) may expose internal representation by storing an externally mutable object into SourceTypeBinding.components  At SourceTypeBinding.java:[line 3082]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setNestHost(SourceTypeBinding) may expose internal representation by storing an externally mutable object into SourceTypeBinding.nestHost  At SourceTypeBinding.java:[line 3471]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setFields(FieldBinding[]) may expose internal representation by storing an externally mutable object into SourceTypeBinding.fields  At SourceTypeBinding.java:[line 3098]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.prototype() may expose internal representation by returning SourceTypeBinding.prototype  At SourceTypeBinding.java:[line 2513]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding(char[][], PackageBinding, ClassScope) may expose internal representation by storing an externally mutable object into SourceTypeBinding.prototype  At SourceTypeBinding.java:[line 154]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getNestHost() may expose internal representation by returning SourceTypeBinding.nestHost  At SourceTypeBinding.java:[line 3467]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.components() may expose internal representation by returning SourceTypeBinding.components  At SourceTypeBinding.java:[line 1313]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.genericTypeSignature() may expose internal representation by returning SourceTypeBinding.genericReferenceTypeSignature  At SourceTypeBinding.java:[line 1541]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.fields() may expose internal representation by returning SourceTypeBinding.fields  At SourceTypeBinding.java:[line 1483]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.unResolvedFields() may expose internal representation by returning SourceTypeBinding.fields  At SourceTypeBinding.java:[line 3438]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getImplicitComponentFields() may expose internal representation by returning SourceTypeBinding.implicitComponentFields  At SourceTypeBinding.java:[line 3489]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.containerAnnotationType() may expose internal representation by returning SourceTypeBinding.containerAnnotationType  At SourceTypeBinding.java:[line 2533]
M V EI: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.withoutToplevelNullAnnotation() may expose internal representation by returning SourceTypeBinding.prototype  At SourceTypeBinding.java:[line 3431]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.setContainerAnnotationType(ReferenceBinding) may expose internal representation by storing an externally mutable object into SourceTypeBinding.containerAnnotationType  At SourceTypeBinding.java:[line 3058]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getNullDefault() where default case is missing  At SourceTypeBinding.java:[lines 2005-2011]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.getNullDefault() where one case falls through to the next case  At SourceTypeBinding.java:[lines 2007-2010]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.FieldReference.postConversionType(Scope) where default case is missing  At FieldReference.java:[lines 614-637]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.FieldReference.resolveType(BlockScope) where default case is missing  At FieldReference.java:[lines 695-701]
M V EI: org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding.syntheticEnclosingInstanceTypes() may expose internal representation by returning NestedTypeBinding.enclosingTypes  At NestedTypeBinding.java:[line 249]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ElementValuePair(char[], Object, MethodBinding) may expose internal representation by storing an externally mutable object into ElementValuePair.name  At ElementValuePair.java:[line 92]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.getName() may expose internal representation by returning ElementValuePair.name  At ElementValuePair.java:[line 101]
M B BIT: Check for sign of bitwise operation in org.eclipse.jdt.internal.compiler.lookup.ElementValuePair.getValue(Expression)  At ElementValuePair.java:[line 80]
M V EI: org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.memberValuePairs() may expose internal representation by returning SingleMemberAnnotation.singlePairs  At SingleMemberAnnotation.java:[line 55]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Argument.resolveForCatch(BlockScope) where default case is missing  At Argument.java:[lines 216-226]
M B NP: org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.getParameterNonNullness(MethodBinding, int, boolean) has Boolean return type and returns explicit null  At ImplicitNullAnnotationVerifier.java:[line 494]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier(LookupEnvironment, boolean) may expose internal representation by storing an externally mutable object into ImplicitNullAnnotationVerifier.environment  At ImplicitNullAnnotationVerifier.java:[line 69]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.checkImplicitNullAnnotations(MethodBinding, AbstractMethodDeclaration, boolean, Scope)  At ImplicitNullAnnotationVerifier.java:[line 139]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.checkImplicitNullAnnotations(MethodBinding, AbstractMethodDeclaration, boolean, Scope)  At ImplicitNullAnnotationVerifier.java:[line 137]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.checkNullSpecInheritance(MethodBinding, AbstractMethodDeclaration, boolean, ParameterNonNullDefaultProvider, boolean, MethodBinding, MethodBinding[], Scope, ImplicitNullAnnotationVerifier$InheritedNonNullnessInfo[])  At ImplicitNullAnnotationVerifier.java:[line 369]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.checkNullSpecInheritance(MethodBinding, AbstractMethodDeclaration, boolean, ParameterNonNullDefaultProvider, boolean, MethodBinding, MethodBinding[], Scope, ImplicitNullAnnotationVerifier$InheritedNonNullnessInfo[])  At ImplicitNullAnnotationVerifier.java:[line 401]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.ImplicitNullAnnotationVerifier.recordDeferredInheritedNullness(Scope, ASTNode, MethodBinding, Boolean, ImplicitNullAnnotationVerifier$InheritedNonNullnessInfo)  At ImplicitNullAnnotationVerifier.java:[line 514]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean) where default case is missing  At SingleNameReference.java:[lines 80-107]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.SingleNameReference.analyseCode(BlockScope, FlowContext, FlowInfo, boolean) where default case is missing  At SingleNameReference.java:[lines 187-209]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.SingleNameReference.generateCompoundAssignment(BlockScope, CodeStream, Expression, int, int, boolean) where default case is missing  At SingleNameReference.java:[lines 544-552]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.SingleNameReference.manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo) where default case is missing  At SingleNameReference.java:[lines 915-918]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.SingleNameReference.postConversionType(Scope) where default case is missing  At SingleNameReference.java:[lines 959-982]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.SingleNameReference.resolveType(BlockScope) where one case falls through to the next case  At SingleNameReference.java:[lines 1059-1062]
M D BC: Unchecked/unconfirmed cast from org.eclipse.jdt.internal.compiler.lookup.BlockScope to org.eclipse.jdt.internal.compiler.lookup.MethodScope in org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference.resolve(BlockScope, boolean, boolean)  At JavadocSingleNameReference.java:[line 50]
M V EI: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.constantPoolName() may expose internal representation by returning ReferenceBinding.constantPoolName  At LocalTypeBinding.java:[line 151]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding.setConstantPoolName(char[]) may expose internal representation by storing an externally mutable object into LocalTypeBinding.constantPoolName  At LocalTypeBinding.java:[line 257]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveReference(Expression, Scope) where default case is missing  At Javadoc.java:[lines 441-446]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Javadoc.resolveTypeParameterTags(Scope, boolean) where default case is missing  At Javadoc.java:[lines 781-801]
M P Dm: org.apache.catalina.core.StandardContext.setResponseCharacterEncoding(String) invokes inefficient new String(String) constructor  At StandardContext.java:[line 952]
M V EI: org.apache.catalina.core.StandardContext.getJavaVMs() may expose internal representation by returning StandardContext.javaVMs  At StandardContext.java:[line 6420]
M V EI: org.apache.catalina.core.StandardContext.findPostConstructMethods() may expose internal representation by returning StandardContext.postConstructMethods  At StandardContext.java:[line 6053]
M V EI2: org.apache.catalina.core.StandardContext.setJarScanner(JarScanner) may expose internal representation by storing an externally mutable object into StandardContext.jarScanner  At StandardContext.java:[line 1232]
M V EI: org.apache.catalina.core.StandardContext.getNamingResources() may expose internal representation by returning StandardContext.namingResources  At StandardContext.java:[line 2110]
M V EI2: org.apache.catalina.core.StandardContext.setManager(Manager) may expose internal representation by storing an externally mutable object into StandardContext.manager  At StandardContext.java:[line 1986]
M V EI: org.apache.catalina.core.StandardContext.findWrapperLifecycles() may expose internal representation by returning StandardContext.wrapperLifecycles  At StandardContext.java:[line 3725]
M V EI: org.apache.catalina.core.StandardContext.getResources() may expose internal representation by returning StandardContext.resources  At StandardContext.java:[line 2558]
M V EI: org.apache.catalina.core.StandardContext.getJarScanner() may expose internal representation by returning StandardContext.jarScanner  At StandardContext.java:[line 1226]
M V EI2: org.apache.catalina.core.StandardContext.setNamingContextListener(NamingContextListener) may expose internal representation by storing an externally mutable object into StandardContext.namingContextListener  At StandardContext.java:[line 5909]
M V EI: org.apache.catalina.core.StandardContext.getNotificationInfo() may expose internal representation by returning StandardContext.notificationInfo  At StandardContext.java:[line 6307]
M V EI2: org.apache.catalina.core.StandardContext.setLoginConfig(LoginConfig) may expose internal representation by storing an externally mutable object into StandardContext.loginConfig  At StandardContext.java:[line 2095]
M V EI: org.apache.catalina.core.StandardContext.getCharsetMapper() may expose internal representation by returning StandardContext.charsetMapper  At StandardContext.java:[line 1506]
M V EI: org.apache.catalina.core.StandardContext.findSecurityRoles() may expose internal representation by returning StandardContext.securityRoles  At StandardContext.java:[line 3641]
M V EI: org.apache.catalina.core.StandardContext.getLoader() may expose internal representation by returning StandardContext.loader  At StandardContext.java:[line 1911]
M V EI: org.apache.catalina.core.StandardContext.getApplicationLifecycleListeners() may expose internal representation by returning StandardContext.applicationLifecycleListenersObjects  At StandardContext.java:[line 1400]
M V EI2: org.apache.catalina.core.StandardContext.setLoader(Loader) may expose internal representation by storing an externally mutable object into StandardContext.loader  At StandardContext.java:[line 1929]
M V EI: org.apache.catalina.core.StandardContext.findPreDestroyMethods() may expose internal representation by returning StandardContext.preDestroyMethods  At StandardContext.java:[line 6059]
M V EI2: org.apache.catalina.core.StandardContext.setApplicationLifecycleListeners(Object[]) may expose internal representation by storing an externally mutable object into StandardContext.applicationLifecycleListenersObjects  At StandardContext.java:[line 1413]
M V EI: org.apache.catalina.core.StandardContext.getNamingContextListener() may expose internal representation by returning StandardContext.namingContextListener  At StandardContext.java:[line 5899]
M V EI: org.apache.catalina.core.StandardContext.getManager() may expose internal representation by returning StandardContext.manager  At StandardContext.java:[line 1967]
M V EI2: org.apache.catalina.core.StandardContext.setCharsetMapper(CharsetMapper) may expose internal representation by storing an externally mutable object into StandardContext.charsetMapper  At StandardContext.java:[line 1519]
M V EI: org.apache.catalina.core.StandardContext.findApplicationParameters() may expose internal representation by returning StandardContext.applicationParameters  At StandardContext.java:[line 3437]
M V EI: org.apache.catalina.core.StandardContext.findConstraints() may expose internal representation by returning StandardContext.constraints  At StandardContext.java:[line 3449]
M V EI: org.apache.catalina.core.StandardContext.findWatchedResources() may expose internal representation by returning StandardContext.watchedResources  At StandardContext.java:[line 3701]
M V EI: org.apache.catalina.core.StandardContext.getLoginConfig() may expose internal representation by returning StandardContext.loginConfig  At StandardContext.java:[line 2047]
M V EI2: org.apache.catalina.core.StandardContext.setNamingResources(NamingResourcesImpl) may expose internal representation by storing an externally mutable object into StandardContext.namingResources  At StandardContext.java:[line 2124]
M V EI2: org.apache.catalina.core.StandardContext.setResources(WebResourceRoot) may expose internal representation by storing an externally mutable object into StandardContext.resources  At StandardContext.java:[line 2582]
M V EI: org.apache.catalina.core.StandardContext.findApplicationListeners() may expose internal representation by returning StandardContext.applicationListeners  At StandardContext.java:[line 3426]
M V EI: org.apache.catalina.core.StandardContext.findWelcomeFiles() may expose internal representation by returning StandardContext.welcomeFiles  At StandardContext.java:[line 3713]
M V EI: org.apache.catalina.core.StandardContext.findWrapperListeners() may expose internal representation by returning StandardContext.wrapperListeners  At StandardContext.java:[line 3737]
M V EI2: org.apache.catalina.core.StandardContext.setJavaVMs(String[]) may expose internal representation by storing an externally mutable object into StandardContext.javaVMs  At StandardContext.java:[line 6434]
M V EI: org.apache.catalina.core.StandardContext.getParentClassLoader() may expose internal representation by returning ContainerBase.parentClassLoader  At StandardContext.java:[line 2285]
M M SWL: org.apache.catalina.core.StandardContext.stopInternal() calls Thread.sleep() with a lock held  At StandardContext.java:[line 5393]
M D RCN: Redundant nullcheck of org.apache.catalina.core.StandardServer.periodicLifecycleEventFuture, which is known to be non-null in org.apache.catalina.core.StandardServer.startPeriodicLifecycleEvent()  Redundant null check at StandardServer.java:[line 942]
H B DMI: Random object created and used only once in org.apache.catalina.core.StandardServer.await()  At StandardServer.java:[line 632]
M V EI: org.apache.catalina.core.StandardServer.getGlobalNamingContext() may expose internal representation by returning StandardServer.globalNamingContext  At StandardServer.java:[line 228]
M V EI2: org.apache.catalina.core.StandardServer.setParentClassLoader(ClassLoader) may expose internal representation by storing an externally mutable object into StandardServer.parentClassLoader  At StandardServer.java:[line 1093]
M V EI2: org.apache.catalina.core.StandardServer.setGlobalNamingContext(Context) may expose internal representation by storing an externally mutable object into StandardServer.globalNamingContext  At StandardServer.java:[line 238]
M V EI: org.apache.catalina.core.StandardServer.findServices() may expose internal representation by returning StandardServer.services  At StandardServer.java:[line 713]
M V EI: org.apache.catalina.core.StandardServer.getCatalina() may expose internal representation by returning StandardServer.catalina  At StandardServer.java:[line 391]
M V EI2: org.apache.catalina.core.StandardServer.setCatalina(Catalina) may expose internal representation by storing an externally mutable object into StandardServer.catalina  At StandardServer.java:[line 400]
M V EI2: org.apache.catalina.core.StandardServer.setGlobalNamingResources(NamingResourcesImpl) may expose internal representation by storing an externally mutable object into StandardServer.globalNamingResources  At StandardServer.java:[line 262]
M V EI: org.apache.catalina.core.StandardServer.getParentClassLoader() may expose internal representation by returning StandardServer.parentClassLoader  At StandardServer.java:[line 1077]
M V EI: org.apache.catalina.core.StandardServer.getGlobalNamingResources() may expose internal representation by returning StandardServer.globalNamingResources  At StandardServer.java:[line 247]
M V EI2: new org.apache.catalina.core.ApplicationSessionCookieConfig(StandardContext) may expose internal representation by storing an externally mutable object into ApplicationSessionCookieConfig.context  At ApplicationSessionCookieConfig.java:[line 44]
M D NP: Load of known null value in org.apache.catalina.ssi.ExpressionParseTree.pushOpp(ExpressionParseTree$OppNode)  At ExpressionParseTree.java:[line 95]
M V EI2: new org.apache.catalina.ssi.ExpressionParseTree(String, SSIMediator) may expose internal representation by storing an externally mutable object into ExpressionParseTree.ssiMediator  At ExpressionParseTree.java:[line 64]
M V EI: org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getThrownExceptions() may expose internal representation by returning LambdaExpression.thrownExceptions  At LambdaExpression.java:[line 1246]
M V EI: org.eclipse.jdt.internal.compiler.ast.LambdaExpression.getMethodBinding() may expose internal representation by returning FunctionalExpression.actualMethodBinding  At LambdaExpression.java:[line 1392]
M V EI: org.eclipse.jdt.internal.compiler.ast.LambdaExpression.resultExpressions() may expose internal representation by returning LambdaExpression.resultExpressions  At LambdaExpression.java:[line 178]
M P SBSC: org.eclipse.jdt.internal.compiler.ast.LambdaExpression.printExpression(int, StringBuffer, boolean) concatenates strings using + in a loop  At LambdaExpression.java:[line 747]
M C INT: Bad comparison of nonnegative value with 0 in org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveDeprecatedAnnotations(BlockScope, Annotation[], Binding)  At ASTNode.java:[line 1322]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.ASTNode.resolveAnnotations(BlockScope, Annotation[], Binding, boolean) where default case is missing  At ASTNode.java:[lines 866-936]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.ASTNode.copySE8AnnotationsToType(BlockScope, Binding, Annotation[], boolean) where default case is missing  At ASTNode.java:[lines 1141-1193]
M V EI2: new org.eclipse.jdt.internal.compiler.ast.ModuleDeclaration(CompilationResult, char[][], long[]) may expose internal representation by storing an externally mutable object into ModuleDeclaration.compilationResult  At ModuleDeclaration.java:[line 80]
M V EI: org.eclipse.jdt.internal.compiler.ast.ModuleDeclaration.compilationResult() may expose internal representation by returning ModuleDeclaration.compilationResult  At ModuleDeclaration.java:[line 440]
M V EI: org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.resolveType(BlockScope, boolean) may expose internal representation by returning FunctionalExpression.expectedType  At FunctionalExpression.java:[line 220]
M V EI2: org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.setExpectedType(TypeBinding) may expose internal representation by storing an externally mutable object into FunctionalExpression.expectedType  At FunctionalExpression.java:[line 98]
M V EI: org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.expectedType() may expose internal representation by returning FunctionalExpression.expectedType  At FunctionalExpression.java:[line 160]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.reportSamProblem(BlockScope, MethodBinding) where default case is missing  At FunctionalExpression.java:[lines 229-236]
M C NP: Null passed for non-null parameter of org.eclipse.jdt.internal.compiler.lookup.Scope.createArrayType(TypeBinding, int) in org.eclipse.jdt.internal.compiler.ClassFile.getANewArrayTypeBinding(char[], Scope)  Method invoked at ClassFile.java:[line 6414]
M C NP: Null passed for non-null parameter of org.eclipse.jdt.internal.compiler.lookup.Scope.createArrayType(TypeBinding, int) in org.eclipse.jdt.internal.compiler.ClassFile.getTypeBinding(char[], Scope, boolean)  Method invoked at ClassFile.java:[line 6303]
M V EI: org.eclipse.jdt.internal.compiler.ClassFile.getBytes() may expose internal representation by returning ClassFile.bytes  At ClassFile.java:[line 5664]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.addSpecialMethods(TypeDeclaration) where default case is missing  At ClassFile.java:[lines 1087-1150]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.dumpTargetTypeContents(int, AnnotationContext) where default case is missing  At ClassFile.java:[lines 2495-2588]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.generateConstantValueAttribute(Constant, FieldBinding, int) where default case is missing  At ClassFile.java:[lines 2755-2813]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.generateElementValue(int, Expression, Constant, TypeBinding) where default case is missing  At ClassFile.java:[lines 3306-3378]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapAttribute(MethodBinding, int, int, int, boolean, Scope) where default case is missing  At ClassFile.java:[lines 5096-5105]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.generateStackMapTableAttribute(MethodBinding, int, int, int, boolean, Scope) where default case is missing  At ClassFile.java:[lines 5275-5284]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.getTypeBinding(char[], Scope, boolean) where default case is missing  At ClassFile.java:[lines 6275-6301]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.getANewArrayTypeBinding(char[], Scope) where default case is missing  At ClassFile.java:[lines 6386-6412]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ClassFile.traverse(MethodBinding, int, byte[], int, int, Map, boolean, Scope) where default case is missing  At ClassFile.java:[lines 6590-6602]
M D BC: instanceof will always return true for all non-null values in org.eclipse.jdt.internal.compiler.ClassFile.addBootStrapRecordEntry(int, TypeDeclaration, Map), since all org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding are instances of org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding  At ClassFile.java:[line 3806]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.Annotations(byte, int, int, AnnotationEntry[], ConstantPool, boolean) may expose internal representation by storing an externally mutable object into Annotations.annotationTable  At Annotations.java:[line 61]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.Annotations.setAnnotationTable(AnnotationEntry[]) may expose internal representation by storing an externally mutable object into Annotations.annotationTable  At Annotations.java:[line 80]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Annotations.getAnnotationEntries() may expose internal representation by returning Annotations.annotationTable  At Annotations.java:[line 87]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.ParameterAnnotations.getParameterAnnotationTable() may expose internal representation by returning ParameterAnnotations.parameterAnnotationTable  At ParameterAnnotations.java:[line 92]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.ParameterAnnotations.getParameterAnnotationEntries() may expose internal representation by returning ParameterAnnotations.parameterAnnotationTable  At ParameterAnnotations.java:[line 100]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.ParameterAnnotations.setParameterAnnotationTable(ParameterAnnotationEntry[]) may expose internal representation by storing an externally mutable object into ParameterAnnotations.parameterAnnotationTable  At ParameterAnnotations.java:[line 84]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.ParameterAnnotations(byte, int, int, ParameterAnnotationEntry[], ConstantPool) may expose internal representation by storing an externally mutable object into ParameterAnnotations.parameterAnnotationTable  At ParameterAnnotations.java:[line 63]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.Attribute.setConstantPool(ConstantPool) may expose internal representation by storing an externally mutable object into Attribute.constant_pool  At Attribute.java:[line 362]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Attribute.getConstantPool() may expose internal representation by returning Attribute.constant_pool  At Attribute.java:[line 319]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.FieldOrMethod.getAttributes() may expose internal representation by returning FieldOrMethod.attributes  At FieldOrMethod.java:[line 154]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.FieldOrMethod.setConstantPool(ConstantPool) may expose internal representation by storing an externally mutable object into FieldOrMethod.constant_pool  At FieldOrMethod.java:[line 179]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.FieldOrMethod.setAttributes(Attribute[]) may expose internal representation by storing an externally mutable object into FieldOrMethod.attributes  At FieldOrMethod.java:[line 162]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.FieldOrMethod.getConstantPool() may expose internal representation by returning FieldOrMethod.constant_pool  At FieldOrMethod.java:[line 171]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.FieldOrMethod.getAnnotationEntries() may expose internal representation by returning FieldOrMethod.annotationEntries  At FieldOrMethod.java:[line 267]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Method.getParameterAnnotationEntries() may expose internal representation by returning Method.parameterAnnotationEntries  At Method.java:[line 268]
M V EI2: new org.apache.tomcat.websocket.WsSession(WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, ServerEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.requestParameterMap  At WsSession.java:[line 240]
M V EI2: new org.apache.tomcat.websocket.WsSession(ClientEndpointHolder, WsRemoteEndpointImplBase, WsWebSocketContainer, List, String, Map, boolean, ClientEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.wsRemoteEndpoint  At WsSession.java:[line 147]
M V EI2: new org.apache.tomcat.websocket.WsSession(WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, ServerEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.negotiatedExtensions  At WsSession.java:[line 245]
M V EI2: new org.apache.tomcat.websocket.WsSession(WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, ServerEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.wsRemoteEndpoint  At WsSession.java:[line 226]
M V EI2: new org.apache.tomcat.websocket.WsSession(ClientEndpointHolder, WsRemoteEndpointImplBase, WsWebSocketContainer, List, String, Map, boolean, ClientEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.webSocketContainer  At WsSession.java:[line 151]
M V EI: org.apache.tomcat.websocket.WsSession.getContainer() may expose internal representation by returning WsSession.webSocketContainer  At WsSession.java:[line 407]
M V EI2: new org.apache.tomcat.websocket.WsSession(Endpoint, WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, EndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.pathParameters  At WsSession.java:[line 376]
M V EI: org.apache.tomcat.websocket.WsSession.getUserProperties() may expose internal representation by returning WsSession.userProperties  At WsSession.java:[line 992]
M V EI2: new org.apache.tomcat.websocket.WsSession(Endpoint, WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, EndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.wsRemoteEndpoint  At WsSession.java:[line 351]
M V EI2: new org.apache.tomcat.websocket.WsSession(WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, ServerEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.pathParameters  At WsSession.java:[line 251]
M V EI2: new org.apache.tomcat.websocket.WsSession(Endpoint, WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, EndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.requestParameterMap  At WsSession.java:[line 365]
M V EI2: new org.apache.tomcat.websocket.WsSession(ClientEndpointHolder, WsRemoteEndpointImplBase, WsWebSocketContainer, List, String, Map, boolean, ClientEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.pathParameters  At WsSession.java:[line 168]
M V EI: org.apache.tomcat.websocket.WsSession.getPathParameters() may expose internal representation by returning WsSession.pathParameters  At WsSession.java:[line 979]
M V EI2: new org.apache.tomcat.websocket.WsSession(Endpoint, WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, EndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.webSocketContainer  At WsSession.java:[line 355]
M V EI: org.apache.tomcat.websocket.WsSession.getNegotiatedExtensions() may expose internal representation by returning WsSession.negotiatedExtensions  At WsSession.java:[line 565]
M V EI2: new org.apache.tomcat.websocket.WsSession(ClientEndpointHolder, WsRemoteEndpointImplBase, WsWebSocketContainer, List, String, Map, boolean, ClientEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.negotiatedExtensions  At WsSession.java:[line 162]
M V EI: org.apache.tomcat.websocket.WsSession.getAsyncRemote() may expose internal representation by returning WsSession.remoteEndpointAsync  At WsSession.java:[line 634]
M V EI: org.apache.tomcat.websocket.WsSession.getRequestParameterMap() may expose internal representation by returning WsSession.requestParameterMap  At WsSession.java:[line 958]
M V EI2: new org.apache.tomcat.websocket.WsSession(WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, ServerEndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.webSocketContainer  At WsSession.java:[line 230]
M V EI2: new org.apache.tomcat.websocket.WsSession(Endpoint, WsRemoteEndpointImplBase, WsWebSocketContainer, URI, Map, String, Principal, String, List, String, Map, boolean, EndpointConfig) may expose internal representation by storing an externally mutable object into WsSession.negotiatedExtensions  At WsSession.java:[line 370]
H B DMI: Random object created and used only once in org.apache.tomcat.websocket.Util.generateMask()  At Util.java:[line 163]
M D NP: Load of known null value in jakarta.el.BeanNameELResolver.getValue(ELContext, Object, Object)  At BeanNameELResolver.java:[line 46]
M D NP: Load of known null value in jakarta.el.BeanNameELResolver.setValue(ELContext, Object, Object, Object)  At BeanNameELResolver.java:[line 71]
M D NP: Load of known null value in jakarta.el.BeanNameELResolver.getType(ELContext, Object, Object)  At BeanNameELResolver.java:[line 108]
M D NP: Load of known null value in jakarta.el.BeanNameELResolver.isReadOnly(ELContext, Object, Object)  At BeanNameELResolver.java:[line 137]
M V EI2: new jakarta.el.BeanNameELResolver(BeanNameResolver) may expose internal representation by storing an externally mutable object into BeanNameELResolver.beanNameResolver  At BeanNameELResolver.java:[line 31]
M M VO: Increment of volatile field org.apache.coyote.http2.Http2UpgradeHandler.newStreamsSinceLastPrune in org.apache.coyote.http2.Http2UpgradeHandler.pruneClosedStreams(int)  At Http2UpgradeHandler.java:[line 1257]
M D SF: Switch statement found in org.apache.coyote.http2.Http2UpgradeHandler.upgradeDispatch(SocketEvent) where one case falls through to the next case  At Http2UpgradeHandler.java:[lines 366-369]
M D IM: Check for oddness that won't work for negative numbers in org.apache.coyote.http2.Http2UpgradeHandler.createRemoteStream(int)  At Http2UpgradeHandler.java:[line 1207]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.BoundSet.incorporate(InferenceContext18, TypeBound[], TypeBound[]) where default case is missing  At BoundSet.java:[lines 584-592]
M V EI: org.apache.catalina.webresources.CachedResource.getContent() may expose internal representation by returning CachedResource.cachedContent  At CachedResource.java:[line 308]
M V EI2: new org.apache.catalina.webresources.CachedResource(Cache, StandardRoot, String, long, int, boolean) may expose internal representation by storing an externally mutable object into CachedResource.cache  At CachedResource.java:[line 80]
M V EI2: new org.apache.catalina.webresources.CachedResource(Cache, StandardRoot, String, long, int, boolean) may expose internal representation by storing an externally mutable object into CachedResource.root  At CachedResource.java:[line 81]
M D Eq: org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl doesn't override TypeMirrorImpl.equals(Object)  At NoTypeImpl.java:[line 1]
M B SI: Static initializer for org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl creates instance before all static final fields assigned  At NoTypeImpl.java:[line 39]
M V EI2: org.apache.catalina.filters.ExpiresFilter.setExcludedResponseStatusCodes(int[]) may expose internal representation by storing an externally mutable object into ExpiresFilter.excludedResponseStatusCodes  At ExpiresFilter.java:[line 1661]
M V EI: org.apache.catalina.filters.ExpiresFilter.getExcludedResponseStatusCodesAsInts() may expose internal representation by returning ExpiresFilter.excludedResponseStatusCodes  At ExpiresFilter.java:[line 1248]
M V EI: org.apache.catalina.filters.ExpiresFilter.getExpiresConfigurationByContentType() may expose internal representation by returning ExpiresFilter.expiresConfigurationByContentType  At ExpiresFilter.java:[line 1396]
M V EI2: org.apache.catalina.filters.ExpiresFilter.setExpiresConfigurationByContentType(Map) may expose internal representation by storing an externally mutable object into ExpiresFilter.expiresConfigurationByContentType  At ExpiresFilter.java:[line 1666]
M V EI2: new org.apache.catalina.filters.ExpiresFilter$XServletOutputStream(ExpiresFilter, ServletOutputStream, HttpServletRequest, ExpiresFilter$XHttpServletResponse) may expose internal representation by storing an externally mutable object into ExpiresFilter$XServletOutputStream.response  At ExpiresFilter.java:[line 889]
M V EI2: new org.apache.catalina.filters.ExpiresFilter$XServletOutputStream(ExpiresFilter, ServletOutputStream, HttpServletRequest, ExpiresFilter$XHttpServletResponse) may expose internal representation by storing an externally mutable object into ExpiresFilter$XServletOutputStream.this$0  At ExpiresFilter.java:[line 886]
M V EI2: new org.apache.catalina.filters.ExpiresFilter$XServletOutputStream(ExpiresFilter, ServletOutputStream, HttpServletRequest, ExpiresFilter$XHttpServletResponse) may expose internal representation by storing an externally mutable object into ExpiresFilter$XServletOutputStream.servletOutputStream  At ExpiresFilter.java:[line 888]
M V EI2: new org.apache.catalina.filters.ExpiresFilter$XPrintWriter(ExpiresFilter, PrintWriter, HttpServletRequest, ExpiresFilter$XHttpServletResponse) may expose internal representation by storing an externally mutable object into ExpiresFilter$XPrintWriter.out  At ExpiresFilter.java:[line 673]
M V EI2: new org.apache.catalina.filters.ExpiresFilter$XPrintWriter(ExpiresFilter, PrintWriter, HttpServletRequest, ExpiresFilter$XHttpServletResponse) may expose internal representation by storing an externally mutable object into ExpiresFilter$XPrintWriter.this$0  At ExpiresFilter.java:[line 671]
M V EI2: new org.apache.catalina.filters.ExpiresFilter$XPrintWriter(ExpiresFilter, PrintWriter, HttpServletRequest, ExpiresFilter$XHttpServletResponse) may expose internal representation by storing an externally mutable object into ExpiresFilter$XPrintWriter.response  At ExpiresFilter.java:[line 675]
M V EI: org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.getOutputStream() may expose internal representation by returning ExpiresFilter$XHttpServletResponse.servletOutputStream  At ExpiresFilter.java:[line 610]
M V EI: org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse.getWriter() may expose internal representation by returning ExpiresFilter$XHttpServletResponse.printWriter  At ExpiresFilter.java:[line 618]
M V EI2: new org.apache.catalina.filters.ExpiresFilter$XHttpServletResponse(ExpiresFilter, HttpServletRequest, HttpServletResponse) may expose internal representation by storing an externally mutable object into ExpiresFilter$XHttpServletResponse.this$0  At ExpiresFilter.java:[line 573]
M V REFLC: Public method org.apache.tomcat.jakartaee.commons.compress.archivers.zip.ExtraFieldUtils.register(Class) uses reflection to create a class it gets in its parameter which could increase the accessibility of any class  At ExtraFieldUtils.java:[line 68]
M D NP: Possible null pointer dereference in org.apache.tomcat.jakartaee.bcel.util.ClassPath.addJdkModules(String, List) due to return value of called method  Dereferenced at ClassPath.java:[line 454]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.getInterfaceIndices() may expose internal representation by returning JavaClass.interfaces  At JavaClass.java:[line 410]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.getFields() may expose internal representation by returning JavaClass.fields  At JavaClass.java:[line 386]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.getAnnotationEntries() may expose internal representation by returning JavaClass.annotations  At JavaClass.java:[line 345]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.setFields(Field[]) may expose internal representation by storing an externally mutable object into JavaClass.fields  At JavaClass.java:[line 516]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.getConstantPool() may expose internal representation by returning JavaClass.constantPool  At JavaClass.java:[line 376]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.getInterfaceNames() may expose internal representation by returning JavaClass.interfaceNames  At JavaClass.java:[line 402]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.JavaClass(int, int, String, int, int, int, ConstantPool, int[], Field[], Method[], Attribute[], byte) may expose internal representation by storing an externally mutable object into JavaClass.constantPool  At JavaClass.java:[line 140]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.setConstantPool(ConstantPool) may expose internal representation by storing an externally mutable object into JavaClass.constantPool  At JavaClass.java:[line 508]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.getRepository() may expose internal representation by returning JavaClass.repository  At JavaClass.java:[line 754]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.getMethods() may expose internal representation by returning JavaClass.methods  At JavaClass.java:[line 426]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.setInterfaces(int[]) may expose internal representation by storing an externally mutable object into JavaClass.interfaces  At JavaClass.java:[line 540]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.getAttributes() may expose internal representation by returning JavaClass.attributes  At JavaClass.java:[line 333]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.setRepository(Repository) may expose internal representation by storing an externally mutable object into JavaClass.repository  At JavaClass.java:[line 763]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.setAttributes(Attribute[]) may expose internal representation by storing an externally mutable object into JavaClass.attributes  At JavaClass.java:[line 484]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.setInterfaceNames(String[]) may expose internal representation by storing an externally mutable object into JavaClass.interfaceNames  At JavaClass.java:[line 532]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.JavaClass.setMethods(Method[]) may expose internal representation by storing an externally mutable object into JavaClass.methods  At JavaClass.java:[line 556]
M B Nm: The class name org.apache.tomcat.jdbc.pool.DataSource shadows the simple name of implemented interface javax.sql.DataSource  At DataSource.java:[lines 38-148]
M B Nm: The class name org.apache.tomcat.jdbc.pool.XADataSource shadows the simple name of implemented interface javax.sql.XADataSource  At XADataSource.java:[lines 25-34]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ConstraintExceptionFormula(FunctionalExpression, TypeBinding) may expose internal representation by storing an externally mutable object into ConstraintExceptionFormula.right  At ConstraintExceptionFormula.java:[line 41]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ConstraintExceptionFormula.reduce(InferenceContext18) may expose internal representation by returning ReductionResult.FALSE  At ConstraintExceptionFormula.java:[line 50]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ConstraintExceptionFormula(FunctionalExpression, TypeBinding) may expose internal representation by storing an externally mutable object into ConstraintExceptionFormula.left  At ConstraintExceptionFormula.java:[line 40]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ConstraintExceptionFormula.reduce(InferenceContext18) may expose internal representation by returning ReductionResult.TRUE  At ConstraintExceptionFormula.java:[line 84]
M B NP: org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.moreSpecificMain(TypeBinding, TypeBinding, Expression) has Boolean return type and returns explicit null  At InferenceContext18.java:[line 883]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.resumeSuspendedInference(InferenceContext18$SuspendedInferenceRecord, InferenceContext18) may expose internal representation by storing an externally mutable object into InferenceContext18.invocationArguments  At InferenceContext18.java:[line 1664]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.enterPolyInvocation(InvocationSite, Expression[]) may expose internal representation by storing an externally mutable object into InferenceContext18.currentInvocation  At InferenceContext18.java:[line 1622]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.resumeSuspendedInference(InferenceContext18$SuspendedInferenceRecord, InferenceContext18) may expose internal representation by storing an externally mutable object into InferenceContext18.currentInvocation  At InferenceContext18.java:[line 1663]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.enterPolyInvocation(InvocationSite, Expression[]) may expose internal representation by storing an externally mutable object into InferenceContext18.invocationArguments  At InferenceContext18.java:[line 1621]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.InferenceContext18(Scope, Expression[], InvocationSite, InferenceContext18) may expose internal representation by storing an externally mutable object into InferenceContext18.currentInvocation  At InferenceContext18.java:[line 212]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.resumeSuspendedInference(InferenceContext18$SuspendedInferenceRecord, InferenceContext18) may expose internal representation by storing an externally mutable object into InferenceContext18.inferenceVariables  At InferenceContext18.java:[line 1648]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.InferenceContext18(Scope, Expression[], InvocationSite, InferenceContext18) may expose internal representation by storing an externally mutable object into InferenceContext18.invocationArguments  At InferenceContext18.java:[line 211]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.toString() where default case is missing  At InferenceContext18.java:[lines 1747-1751]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.isMoreSpecificThan(MethodBinding, MethodBinding, boolean, boolean)  At InferenceContext18.java:[line 856]
H C NP: org.apache.tomcat.dbcp.dbcp2.DelegatingConnection.prepareStatement(String) may return null, but is declared @Nonnull  At DelegatingConnection.java:[line 721]
M V EI2: org.apache.tomcat.dbcp.dbcp2.DelegatingConnection.setDelegate(Connection) may expose internal representation by storing an externally mutable object into DelegatingConnection.connection  At DelegatingConnection.java:[line 912]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.DelegatingConnection(Connection) may expose internal representation by storing an externally mutable object into DelegatingConnection.connection  At DelegatingConnection.java:[line 85]
M B NP: org.apache.el.lang.ELSupport.coerceToBoolean(ELContext, Object, boolean) has Boolean return type and returns explicit null  At ELSupport.java:[line 252]
M B RV: org.apache.el.lang.ELSupport.compare(ELContext, Object, Object) negates the return value of Comparable.compareTo(Object)  At ELSupport.java:[line 128]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding(MethodBinding, TypeBinding[], LookupEnvironment, boolean, boolean, TypeBinding) may expose internal representation by storing an externally mutable object into ParameterizedGenericMethodBinding.environment  At ParameterizedGenericMethodBinding.java:[line 546]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding(MethodBinding, RawTypeBinding, LookupEnvironment) may expose internal representation by storing an externally mutable object into ParameterizedGenericMethodBinding.originalMethod  At ParameterizedGenericMethodBinding.java:[line 524]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding(MethodBinding, TypeBinding[], LookupEnvironment, boolean, boolean, TypeBinding) may expose internal representation by storing an externally mutable object into ParameterizedGenericMethodBinding.originalMethod  At ParameterizedGenericMethodBinding.java:[line 559]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding(MethodBinding, RawTypeBinding, LookupEnvironment) may expose internal representation by storing an externally mutable object into ParameterizedGenericMethodBinding.environment  At ParameterizedGenericMethodBinding.java:[line 518]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.genericMethod() may expose internal representation by returning ParameterizedMethodBinding.originalMethod  At ParameterizedGenericMethodBinding.java:[line 852]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.environment() may expose internal representation by returning ParameterizedGenericMethodBinding.environment  At ParameterizedGenericMethodBinding.java:[line 650]
M V EI: org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.tiebreakMethod() may expose internal representation by returning ParameterizedGenericMethodBinding.tiebreakMethod  At ParameterizedGenericMethodBinding.java:[line 845]
M V EI: org.eclipse.jdt.internal.compiler.ast.AllocationExpression.invocationTargetType() may expose internal representation by returning AllocationExpression.typeExpected  At AllocationExpression.java:[line 760]
M V EI2: org.eclipse.jdt.internal.compiler.ast.AllocationExpression.isCompatibleWith(TypeBinding, Scope) may expose internal representation by storing an externally mutable object into AllocationExpression.typeExpected  At AllocationExpression.java:[line 572]
M V EI2: org.eclipse.jdt.internal.compiler.ast.AllocationExpression.setExpectedType(TypeBinding) may expose internal representation by storing an externally mutable object into AllocationExpression.typeExpected  At AllocationExpression.java:[line 737]
M D RCN: Redundant nullcheck of copy, which is known to be non-null in org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.cachedResolvedCopy(TypeBinding)  Redundant null check at ReferenceExpression.java:[line 973]
M C RCN: Nullcheck of FunctionalExpression.binding at line 514 of value previously dereferenced in org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.analyseCode(BlockScope, FlowContext, FlowInfo)  At ReferenceExpression.java:[line 513]
M V EI: org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.getExactMethod() may expose internal representation by returning ReferenceExpression.exactMethodBinding  At ReferenceExpression.java:[line 1031]
M V EI: org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.getMethodBinding() may expose internal representation by returning FunctionalExpression.actualMethodBinding  At ReferenceExpression.java:[line 1307]
M V EI2: org.eclipse.jdt.internal.compiler.ast.ReferenceExpression.acceptPotentiallyCompatibleMethods(MethodBinding[]) may expose internal representation by storing an externally mutable object into ReferenceExpression.potentialMethods  At ReferenceExpression.java:[line 560]
M V EI2: new org.eclipse.jdt.internal.compiler.ast.ReferenceExpression(Scanner) may expose internal representation by storing an externally mutable object into ReferenceExpression.original  At ReferenceExpression.java:[line 135]
M V EI2: new org.eclipse.jdt.internal.compiler.ast.ReferenceExpression(Scanner) may expose internal representation by storing an externally mutable object into ReferenceExpression.scanner  At ReferenceExpression.java:[line 136]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.TypeSystem(LookupEnvironment) may expose internal representation by storing an externally mutable object into TypeSystem.environment  At TypeSystem.java:[line 201]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.module() may expose internal representation by returning BinaryTypeBinding.module  At BinaryTypeBinding.java:[line 2516]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.enclosingType() may expose internal representation by returning BinaryTypeBinding.enclosingType  At BinaryTypeBinding.java:[line 1213]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.typeVariables() may expose internal representation by returning BinaryTypeBinding.typeVariables  At BinaryTypeBinding.java:[line 2370]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.components() may expose internal representation by returning BinaryTypeBinding.components  At BinaryTypeBinding.java:[line 1226]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superInterfaces() may expose internal representation by returning BinaryTypeBinding.superInterfaces  At BinaryTypeBinding.java:[line 2320]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass() may expose internal representation by returning BinaryTypeBinding.superclass  At BinaryTypeBinding.java:[line 2237]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding(PackageBinding, IBinaryType, LookupEnvironment, boolean) may expose internal representation by storing an externally mutable object into BinaryTypeBinding.prototype  At BinaryTypeBinding.java:[line 297]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.withoutToplevelNullAnnotation() may expose internal representation by returning BinaryTypeBinding.prototype  At BinaryTypeBinding.java:[line 2494]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.memberTypes() may expose internal representation by returning BinaryTypeBinding.memberTypes  At BinaryTypeBinding.java:[line 1685]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.unResolvedFields() may expose internal representation by returning BinaryTypeBinding.fields  At BinaryTypeBinding.java:[line 2511]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.permittedTypes() may expose internal representation by returning BinaryTypeBinding.permittedSubtypes  At BinaryTypeBinding.java:[line 2361]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.unannotated() may expose internal representation by returning BinaryTypeBinding.prototype  At BinaryTypeBinding.java:[line 2485]
M V EI2: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.setContainerAnnotationType(ReferenceBinding) may expose internal representation by storing an externally mutable object into BinaryTypeBinding.containerAnnotationType  At BinaryTypeBinding.java:[line 1853]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableMethods() may expose internal representation by returning BinaryTypeBinding.methods  At BinaryTypeBinding.java:[line 420]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.prototype() may expose internal representation by returning BinaryTypeBinding.prototype  At BinaryTypeBinding.java:[line 1756]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding(PackageBinding, IBinaryType, LookupEnvironment, boolean) may expose internal representation by storing an externally mutable object into BinaryTypeBinding.environment  At BinaryTypeBinding.java:[line 302]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.fields() may expose internal representation by returning BinaryTypeBinding.fields  At BinaryTypeBinding.java:[line 1244]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.containerAnnotationType() may expose internal representation by returning BinaryTypeBinding.containerAnnotationType  At BinaryTypeBinding.java:[line 1773]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.methods() may expose internal representation by returning BinaryTypeBinding.methods  At BinaryTypeBinding.java:[line 1735]
M V EI: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.availableFields() may expose internal representation by returning BinaryTypeBinding.fields  At BinaryTypeBinding.java:[line 359]
M D Eq: org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding doesn't override AnnotationBinding.equals(Object)  At UnresolvedAnnotationBinding.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding.getAnnotationType() may expose internal representation by returning AnnotationBinding.type  At UnresolvedAnnotationBinding.java:[line 42]
M V EI: org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding.getElementValuePairs() may expose internal representation by returning AnnotationBinding.pairs  At UnresolvedAnnotationBinding.java:[line 82]
M V EI2: org.apache.coyote.http2.Http2Protocol.setHttp11Protocol(AbstractHttp11Protocol) may expose internal representation by storing an externally mutable object into Http2Protocol.http11Protocol  At Http2Protocol.java:[line 352]
M V EI: org.apache.coyote.http2.Http2Protocol.getHttp11Protocol() may expose internal representation by returning Http2Protocol.http11Protocol  At Http2Protocol.java:[line 346]
M V EI: org.apache.coyote.http2.Http2Protocol.getGlobal() may expose internal representation by returning Http2Protocol.global  At Http2Protocol.java:[line 376]
M V EI: org.apache.coyote.http2.Http2Protocol.getAlpnIdentifier() may expose internal representation by returning Http2Protocol.ALPN_IDENTIFIER  At Http2Protocol.java:[line 111]
H B NP: org.apache.catalina.core.StandardWrapper.isSingleThreadModel() has Boolean return type and returns explicit null  At StandardWrapper.java:[line 548]
M V EI: org.apache.catalina.core.StandardWrapper.getNotificationInfo() may expose internal representation by returning StandardWrapper.notificationInfo  At StandardWrapper.java:[line 1764]
M V EI: org.apache.catalina.core.StandardWrapper.getServletMethods() may expose internal representation by returning StandardWrapper.DEFAULT_SERVLET_METHODS  At StandardWrapper.java:[line 580]
M M SWL: org.apache.catalina.core.StandardWrapper.unload() calls Thread.sleep() with a lock held  At StandardWrapper.java:[line 1303]
M V EI: org.apache.catalina.core.ApplicationContext.getDefaultSessionTrackingModes() may expose internal representation by returning ApplicationContext.defaultSessionTrackingModes  At ApplicationContext.java:[line 983]
M V EI: org.apache.catalina.core.ApplicationContext.getEffectiveSessionTrackingModes() may expose internal representation by returning ApplicationContext.sessionTrackingModes  At ApplicationContext.java:[line 1013]
M V EI2: new org.apache.catalina.core.ApplicationContext(StandardContext) may expose internal representation by storing an externally mutable object into ApplicationContext.context  At ApplicationContext.java:[line 105]
M V EI2: org.apache.catalina.core.ApplicationContext.setSessionTrackingModes(Set) may expose internal representation by storing an externally mutable object into ApplicationContext.sessionTrackingModes  At ApplicationContext.java:[line 1052]
M V EI: org.apache.catalina.core.ApplicationContext.getEffectiveSessionTrackingModes() may expose internal representation by returning ApplicationContext.defaultSessionTrackingModes  At ApplicationContext.java:[line 1015]
M V EI: org.apache.catalina.core.ApplicationContext.getSessionCookieConfig() may expose internal representation by returning ApplicationContext.sessionCookieConfig  At ApplicationContext.java:[line 1021]
H M VO: Increment of volatile field org.apache.catalina.ha.tcp.ReplicationValve.nrOfCrossContextSendRequests in org.apache.catalina.ha.tcp.ReplicationValve.sendCrossContextSession()  At ReplicationValve.java:[line 437]
H M VO: Increment of volatile field org.apache.catalina.ha.tcp.ReplicationValve.nrOfFilterRequests in org.apache.catalina.ha.tcp.ReplicationValve.sendSessionReplicationMessage(Request, ClusterManager)  At ReplicationValve.java:[line 500]
H M VO: Increment of volatile field org.apache.catalina.ha.tcp.ReplicationValve.nrOfSendRequests in org.apache.catalina.ha.tcp.ReplicationValve.send(ClusterManager, String)  At ReplicationValve.java:[line 531]
H M VO: Increment of volatile field org.apache.catalina.ha.tcp.ReplicationValve.nrOfRequests in org.apache.catalina.ha.tcp.ReplicationValve.updateStats(long, long)  At ReplicationValve.java:[line 575]
M V EI2: org.apache.catalina.ha.tcp.ReplicationValve.setCluster(CatalinaCluster) may expose internal representation by storing an externally mutable object into ReplicationValve.cluster  At ReplicationValve.java:[line 140]
M V EI: org.apache.catalina.ha.tcp.ReplicationValve.getCluster() may expose internal representation by returning ReplicationValve.cluster  At ReplicationValve.java:[line 132]
M V EI2: org.apache.catalina.ha.session.ClusterManagerBase.setCluster(CatalinaCluster) may expose internal representation by storing an externally mutable object into ClusterManagerBase.cluster  At ClusterManagerBase.java:[line 76]
M V EI: org.apache.catalina.ha.session.ClusterManagerBase.getCluster() may expose internal representation by returning ClusterManagerBase.cluster  At ClusterManagerBase.java:[line 71]
M V EI: org.apache.jasper.compiler.Compiler.getCompilationContext() may expose internal representation by returning Compiler.ctxt  At Compiler.java:[line 572]
M V EI2: org.apache.jasper.compiler.Compiler.init(JspCompilationContext, JspServletWrapper) may expose internal representation by storing an externally mutable object into Compiler.jsw  At Compiler.java:[line 75]
M V EI2: org.apache.jasper.compiler.Compiler.init(JspCompilationContext, JspServletWrapper) may expose internal representation by storing an externally mutable object into Compiler.ctxt  At Compiler.java:[line 76]
M V EI: org.apache.jasper.compiler.Compiler.getPageInfo() may expose internal representation by returning Compiler.pageInfo  At Compiler.java:[line 568]
M V EI: org.apache.catalina.ha.session.DeltaSession.getDeltaRequest() may expose internal representation by returning DeltaSession.deltaRequest  At DeltaSession.java:[line 673]
M V EI: org.apache.catalina.core.StandardWrapperFacade.getServletContext() may expose internal representation by returning StandardWrapperFacade.context  At StandardWrapperFacade.java:[line 82]
M V EI: org.apache.tomcat.util.bcel.classfile.AnnotationEntry.getElementValuePairs() may expose internal representation by returning AnnotationEntry.element_value_pairs  At AnnotationEntry.java:[line 69]
M V EI: org.apache.tomcat.dbcp.dbcp2.DelegatingResultSet.getDelegate() may expose internal representation by returning DelegatingResultSet.resultSet  At DelegatingResultSet.java:[line 520]
M V EI: org.apache.tomcat.dbcp.dbcp2.DelegatingResultSet.getStatement() may expose internal representation by returning DelegatingResultSet.statement  At DelegatingResultSet.java:[line 880]
M V EI2: org.apache.tomcat.jdbc.pool.DataSourceProxy.setPoolProperties(PoolConfiguration) may expose internal representation by storing an externally mutable object into DataSourceProxy.poolProperties  At DataSourceProxy.java:[line 275]
M V EI2: new org.apache.tomcat.jdbc.pool.DataSourceProxy(PoolConfiguration) may expose internal representation by storing an externally mutable object into DataSourceProxy.poolProperties  At DataSourceProxy.java:[line 61]
M V EI: org.apache.tomcat.jdbc.pool.DataSourceProxy.getPoolProperties() may expose internal representation by returning DataSourceProxy.poolProperties  At DataSourceProxy.java:[line 98]
M V EI: org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool() may expose internal representation by returning DataSourceProxy.pool  At DataSourceProxy.java:[line 108]
M V EI2: new org.apache.tomcat.jakartaee.commons.compress.archivers.zip.UnsupportedZipFeatureException(UnsupportedZipFeatureException$Feature, ZipArchiveEntry) may expose internal representation by storing an externally mutable object into UnsupportedZipFeatureException.entry  At UnsupportedZipFeatureException.java:[line 44]
M V EI2: new org.apache.tomcat.jakartaee.commons.compress.archivers.zip.UnsupportedZipFeatureException(ZipMethod, ZipArchiveEntry) may expose internal representation by storing an externally mutable object into UnsupportedZipFeatureException.entry  At UnsupportedZipFeatureException.java:[line 59]
M V EI: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.UnsupportedZipFeatureException.getEntry() may expose internal representation by returning UnsupportedZipFeatureException.entry  At UnsupportedZipFeatureException.java:[line 88]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.model.Factory(BaseProcessingEnvImpl) may expose internal representation by storing an externally mutable object into Factory._env  At Factory.java:[line 85]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.apt.model.Factory.decodeModifiers(Set, int, int[]) where default case is missing  At Factory.java:[lines 166-217]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.apt.model.Factory.getModifiers(int, ElementKind, boolean) where default case is missing  At Factory.java:[lines 273-346]
M V EI: jakarta.el.StandardELContext.getELResolver() may expose internal representation by returning StandardELContext.standardResolver  At StandardELContext.java:[line 96]
M V EI: jakarta.el.StandardELContext.getVariableMapper() may expose internal representation by returning StandardELContext.variableMapper  At StandardELContext.java:[line 110]
M V EI2: new jakarta.el.StandardELContext(ELContext) may expose internal representation by storing an externally mutable object into StandardELContext.wrappedContext  At StandardELContext.java:[line 62]
M V EI: jakarta.el.ELManager.getELContext() may expose internal representation by returning ELManager.context  At ELManager.java:[line 38]
M V EI: org.apache.tomcat.websocket.pojo.PojoMethodMapping.getOnError() may expose internal representation by returning PojoMethodMapping.onError  At PojoMethodMapping.java:[line 284]
M V EI: org.apache.tomcat.websocket.pojo.PojoMethodMapping.getOnOpen() may expose internal representation by returning PojoMethodMapping.onOpen  At PojoMethodMapping.java:[line 260]
M V EI: org.apache.tomcat.websocket.pojo.PojoMethodMapping.getOnClose() may expose internal representation by returning PojoMethodMapping.onClose  At PojoMethodMapping.java:[line 272]
M V MS: Public static org.apache.tomcat.jakartaee.bcel.Repository.getRepository() may expose internal representation by returning Repository.repository  At Repository.java:[line 44]
M V MS: org.apache.tomcat.jakartaee.bcel.Repository.setRepository(Repository) may expose internal static state by storing a mutable object into a static field org.apache.tomcat.jakartaee.bcel.Repository.repository  At Repository.java:[line 52]
M D BC: Unchecked/unconfirmed cast from org.eclipse.jdt.internal.compiler.lookup.BlockScope to org.eclipse.jdt.internal.compiler.lookup.MethodScope in org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.analyseCode(BlockScope, FlowContext, FlowInfo)  At ExplicitConstructorCall.java:[line 92]
M D BC: Unchecked/unconfirmed cast from org.eclipse.jdt.internal.compiler.lookup.BlockScope to org.eclipse.jdt.internal.compiler.lookup.MethodScope in org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.generateCode(BlockScope, CodeStream)  At ExplicitConstructorCall.java:[line 153]
M C NP: Possible null pointer dereference of comps in org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.getArgumentsFromComponents(RecordComponent[])  Dereferenced at TypeDeclaration.java:[line 432]
H D UC: Useless condition: it's known that sourceLevel >= 3801088 (0x3a0000) at this point  At TypeDeclaration.java:[line 971]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.checkConstructors(Parser) where default case is missing  At TypeDeclaration.java:[lines 331-338]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(Parser, CompilationUnitDeclaration) where default case is missing  At TypeDeclaration.java:[lines 1162-1165]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.printHeader(int, StringBuffer) where default case is missing  At TypeDeclaration.java:[lines 1221-1235]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve() where one case falls through to the next case  At TypeDeclaration.java:[lines 1423-1427]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve() where default case is missing  At TypeDeclaration.java:[lines 1473-1492]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.classfmt.ExternalAnnotationProvider.initialize(InputStream): new java.io.InputStreamReader(InputStream)  At ExternalAnnotationProvider.java:[line 75]
M V EI: org.apache.catalina.core.NamingContextListener.getEnvContext() may expose internal representation by returning NamingContextListener.envCtx  At NamingContextListener.java:[line 192]
M D REC: Exception is caught when Exception is not thrown in org.apache.catalina.core.NamingContextListener.constructEnvEntry(String, String)  At NamingContextListener.java:[line 789]
M V EI: org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding.constantPoolName() may expose internal representation by returning ReferenceBinding.constantPoolName  At MemberTypeBinding.java:[line 48]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding(MethodBinding, ReferenceBinding[]) may expose internal representation by storing an externally mutable object into MostSpecificExceptionMethodBinding.originalMethod  At MostSpecificExceptionMethodBinding.java:[line 35]
H B NP: org.eclipse.jdt.internal.compiler.lookup.TypeSystem$HashedParameterizedTypes$PTBKey.equals(Object) does not check for null argument  At TypeSystem.java:[lines 113-114]
M B BC: Equals method for org.eclipse.jdt.internal.compiler.lookup.TypeSystem$HashedParameterizedTypes$PTBKey assumes the argument is of type TypeSystem$HashedParameterizedTypes$PTBKey  At TypeSystem.java:[line 113]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.AnnotatableTypeSystem(LookupEnvironment) may expose internal representation by storing an externally mutable object into AnnotatableTypeSystem.environment  At AnnotatableTypeSystem.java:[line 38]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding(MethodBinding, TypeBinding, TypeBinding[]) may expose internal representation by storing an externally mutable object into PolymorphicMethodBinding.polymorphicMethod  At PolymorphicMethodBinding.java:[line 43]
M V EI: org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding.original() may expose internal representation by returning PolymorphicMethodBinding.polymorphicMethod  At PolymorphicMethodBinding.java:[line 49]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding(MethodBinding, TypeBinding[]) may expose internal representation by storing an externally mutable object into PolymorphicMethodBinding.polymorphicMethod  At PolymorphicMethodBinding.java:[line 31]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.problem.ProblemHandler.handle(int, String[], int, String[], int, int, int, ReferenceContext, CompilationResult) where default case is missing  At ProblemHandler.java:[lines 190-212]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Scanner.jumpOverMethodBody() where one case falls through to the next case  At Scanner.java:[lines 2466-2469]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Scanner.recordComment(int) where default case is missing  At Scanner.java:[lines 3240-3248]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Scanner.disambiguatedRestrictedKeyword(int) where default case is missing  At Scanner.java:[lines 5578-5604]
M D DLS: Dead store to pos in org.eclipse.jdt.internal.compiler.parser.Scanner.parseTags()  At Scanner.java:[line 3122]
M P WMI: org.eclipse.jdt.internal.compiler.parser.Scanner.checkFor_KeyWord(int, int, char[]) makes inefficient use of keySet iterator instead of entrySet iterator  At Scanner.java:[line 4209]
M V EI: org.eclipse.jdt.internal.compiler.parser.RecoveredElement.parser() may expose internal representation by returning RecoveredElement.recoveringParser  At RecoveredElement.java:[line 228]
M V EI2: new org.eclipse.jdt.internal.compiler.parser.RecoveredElement(RecoveredElement, int, Parser) may expose internal representation by storing an externally mutable object into RecoveredElement.recoveringParser  At RecoveredElement.java:[line 49]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.getElementValuePairs() may expose internal representation by returning AnnotationInfo.pairs  At AnnotationInfo.java:[line 200]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.getTypeName() may expose internal representation by returning AnnotationInfo.typename  At AnnotationInfo.java:[line 204]
M D RV: Return value of updatedModuleStatement() ignored, but method has no side effect  At RecoveredModuleStatement.java:[line 51]
M D RV: Return value of updatedModuleReference() ignored, but method has no side effect  At RecoveredModuleReference.java:[line 51]
M D RV: Return value of updatedImportReference() ignored, but method has no side effect  At RecoveredImport.java:[line 53]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.TypeAnnotationInfo.getTypePath() may expose internal representation by returning TypeAnnotationInfo.typePath  At TypeAnnotationInfo.java:[line 172]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation.updateFromParserState() where default case is missing  At RecoveredAnnotation.java:[lines 97-158]
M D RV: Return value of updatedAnnotationReference() ignored, but method has no side effect  At RecoveredAnnotation.java:[line 243]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getMethodDescriptor() may expose internal representation by returning MethodInfo.descriptor  At MethodInfo.java:[line 298]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getSelector() may expose internal representation by returning MethodInfo.name  At MethodInfo.java:[line 334]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getArgumentNames() may expose internal representation by returning MethodInfo.argumentNames  At MethodInfo.java:[line 265]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getGenericSignature() may expose internal representation by returning MethodInfo.signature  At MethodInfo.java:[line 286]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.getExceptionTypeNames() may expose internal representation by returning MethodInfo.exceptionNames  At MethodInfo.java:[line 277]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.createMethod(byte[], int[], int, long) where default case is missing  At MethodInfo.java:[lines 56-121]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.MethodInfo.readModifierRelatedAttributes() where default case is missing  At MethodInfo.java:[lines 420-435]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getGenericSignature() may expose internal representation by returning FieldInfo.signature  At FieldInfo.java:[line 196]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getName() may expose internal representation by returning FieldInfo.name  At FieldInfo.java:[line 226]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getTypeName() may expose internal representation by returning FieldInfo.descriptor  At FieldInfo.java:[line 250]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.createField(byte[], int[], int, long) where default case is missing  At FieldInfo.java:[lines 53-88]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getWrappedConstantValue() where default case is missing  At FieldInfo.java:[lines 273-299]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readConstantAttribute() where default case is missing  At FieldInfo.java:[lines 343-381]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readModifierRelatedAttributes() where default case is missing  At FieldInfo.java:[lines 401-408]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateCode(BlockScope, CodeStream, boolean) where default case is missing  At BinaryExpression.java:[lines 149-586]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedGreaterThan(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean) where default case is missing  At BinaryExpression.java:[lines 736-750]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedGreaterThanOrEqual(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean) where default case is missing  At BinaryExpression.java:[lines 844-858]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLessThan(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean) where default case is missing  At BinaryExpression.java:[lines 950-964]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.BinaryExpression.generateOptimizedLessThanOrEqual(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean) where default case is missing  At BinaryExpression.java:[lines 1056-1070]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.BinaryExpression.optimizedBooleanConstant(int, int, int) where default case is missing  At BinaryExpression.java:[lines 1757-1800]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext.complainOnDeferredNullChecks(BlockScope, FlowInfo, boolean) where default case is missing  At LoopingFlowContext.java:[lines 332-444]
M D Eq: org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo doesn't override MethodInfo.equals(Object)  At AnnotationMethodInfo.java:[line 1]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo.createAnnotationMethod(byte[], int[], int, long) where default case is missing  At AnnotationMethodInfo.java:[lines 34-78]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.RecordComponentInfo.getGenericSignature() may expose internal representation by returning RecordComponentInfo.signature  At RecordComponentInfo.java:[line 180]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.RecordComponentInfo.getTypeName() may expose internal representation by returning RecordComponentInfo.descriptor  At RecordComponentInfo.java:[line 219]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.RecordComponentInfo.getName() may expose internal representation by returning RecordComponentInfo.name  At RecordComponentInfo.java:[line 195]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.classfmt.RecordComponentInfo.createComponent(byte[], int[], int, long) where default case is missing  At RecordComponentInfo.java:[lines 51-86]
M V EI: org.eclipse.jdt.internal.compiler.ast.SwitchExpression.expectedType() may expose internal representation by returning SwitchExpression.expectedType  At SwitchExpression.java:[line 806]
M V EI2: org.eclipse.jdt.internal.compiler.ast.SwitchExpression.setExpectedType(TypeBinding) may expose internal representation by storing an externally mutable object into SwitchExpression.expectedType  At SwitchExpression.java:[line 83]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.UnaryExpression.generateCode(BlockScope, CodeStream, boolean) where default case is missing  At UnaryExpression.java:[lines 92-175]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.UnionTypeReference.resolveType(BlockScope, boolean, int) where default case is missing  At UnionTypeReference.java:[lines 61-71]
M D RCN: Redundant nullcheck of org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.elementVariable, which is known to be non-null in org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.generateOptimizedBoolean(BlockScope, CodeStream, BranchLabel, BranchLabel, boolean)  Redundant null check at InstanceOfExpression.java:[line 162]
M V EI2: org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression.addPatternVariablesWhenTrue(LocalVariableBinding[]) may expose internal representation by storing an externally mutable object into InstanceOfExpression.patternVarsWhenTrue  At InstanceOfExpression.java:[line 298]
M D RV: Return value of Statement.getPatternVariablesWhenTrue() ignored, but method has no side effect  At InstanceOfExpression.java:[line 294]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.EqualExpression.checkVariableComparison(BlockScope, FlowContext, FlowInfo, FlowInfo, FlowInfo, LocalVariableBinding, int, Expression) where default case is missing  At EqualExpression.java:[lines 104-124]
M V EI2: org.eclipse.jdt.internal.compiler.parser.RecoveredProvidesStatement.add(SingleTypeReference, int) may expose internal representation by storing an externally mutable object into RecoveredProvidesStatement.impl  At RecoveredProvidesStatement.java:[line 28]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseAssignment(BlockScope, FlowContext, FlowInfo, Assignment, boolean) where default case is missing  At QualifiedNameReference.java:[lines 89-118]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.analyseCode(BlockScope, FlowContext, FlowInfo, boolean) where default case is missing  At QualifiedNameReference.java:[lines 197-222]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.manageEnclosingInstanceAccessIfNecessary(BlockScope, FlowInfo) where default case is missing  At QualifiedNameReference.java:[lines 886-889]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.postConversionType(Scope) where default case is missing  At QualifiedNameReference.java:[lines 959-982]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.resolveType(BlockScope) where one case falls through to the next case  At QualifiedNameReference.java:[lines 1124-1127]
M V EI: org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation.source() may expose internal representation by returning StringLiteral.source  At StringLiteralConcatenation.java:[line 74]
M D RV: Return value of updatedUsesStatement() ignored, but method has no side effect  At RecoveredUsesStatement.java:[line 33]
M B NP: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.matchAnnotations(IBinaryAnnotation, IBinaryAnnotation) has Boolean return type and returns explicit null  At ClassFileReader.java:[line 1230]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMethods() may expose internal representation by returning ClassFileReader.methods  At ClassFileReader.java:[line 817]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getRecordComponents() may expose internal representation by returning ClassFileReader.recordComponents  At ClassFileReader.java:[line 1462]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getSuperclassName() may expose internal representation by returning ClassFileReader.superclassName  At ClassFileReader.java:[line 923]
M V EI2: new org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader(byte[], char[], boolean) may expose internal representation by storing an externally mutable object into ClassFileReader.classFileName  At ClassFileReader.java:[line 208]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.sourceFileName() may expose internal representation by returning ClassFileReader.sourceFileName  At ClassFileReader.java:[line 1438]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getAnnotations() may expose internal representation by returning ClassFileReader.annotations  At ClassFileReader.java:[line 625]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getInterfaceNames() may expose internal representation by returning ClassFileReader.interfaceNames  At ClassFileReader.java:[line 754]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getSourceName() may expose internal representation by returning ClassFileReader.sourceName  At ClassFileReader.java:[line 901]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getFileName() may expose internal representation by returning ClassFileReader.classFileName  At ClassFileReader.java:[line 717]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getGenericSignature() may expose internal representation by returning ClassFileReader.signature  At ClassFileReader.java:[line 722]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getEnclosingTypeName() may expose internal representation by returning ClassFileReader.enclosingTypeName  At ClassFileReader.java:[line 684]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getNestHost() may expose internal representation by returning ClassFileReader.nestHost  At ClassFileReader.java:[line 532]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getFields() may expose internal representation by returning ClassFileReader.fields  At ClassFileReader.java:[line 693]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getEnclosingMethod() may expose internal representation by returning ClassFileReader.enclosingMethod  At ClassFileReader.java:[line 675]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getTypeAnnotations() may expose internal representation by returning ClassFileReader.typeAnnotations  At ClassFileReader.java:[line 633]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getPermittedSubtypeNames() may expose internal representation by returning ClassFileReader.permittedSubtypesNames  At ClassFileReader.java:[line 759]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getName() may expose internal representation by returning ClassFileReader.className  At ClassFileReader.java:[line 895]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getConstantPoolOffsets() may expose internal representation by returning ClassFileStruct.constantPoolOffsets  At ClassFileReader.java:[line 654]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getModuleDeclaration() may expose internal representation by returning ClassFileReader.moduleDeclaration  At ClassFileReader.java:[line 709]
M V EI: org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.getMissingTypeNames() may expose internal representation by returning ClassFileReader.missingTypeNames  At ClassFileReader.java:[line 869]
M D SF: Switch statement found in new org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader(byte[], char[], boolean) where default case is missing  At ClassFileReader.java:[lines 217-287]
M B RC: Suspicious comparison of Boolean references in org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.hasStructuralTypeAnnotationChanges(IBinaryTypeAnnotation[], IBinaryTypeAnnotation[])  At ClassFileReader.java:[line 1340]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.printTypeModifiers(int): java.io.ByteArrayOutputStream.toString()  At ClassFileReader.java:[line 104]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.printTypeModifiers(int): new java.io.PrintWriter(OutputStream)  At ClassFileReader.java:[line 94]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.toString(): java.io.ByteArrayOutputStream.toString()  At ClassFileReader.java:[line 1452]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.toString(): new java.io.PrintWriter(OutputStream)  At ClassFileReader.java:[line 1444]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.LongLiteral.computeConstant() where default case is missing  At LongLiteral.java:[lines 97-130]
M V EI2: new org.eclipse.jdt.internal.compiler.ast.StringLiteral(char[], int, int, int) may expose internal representation by storing an externally mutable object into StringLiteral.source  At StringLiteral.java:[line 31]
M V EI: org.eclipse.jdt.internal.compiler.ast.StringLiteral.source() may expose internal representation by returning StringLiteral.source  At StringLiteral.java:[line 97]
M C NP: Null passed for non-null parameter of generateCode(ClassScope, ClassFile, int) in org.eclipse.jdt.internal.compiler.ast.Clinit.generateCode(ClassScope, ClassFile)  Method invoked at Clinit.java:[line 131]
M V EI2: org.eclipse.jdt.internal.compiler.ast.Clinit.setAssertionSupport(FieldBinding, boolean) may expose internal representation by storing an externally mutable object into Clinit.assertionSyntheticFieldBinding  At Clinit.java:[line 410]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.Clinit.generateCode(ClassScope, ClassFile, int) where default case is missing  At Clinit.java:[lines 292-309]
M V EI: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.getCurrentIdentifierSource() may expose internal representation by returning RecoveryScanner.fakeTokenSource  At RecoveryScanner.java:[line 248]
M V EI2: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.setPendingTokens(int[]) may expose internal representation by storing an externally mutable object into RecoveryScanner.pendingTokens  At RecoveryScanner.java:[line 293]
M V EI: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.getCurrentTokenSource() may expose internal representation by returning RecoveryScanner.fakeTokenSource  At RecoveryScanner.java:[line 260]
M V EI: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.getCurrentTokenSourceString() may expose internal representation by returning RecoveryScanner.fakeTokenSource  At RecoveryScanner.java:[line 254]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.AssertStatement.resolve(BlockScope) where one case falls through to the next case  At AssertStatement.java:[lines 160-171]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.AssertStatement.resolve(BlockScope) where default case is missing  At AssertStatement.java:[lines 155-160]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.ForeachStatement.analyseCode(BlockScope, FlowContext, FlowInfo) where default case is missing  At ForeachStatement.java:[lines 168-181]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.ForeachStatement.generateCode(BlockScope, CodeStream) where default case is missing  At ForeachStatement.java:[lines 240-263]
M V EI: org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer.getCalledFileNames() may expose internal representation by returning ManifestAnalyzer.calledFilesNames  At ManifestAnalyzer.java:[line 198]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer.analyzeManifestContents(char[]) where default case is missing  At ManifestAnalyzer.java:[lines 71-146]
M B FI: org.eclipse.jdt.internal.compiler.apt.util.JrtFileSystem$JrtFileObject.finalize() is nullifying org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject.finalize(); is this intended?  At JrtFileSystem.java:[line 152]
M D Eq: org.eclipse.jdt.internal.compiler.apt.util.JrtFileSystem$JrtFileObject doesn't override ArchiveFileObject.equals(Object)  At JrtFileSystem.java:[line 1]
M D RCN: Redundant nullcheck of org.eclipse.jdt.internal.compiler.ast.DoStatement.action, which is known to be non-null in org.eclipse.jdt.internal.compiler.ast.DoStatement.canCompleteNormally()  Redundant null check at DoStatement.java:[line 292]
M V DP: org.eclipse.jdt.internal.compiler.apt.util.JrtFileSystem.initialize() creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block  At JrtFileSystem.java:[line 70]
M V EI2: new org.apache.tomcat.websocket.WsFrameBase(WsSession, Transformation) may expose internal representation by storing an externally mutable object into WsFrameBase.transformation  At WsFrameBase.java:[line 109]
M V EI2: new org.apache.tomcat.websocket.WsFrameBase(WsSession, Transformation) may expose internal representation by storing an externally mutable object into WsFrameBase.wsSession  At WsFrameBase.java:[line 98]
M C NP: Possible null pointer dereference of constantExpressions in org.eclipse.jdt.internal.compiler.parser.Parser.consumeCaseLabel()  Dereferenced at Parser.java:[line 2281]
M V EI2: new org.eclipse.jdt.internal.compiler.parser.Parser(ProblemReporter, boolean) may expose internal representation by storing an externally mutable object into Parser.problemReporter  At Parser.java:[line 994]
M V EI2: org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(ReferenceContext, int, int, TypeDeclaration[], CompilationUnitDeclaration) may expose internal representation by storing an externally mutable object into Parser.recoveredTypes  At Parser.java:[line 13558]
M V EI: org.eclipse.jdt.internal.compiler.parser.Parser.problemReporter() may expose internal representation by returning Parser.problemReporter  At Parser.java:[line 13617]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.consumeClassDeclaration() where default case is missing  At Parser.java:[lines 2605-2617]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitConstructorInvocation(int, int) where default case is missing  At Parser.java:[lines 4198-4207]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.consumeExplicitConstructorInvocationWithTypeArguments(int, int) where default case is missing  At Parser.java:[lines 4238-4247]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.consumeModuleDeclaration() where default case is missing  At Parser.java:[lines 6244-6283]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(int) where default case is missing  At Parser.java:[lines 6723-8936]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.consumeToken(int) where one case falls through to the next case  At Parser.java:[lines 10354-10374]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.consumeToken(int) where default case is missing  At Parser.java:[lines 10128-10470]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationIntoRecordDeclaration(int) where default case is missing  At Parser.java:[lines 11382-11403]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationInto(int) where default case is missing  At Parser.java:[lines 11582-11603]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.dispatchDeclarationIntoEnumDeclaration(int) where default case is missing  At Parser.java:[lines 11672-11693]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.getNextCharacter(char[], int[]) where default case is missing  At Parser.java:[lines 11954-11964]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.markEnclosingMemberWithLocalOrFunctionalType(Parser$LocalTypeKind) where one case falls through to the next case  At Parser.java:[lines 12544-12547]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.parseBodyDeclarations(char[], int, int, CompilationUnitDeclaration, short) where default case is missing  At Parser.java:[lines 13425-13439]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements() where default case is missing  At Parser.java:[lines 14031-14036]
M P SBSC: org.eclipse.jdt.internal.compiler.parser.Parser.toString() concatenates strings using + in a loop  At Parser.java:[line 14339]
M D DLS: Dead store to cd in org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordDeclaration()  At Parser.java:[line 10966]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.parser.Parser.buildFile(String, List): new java.io.FileWriter(String)  At Parser.java:[line 184]
M V EI2: new org.apache.tomcat.websocket.WsFrameClient(ByteBuffer, AsyncChannelWrapper, WsSession, Transformation) may expose internal representation by storing an externally mutable object into WsFrameClient.channel  At WsFrameClient.java:[line 45]
M V EI: org.eclipse.jdt.internal.compiler.batch.CompilationUnit.module(LookupEnvironment) may expose internal representation by returning CompilationUnit.moduleBinding  At CompilationUnit.java:[line 135]
M D SF: Switch statement found in new org.eclipse.jdt.internal.compiler.batch.CompilationUnit(char[], String, String, String, boolean, String, Function) where default case is missing  At CompilationUnit.java:[lines 68-76]
M B FI: org.eclipse.jdt.internal.compiler.tool.JrtFileSystem$JrtFileObject.finalize() is nullifying org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject.finalize(); is this intended?  At JrtFileSystem.java:[line 151]
M D Eq: org.eclipse.jdt.internal.compiler.tool.JrtFileSystem$JrtFileObject doesn't override ArchiveFileObject.equals(Object)  At JrtFileSystem.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.batch.ClasspathJar.normalizedPath() may expose internal representation by returning ClasspathLocation.normalizedPath  At ClasspathJar.java:[line 313]
M D BC: instanceof will always return true for all non-null values in org.eclipse.jdt.internal.compiler.batch.ClasspathJar.findClass(char[], String, String, String, boolean), since all org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader are instances of org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader  At ClasspathJar.java:[line 123]
M D ST: Write to static field org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.DEFAULT_LOCALE_TEMPLATES from instance method org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory.setLocale(Locale)  At DefaultProblemFactory.java:[line 130]
M V EI: org.eclipse.jdt.internal.compiler.batch.ClasspathJrt.normalizedPath() may expose internal representation by returning ClasspathLocation.normalizedPath  At ClasspathJrt.java:[line 376]
M B Nm: The field name org.eclipse.jdt.internal.compiler.batch.ClasspathJrt.ModulesCache doesn't start with a lower case letter  In ClasspathJrt.java
M V EI2: org.apache.catalina.connector.OutputBuffer.setResponse(Response) may expose internal representation by storing an externally mutable object into OutputBuffer.coyoteResponse  At OutputBuffer.java:[line 153]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.PoolableCallableStatement(CallableStatement, PStmtKey, KeyedObjectPool, DelegatingConnection) may expose internal representation by storing an externally mutable object into PoolableCallableStatement.pool  At PoolableCallableStatement.java:[line 65]
M V DP: org.eclipse.jdt.internal.compiler.tool.JrtFileSystem.initialize() creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block  At JrtFileSystem.java:[line 70]
M C NP: Possible null pointer dereference of org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.compilationResult in org.eclipse.jdt.internal.compiler.Compiler.processCompiledUnits(int, boolean)  Dereferenced at Compiler.java:[line 586]
M D RCN: Redundant nullcheck of org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.scope, which is known to be non-null in org.eclipse.jdt.internal.compiler.Compiler.resolve(CompilationUnitDeclaration, ICompilationUnit, boolean, boolean, boolean)  Redundant null check at Compiler.java:[line 1060]
M B Nm: The field name org.eclipse.jdt.internal.compiler.Compiler.DebugRequestor doesn't start with a lower case letter  In Compiler.java
H I Dm: Found reliance on default encoding in new org.eclipse.jdt.internal.compiler.Compiler(INameEnvironment, IErrorHandlingPolicy, CompilerOptions, ICompilerRequestor, IProblemFactory, PrintWriter, CompilationProgress): new java.io.PrintWriter(OutputStream, boolean)  At Compiler.java:[line 291]
M V EI: org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory.normalizedPath() may expose internal representation by returning ClasspathLocation.normalizedPath  At ClasspathDirectory.java:[line 378]
M D NP: Load of known null value in org.eclipse.jdt.internal.compiler.batch.ClasspathJep247.getModulesDeclaringPackage(String, String)  At ClasspathJep247.java:[line 259]
M V EI: org.eclipse.jdt.internal.compiler.batch.ClasspathJep247.normalizedPath() may expose internal representation by returning ClasspathLocation.normalizedPath  At ClasspathJep247.java:[line 287]
M V EI2: new org.apache.catalina.connector.CoyoteWriter(OutputBuffer) may expose internal representation by storing an externally mutable object into CoyoteWriter.ob  At CoyoteWriter.java:[line 47]
M V EI2: new jakarta.el.LambdaExpression(List, ValueExpression) may expose internal representation by storing an externally mutable object into LambdaExpression.expression  At LambdaExpression.java:[line 34]
M V EI2: jakarta.el.LambdaExpression.setELContext(ELContext) may expose internal representation by storing an externally mutable object into LambdaExpression.context  At LambdaExpression.java:[line 39]
M V EI2: new jakarta.el.LambdaExpression(List, ValueExpression) may expose internal representation by storing an externally mutable object into LambdaExpression.formalParameters  At LambdaExpression.java:[line 33]
M D NP: Load of known null value in new org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl(BaseProcessingEnvImpl, Object, TypeBinding)  At AnnotationValueImpl.java:[line 94]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl(BaseProcessingEnvImpl, Object, TypeBinding) may expose internal representation by storing an externally mutable object into AnnotationValueImpl._env  At AnnotationValueImpl.java:[line 91]
M D BC: instanceof will always return true for all non-null values in org.eclipse.jdt.internal.compiler.batch.ClasspathJmod.findClass(char[], String, String, String, boolean), since all org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader are instances of org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader  At ClasspathJmod.java:[line 63]
M V EI: org.eclipse.jdt.internal.compiler.batch.BasicModule.exports() may expose internal representation by returning BasicModule.exports  At BasicModule.java:[line 172]
M V EI: org.eclipse.jdt.internal.compiler.batch.BasicModule.uses() may expose internal representation by returning BasicModule.uses  At BasicModule.java:[line 176]
M V EI: org.eclipse.jdt.internal.compiler.batch.BasicModule.requires() may expose internal representation by returning BasicModule.requires  At BasicModule.java:[line 168]
M V EI: org.eclipse.jdt.internal.compiler.batch.BasicModule.provides() may expose internal representation by returning BasicModule.provides  At BasicModule.java:[line 180]
M V EI: org.eclipse.jdt.internal.compiler.batch.BasicModule.opens() may expose internal representation by returning BasicModule.opens  At BasicModule.java:[line 184]
M V EI: org.eclipse.jdt.internal.compiler.batch.BasicModule.name() may expose internal representation by returning BasicModule.name  At BasicModule.java:[line 164]
M V EI: org.apache.catalina.connector.Response.getOutputStream() may expose internal representation by returning Response.outputStream  At Response.java:[line 532]
M V EI: org.apache.catalina.connector.Response.getReporter() may expose internal representation by returning Response.writer  At Response.java:[line 458]
M V EI2: org.apache.catalina.connector.Response.setCoyoteResponse(Response) may expose internal representation by storing an externally mutable object into Response.coyoteResponse  At Response.java:[line 104]
M V EI: org.apache.catalina.connector.Response.getResponse() may expose internal representation by returning Response.applicationResponse  At Response.java:[line 324]
M V EI2: org.apache.catalina.connector.Response.setResponse(HttpServletResponse) may expose internal representation by storing an externally mutable object into Response.applicationResponse  At Response.java:[line 346]
M V EI: org.apache.catalina.connector.Response.getCookies() may expose internal representation by returning Response.cookies  At Response.java:[line 231]
M V EI2: org.apache.catalina.connector.Response.setRequest(Request) may expose internal representation by storing an externally mutable object into Response.request  At Response.java:[line 303]
M V EI: org.apache.catalina.connector.Response.getRequest() may expose internal representation by returning Response.request  At Response.java:[line 294]
M V EI: org.apache.catalina.connector.Response.getWriter() may expose internal representation by returning Response.writer  At Response.java:[line 583]
M V EI: org.apache.catalina.connector.Response.getCoyoteResponse() may expose internal representation by returning Response.coyoteResponse  At Response.java:[line 112]
M D BC: instanceof will always return true for all non-null values in org.eclipse.jdt.internal.compiler.batch.ClasspathMultiReleaseJar.findClass(char[], String, String, String, boolean), since all org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader are instances of org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader  At ClasspathMultiReleaseJar.java:[line 126]
M D RCN: Redundant nullcheck of javax.lang.model.SourceVersion.valueOf(String), which is known to be non-null in org.eclipse.jdt.internal.compiler.batch.FileSystem.<static initializer for FileSystem>()  Redundant null check at FileSystem.java:[line 180]
M D NP: Load of known null value in org.eclipse.jdt.internal.compiler.batch.FileSystem.getClasspath(String, String, boolean, AccessRuleSet, String, Map, String)  At FileSystem.java:[line 326]
H B ES: Comparison of String parameter using == or != in org.eclipse.jdt.internal.compiler.batch.FileSystem.getClasspath(String, String, boolean, AccessRuleSet, String, Map, String)  At FileSystem.java:[line 302]
M B ES: Comparison of String objects using == or != in org.eclipse.jdt.internal.compiler.batch.FileSystem.internalFindClass(String, char[], boolean, char[])  At FileSystem.java:[line 468]
M B ES: Comparison of String objects using == or != in org.eclipse.jdt.internal.compiler.batch.FileSystem.findTypeNames(char[][])  At FileSystem.java:[line 523]
M M LI: Incorrect lazy initialization of static field org.eclipse.jdt.internal.compiler.batch.FileSystem.JRT_CLASSPATH_CACHE in org.eclipse.jdt.internal.compiler.batch.FileSystem.getClasspath(String, String, boolean, AccessRuleSet, String, Map, String)  At FileSystem.java:[lines 308-309]
M D NP: Possible null pointer dereference in org.eclipse.jdt.internal.compiler.batch.ModuleFinder.scanForModule(FileSystem$Classpath, File, Parser, boolean, String) due to return value of called method  Dereferenced at ModuleFinder.java:[line 93]
M D NP: Possible null pointer dereference in org.eclipse.jdt.internal.compiler.batch.ModuleFinder.scanForModules(String, Parser, Map, boolean, boolean, List, File, String) due to return value of called method  Dereferenced at ModuleFinder.java:[line 73]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.PoolablePreparedStatement(PreparedStatement, Object, KeyedObjectPool, DelegatingConnection) may expose internal representation by storing an externally mutable object into PoolablePreparedStatement.pool  At PoolablePreparedStatement.java:[line 69]
M V EI2: org.apache.tomcat.dbcp.dbcp2.PoolingConnection.setStatementPool(KeyedObjectPool) may expose internal representation by storing an externally mutable object into PoolingConnection.pstmtPool  At PoolingConnection.java:[line 597]
M V EI: org.apache.tomcat.dbcp.dbcp2.PoolingConnection.getStatementPool() may expose internal representation by returning PoolingConnection.pstmtPool  At PoolingConnection.java:[line 326]
M C NP: Possible null pointer dereference of visibility in org.eclipse.jdt.internal.compiler.batch.Main.handleErrorOrWarningToken(String, boolean, int)  Dereferenced at Main.java:[line 4216]
M C NP: Possible null pointer dereference of visibility in org.eclipse.jdt.internal.compiler.batch.Main.handleErrorOrWarningToken(String, boolean, int)  Dereferenced at Main.java:[line 4151]
M C NP: Possible null pointer dereference of visibility in org.eclipse.jdt.internal.compiler.batch.Main.handleErrorOrWarningToken(String, boolean, int)  Dereferenced at Main.java:[line 4216]
M C NP: Possible null pointer dereference of visibility in org.eclipse.jdt.internal.compiler.batch.Main.handleErrorOrWarningToken(String, boolean, int)  Dereferenced at Main.java:[line 4254]
M C NP: Possible null pointer dereference of visibility in org.eclipse.jdt.internal.compiler.batch.Main.handleErrorOrWarningToken(String, boolean, int)  Dereferenced at Main.java:[line 4254]
M C NP: Possible null pointer dereference of visibility in org.eclipse.jdt.internal.compiler.batch.Main.handleErrorOrWarningToken(String, boolean, int)  Dereferenced at Main.java:[line 4151]
H C SA: Nonsensical self computation of index with itself in org.eclipse.jdt.internal.compiler.batch.Main.processPaths(String[], int, String, ArrayList)  At Main.java:[line 5162]
H C SA: Nonsensical self computation of index with itself in org.eclipse.jdt.internal.compiler.batch.Main.processPaths(String[], int, String, String[])  At Main.java:[line 5220]
M B Dm: org.eclipse.jdt.internal.compiler.batch.Main.compile(String[]) invokes System.exit(...), which shuts down the entire virtual machine  At Main.java:[line 1813]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.batch.Main.configure(String[]) where default case is missing  At Main.java:[lines 2468-2475]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.batch.Main.enableAll(int) where default case is missing  At Main.java:[lines 3356-3361]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.batch.Main.disableAll(int) where default case is missing  At Main.java:[lines 3378-3386]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.batch.Main.handleErrorOrWarningToken(String, boolean, int) where default case is missing  At Main.java:[lines 4029-4035]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.batch.Main.processPathEntries(int, ArrayList, String, String, boolean, boolean) where one case falls through to the next case  At Main.java:[lines 4995-4998]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.batch.Main.processPaths(String[], int, String, ArrayList) where default case is missing  At Main.java:[lines 5106-5111]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.batch.Main.processPaths(String[], int, String, String[]) where default case is missing  At Main.java:[lines 5168-5173]
M P SBSC: org.eclipse.jdt.internal.compiler.batch.Main.processPathEntries(int, ArrayList, String, String, boolean, boolean) concatenates strings using + in a loop  At Main.java:[line 5067]
M D DLS: Dead store to ver in org.eclipse.jdt.internal.compiler.batch.Main.setJavaHome(String)  At Main.java:[line 3512]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.batch.Main.compile(String): new java.io.PrintWriter(OutputStream)  At Main.java:[line 1485]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.batch.Main.main(String[]): new java.io.PrintWriter(OutputStream)  At Main.java:[line 1521]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.batch.Main.setJavaHome(String): new java.io.FileReader(File)  At Main.java:[line 3508]
M B NP: org.apache.jasper.compiler.JspReader.indexOf(char, Mark) has Boolean return type and returns explicit null  At JspReader.java:[line 204]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.PoolableConnection(Connection, ObjectPool, ObjectName, Collection, boolean) may expose internal representation by storing an externally mutable object into PoolableConnection.pool  At PoolableConnection.java:[line 111]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.PoolableConnection(Connection, ObjectPool, ObjectName, Collection, boolean) may expose internal representation by storing an externally mutable object into PoolableConnection.disconnectionSqlCodes  At PoolableConnection.java:[line 113]
M V EI: org.apache.tomcat.dbcp.dbcp2.PoolableConnection.getDisconnectionSqlCodes() may expose internal representation by returning PoolableConnection.disconnectionSqlCodes  At PoolableConnection.java:[line 203]
M D Eq: org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue doesn't override AnnotationValueImpl.equals(Object)  At AnnotationMemberValue.java:[line 1]
M V EI: org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue.getMethodBinding() may expose internal representation by returning AnnotationMemberValue._methodBinding  At AnnotationMemberValue.java:[line 48]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue(BaseProcessingEnvImpl, Object, MethodBinding) may expose internal representation by storing an externally mutable object into AnnotationMemberValue._methodBinding  At AnnotationMemberValue.java:[line 41]
M V EI2: org.apache.catalina.tribes.tipis.AbstractReplicatedMap.setExternalLoaders(ClassLoader[]) may expose internal representation by storing an externally mutable object into AbstractReplicatedMap.externalLoaders  At AbstractReplicatedMap.java:[line 1714]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap.getExternalLoaders() may expose internal representation by returning AbstractReplicatedMap.externalLoaders  At AbstractReplicatedMap.java:[line 1698]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap.getRpcChannel() may expose internal representation by returning AbstractReplicatedMap.rpcChannel  At AbstractReplicatedMap.java:[line 1678]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap.getChannel() may expose internal representation by returning AbstractReplicatedMap.channel  At AbstractReplicatedMap.java:[line 1670]
M V EI: org.apache.catalina.tribes.tipis.AbstractReplicatedMap.getMapContextName() may expose internal representation by returning AbstractReplicatedMap.mapContextName  At AbstractReplicatedMap.java:[line 1674]
M V EI: org.apache.tomcat.util.bcel.classfile.Annotations.getAnnotationEntries() may expose internal representation by returning Annotations.annotationTable  At Annotations.java:[line 47]
M V EI: org.apache.jasper.servlet.JspServletWrapper.getDependants() may expose internal representation by returning JspServletWrapper.ALWAYS_OUTDATED_DEPENDENCIES  At JspServletWrapper.java:[line 339]
M V EI2: org.apache.jasper.servlet.JspServletWrapper.setCompilationException(JasperException) may expose internal representation by storing an externally mutable object into JspServletWrapper.compileException  At JspServletWrapper.java:[line 225]
M V EI: org.apache.jasper.servlet.JspServletWrapper.getJspEngineContext() may expose internal representation by returning JspServletWrapper.ctxt  At JspServletWrapper.java:[line 155]
M V EI: org.apache.jasper.servlet.JspServletWrapper.getUnloadHandle() may expose internal representation by returning JspServletWrapper.unloadHandle  At JspServletWrapper.java:[line 363]
M V EI2: new org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer(SocketWrapperBase, UpgradeInfo, WsServerContainer) may expose internal representation by storing an externally mutable object into WsRemoteEndpointImplServer.socketWrapper  At WsRemoteEndpointImplServer.java:[line 59]
M V EI2: new org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer(SocketWrapperBase, UpgradeInfo, WsServerContainer) may expose internal representation by storing an externally mutable object into WsRemoteEndpointImplServer.upgradeInfo  At WsRemoteEndpointImplServer.java:[line 60]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.tool.EclipseFileObject.openReader(boolean): new java.io.FileReader(File)  At EclipseFileObject.java:[line 191]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.tool.EclipseFileObject.openWriter(): new java.io.FileWriter(File)  At EclipseFileObject.java:[line 200]
M V MS: Public static org.apache.jasper.el.ELContextImpl.getDefaultResolver(ExpressionFactory) may expose internal representation by returning ELContextImpl.DefaultResolver  At ELContextImpl.java:[line 150]
M V EI2: org.apache.jasper.el.ELContextImpl.setVariableMapper(VariableMapper) may expose internal representation by storing an externally mutable object into ELContextImpl.variableMapper  At ELContextImpl.java:[line 135]
M V EI: org.apache.jasper.el.ELContextImpl.getVariableMapper() may expose internal representation by returning ELContextImpl.variableMapper  At ELContextImpl.java:[line 127]
M V EI: org.apache.jasper.el.ELContextImpl.getELResolver() may expose internal representation by returning ELContextImpl.resolver  At ELContextImpl.java:[line 114]
M V EI2: new org.apache.jasper.el.ELContextImpl(ELResolver) may expose internal representation by storing an externally mutable object into ELContextImpl.resolver  At ELContextImpl.java:[line 109]
M D RCN: Redundant nullcheck of reader, which is known to be non-null in org.eclipse.jdt.internal.compiler.batch.ClasspathJsr199.findClass(char[], String, String, String, boolean)  Redundant null check at ClasspathJsr199.java:[line 104]
M V EI: org.eclipse.jdt.internal.compiler.batch.ClasspathJsr199.normalizedPath() may expose internal representation by returning ClasspathLocation.normalizedPath  At ClasspathJsr199.java:[line 230]
M B ES: Comparison of String objects using == or != in org.apache.tomcat.jakartaee.ClassConverter.convertInternal(String, InputStream, OutputStream, EESpecProfile, ClassLoader)  At ClassConverter.java:[line 97]
M V EI: org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.getConnectionInitSqls() may expose internal representation by returning PoolableConnectionFactory.connectionInitSqls  At PoolableConnectionFactory.java:[line 185]
M V EI: org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.getPool() may expose internal representation by returning PoolableConnectionFactory.pool  At PoolableConnectionFactory.java:[line 322]
M V EI: org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.getDataSourceJmxObjectName() may expose internal representation by returning PoolableConnectionFactory.dataSourceJmxObjectName  At PoolableConnectionFactory.java:[line 201]
M V EI: org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.getDataSourceJmxName() may expose internal representation by returning PoolableConnectionFactory.dataSourceJmxObjectName  At PoolableConnectionFactory.java:[line 193]
M V EI2: org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.setConnectionInitSql(Collection) may expose internal representation by storing an externally mutable object into PoolableConnectionFactory.connectionInitSqls  At PoolableConnectionFactory.java:[line 528]
M V EI2: org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.setDisconnectionSqlCodes(Collection) may expose internal representation by storing an externally mutable object into PoolableConnectionFactory.disconnectionSqlCodes  At PoolableConnectionFactory.java:[line 609]
M V EI: org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.getDisconnectionSqlCodes() may expose internal representation by returning PoolableConnectionFactory.disconnectionSqlCodes  At PoolableConnectionFactory.java:[line 290]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory(ConnectionFactory, ObjectName) may expose internal representation by storing an externally mutable object into PoolableConnectionFactory.dataSourceJmxObjectName  At PoolableConnectionFactory.java:[line 109]
M V EI2: org.apache.tomcat.dbcp.dbcp2.PoolableConnectionFactory.setPool(ObjectPool) may expose internal representation by storing an externally mutable object into PoolableConnectionFactory.pool  At PoolableConnectionFactory.java:[line 688]
M V EI: org.apache.catalina.authenticator.AuthenticatorBase.getContainer() may expose internal representation by returning AuthenticatorBase.context  At AuthenticatorBase.java:[line 295]
M V EI2: org.apache.catalina.authenticator.AuthenticatorBase.setContainer(Container) may expose internal representation by storing an externally mutable object into AuthenticatorBase.context  At AuthenticatorBase.java:[line 312]
M V DP: org.apache.catalina.loader.ParallelWebappClassLoader.copyWithoutTransformers() creates a org.apache.catalina.loader.ParallelWebappClassLoader classloader, which should be performed within a doPrivileged block  At ParallelWebappClassLoader.java:[line 64]
M V EI: org.apache.catalina.tribes.group.ChannelInterceptorBase.getPrevious() may expose internal representation by returning ChannelInterceptorBase.previous  At ChannelInterceptorBase.java:[line 77]
M V EI: org.apache.catalina.tribes.group.ChannelInterceptorBase.getChannel() may expose internal representation by returning ChannelInterceptorBase.channel  At ChannelInterceptorBase.java:[line 234]
M V EI: org.apache.catalina.tribes.group.ChannelInterceptorBase.getNext() may expose internal representation by returning ChannelInterceptorBase.next  At ChannelInterceptorBase.java:[line 62]
M V EI2: org.apache.catalina.tribes.group.ChannelInterceptorBase.setChannel(Channel) may expose internal representation by storing an externally mutable object into ChannelInterceptorBase.channel  At ChannelInterceptorBase.java:[line 243]
M V EI2: org.apache.catalina.tribes.group.ChannelInterceptorBase.setPrevious(ChannelInterceptor) may expose internal representation by storing an externally mutable object into ChannelInterceptorBase.previous  At ChannelInterceptorBase.java:[line 67]
M V EI2: org.apache.catalina.tribes.group.ChannelInterceptorBase.setNext(ChannelInterceptor) may expose internal representation by storing an externally mutable object into ChannelInterceptorBase.next  At ChannelInterceptorBase.java:[line 57]
M V EI2: new org.apache.tomcat.jakartaee.commons.compress.archivers.zip.ZipArchiveOutputStream(OutputStream) may expose internal representation by storing an externally mutable object into ZipArchiveOutputStream.out  At ZipArchiveOutputStream.java:[line 297]
M V EI2: new org.apache.tomcat.jakartaee.commons.compress.archivers.zip.ZipArchiveOutputStream(SeekableByteChannel) may expose internal representation by storing an externally mutable object into ZipArchiveOutputStream.channel  At ZipArchiveOutputStream.java:[line 388]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.PoolingDataSource(ObjectPool) may expose internal representation by storing an externally mutable object into PoolingDataSource.pool  At PoolingDataSource.java:[line 103]
M V EI: org.apache.tomcat.dbcp.dbcp2.PoolingDataSource.getLogWriter() may expose internal representation by returning PoolingDataSource.logWriter  At PoolingDataSource.java:[line 191]
M V EI2: org.apache.tomcat.dbcp.dbcp2.PoolingDataSource.setLogWriter(PrintWriter) may expose internal representation by storing an externally mutable object into PoolingDataSource.logWriter  At PoolingDataSource.java:[line 246]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject.openReader(boolean): new java.io.FileReader(File)  At EclipseFileObject.java:[line 188]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject.openWriter(): new java.io.FileWriter(File)  At EclipseFileObject.java:[line 197]
M V EI2: new org.apache.tomcat.util.descriptor.web.JspPropertyGroupDescriptorImpl(JspPropertyGroup) may expose internal representation by storing an externally mutable object into JspPropertyGroupDescriptorImpl.jspPropertyGroup  At JspPropertyGroupDescriptorImpl.java:[line 34]
M V EI: org.apache.catalina.tribes.membership.McastService.getPayload() may expose internal representation by returning McastService.payload  At McastService.java:[line 447]
M V EI2: org.apache.catalina.tribes.membership.McastService.setDomain(byte[]) may expose internal representation by storing an externally mutable object into McastService.domain  At McastService.java:[line 477]
M V EI: org.apache.catalina.tribes.membership.McastService.getDomain() may expose internal representation by returning McastService.domain  At McastService.java:[line 452]
M V EI2: org.apache.catalina.tribes.membership.McastService.setPayload(byte[]) may expose internal representation by storing an externally mutable object into McastService.payload  At McastService.java:[line 462]
M V EI: org.apache.catalina.tribes.membership.McastService.getLocalMember(boolean) may expose internal representation by returning McastService.localMember  At McastService.java:[line 130]
M V EI: org.apache.catalina.tribes.membership.McastService.getMembershipProvider() may expose internal representation by returning McastService.impl  At McastService.java:[line 503]
M V EI2: org.apache.catalina.tribes.membership.McastService.setProperties(Properties) may expose internal representation by storing an externally mutable object into McastService.properties  At McastService.java:[line 111]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl(BaseProcessingEnvImpl, Main) may expose internal representation by storing an externally mutable object into BatchMessagerImpl._processingEnv  At BatchMessagerImpl.java:[line 37]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl(BaseProcessingEnvImpl, Main) may expose internal representation by storing an externally mutable object into BatchMessagerImpl._compiler  At BatchMessagerImpl.java:[line 36]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getPostConstructMethods() may expose internal representation by returning WebXml.postConstructMethods  At WebXml.java:[line 607]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getMimeMappings() may expose internal representation by returning WebXml.mimeMappings  At WebXml.java:[line 378]
M V EI2: org.apache.tomcat.util.descriptor.web.WebXml.setSessionConfig(SessionConfig) may expose internal representation by storing an externally mutable object into WebXml.sessionConfig  At WebXml.java:[line 369]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getEnvEntries() may expose internal representation by returning WebXml.envEntries  At WebXml.java:[line 484]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getAbsoluteOrdering() may expose internal representation by returning WebXml.absoluteOrdering  At WebXml.java:[line 125]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getEjbLocalRefs() may expose internal representation by returning WebXml.ejbLocalRefs  At WebXml.java:[line 501]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getContextParams() may expose internal representation by returning WebXml.contextParams  At WebXml.java:[line 290]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getErrorPages() may expose internal representation by returning WebXml.errorPages  At WebXml.java:[line 418]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getSecurityRoles() may expose internal representation by returning WebXml.securityRoles  At WebXml.java:[line 470]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getFilterMappings() may expose internal representation by returning WebXml.filterMaps  At WebXml.java:[line 317]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getLoginConfig() may expose internal representation by returning WebXml.loginConfig  At WebXml.java:[line 462]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getResourceEnvRefs() may expose internal representation by returning WebXml.resourceEnvRefs  At WebXml.java:[line 543]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getSessionConfig() may expose internal representation by returning WebXml.sessionConfig  At WebXml.java:[line 371]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getWelcomeFiles() may expose internal representation by returning WebXml.welcomeFiles  At WebXml.java:[line 410]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getPreDestroyMethods() may expose internal representation by returning WebXml.preDestroyMethods  At WebXml.java:[line 618]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getMessageDestinations() may expose internal representation by returning WebXml.messageDestinations  At WebXml.java:[line 587]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getFilters() may expose internal representation by returning WebXml.filters  At WebXml.java:[line 307]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getResourceRefs() may expose internal representation by returning WebXml.resourceRefs  At WebXml.java:[line 527]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getServlets() may expose internal representation by returning WebXml.servlets  At WebXml.java:[line 342]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getMessageDestinationRefs() may expose internal representation by returning WebXml.messageDestinationRefs  At WebXml.java:[line 564]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getListeners() may expose internal representation by returning WebXml.listeners  At WebXml.java:[line 327]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getServletMappings() may expose internal representation by returning WebXml.servletMappings  At WebXml.java:[line 363]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getServiceRefs() may expose internal representation by returning WebXml.serviceRefs  At WebXml.java:[line 512]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getJspPropertyGroups() may expose internal representation by returning WebXml.jspPropertyGroups  At WebXml.java:[line 440]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getAfterOrdering() may expose internal representation by returning WebXml.after  At WebXml.java:[line 143]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getBeforeOrdering() may expose internal representation by returning WebXml.before  At WebXml.java:[line 156]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getLocaleEncodingMappings() may expose internal representation by returning WebXml.localeEncodingMappings  At WebXml.java:[line 596]
M V EI2: org.apache.tomcat.util.descriptor.web.WebXml.setLoginConfig(LoginConfig) may expose internal representation by storing an externally mutable object into WebXml.loginConfig  At WebXml.java:[line 460]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getEjbRefs() may expose internal representation by returning WebXml.ejbRefs  At WebXml.java:[line 492]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getSecurityConstraints() may expose internal representation by returning WebXml.securityConstraints  At WebXml.java:[line 452]
M V EI: org.apache.tomcat.util.descriptor.web.WebXml.getTaglibs() may expose internal representation by returning WebXml.taglibs  At WebXml.java:[line 431]
M V EI2: new org.apache.tomcat.websocket.server.WsSessionListener(WsServerContainer) may expose internal representation by storing an externally mutable object into WsSessionListener.wsServerContainer  At WsSessionListener.java:[line 28]
M V EI2: new org.apache.tomcat.websocket.server.WsFrameServer(SocketWrapperBase, UpgradeInfo, WsSession, Transformation, ClassLoader) may expose internal representation by storing an externally mutable object into WsFrameServer.applicationClassLoader  At WsFrameServer.java:[line 50]
M V EI2: new org.apache.tomcat.websocket.server.WsFrameServer(SocketWrapperBase, UpgradeInfo, WsSession, Transformation, ClassLoader) may expose internal representation by storing an externally mutable object into WsFrameServer.socketWrapper  At WsFrameServer.java:[line 48]
M V EI2: new org.apache.tomcat.websocket.server.WsFrameServer(SocketWrapperBase, UpgradeInfo, WsSession, Transformation, ClassLoader) may expose internal representation by storing an externally mutable object into WsFrameServer.upgradeInfo  At WsFrameServer.java:[line 49]
M V DP: org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.getClassLoader(JavaFileManager$Location) creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block  At EclipseFileManager.java:[line 287]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.normalized(String) where default case is missing  At EclipseFileManager.java:[lines 919-924]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.processPathEntries(int, ArrayList, String, String, boolean, boolean) where default case is missing  At EclipseFileManager.java:[lines 1140-1146]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.processPathEntries(int, ArrayList, String, String, boolean, boolean) where one case falls through to the next case  At EclipseFileManager.java:[lines 1053-1056]
M P SBSC: org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.processPathEntries(int, ArrayList, String, String, boolean, boolean) concatenates strings using + in a loop  At EclipseFileManager.java:[line 1125]
M V EI: org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.getPoller() may expose internal representation by returning NioEndpoint$NioSocketWrapper.poller  At NioEndpoint.java:[line 1123]
M V EI2: org.apache.catalina.tribes.transport.nio.NioSender.setMessage(byte[], int, int) may expose internal representation by storing an externally mutable object into NioSender.current  At NioSender.java:[line 383]
M V EI: org.apache.catalina.tribes.transport.nio.NioSender.getMessage() may expose internal representation by returning NioSender.current  At NioSender.java:[line 410]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.StackMapType.setConstantPool(ConstantPool) may expose internal representation by storing an externally mutable object into StackMapType.constantPool  At StackMapType.java:[line 164]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.StackMapType(byte, int, ConstantPool) may expose internal representation by storing an externally mutable object into StackMapType.constantPool  At StackMapType.java:[line 65]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.StackMapType.getConstantPool() may expose internal representation by returning StackMapType.constantPool  At StackMapType.java:[line 156]
M V EI: org.apache.jasper.compiler.Node$TagDirective.getImports() may expose internal representation by returning Node$TagDirective.imports  At Node.java:[line 712]
M V EI: org.apache.tomcat.util.bcel.classfile.JavaClass.getInterfaceNames() may expose internal representation by returning JavaClass.interfaceNames  At JavaClass.java:[line 121]
M V EI2: org.apache.jasper.compiler.Node$JspElement.setJspAttributes(Node$JspAttribute[]) may expose internal representation by storing an externally mutable object into Node$JspElement.jspAttrs  At Node.java:[line 1296]
M V EI: org.apache.jasper.compiler.Node$JspElement.getJspAttributes() may expose internal representation by returning Node$JspElement.jspAttrs  At Node.java:[line 1300]
M V EI2: org.apache.catalina.tribes.group.ChannelCoordinator.setClusterReceiver(ChannelReceiver) may expose internal representation by storing an externally mutable object into ChannelCoordinator.clusterReceiver  At ChannelCoordinator.java:[line 310]
M V EI: org.apache.catalina.tribes.group.ChannelCoordinator.getClusterReceiver() may expose internal representation by returning ChannelCoordinator.clusterReceiver  At ChannelCoordinator.java:[line 297]
M V EI: org.apache.catalina.tribes.group.ChannelCoordinator.getMembershipService() may expose internal representation by returning ChannelCoordinator.membershipService  At ChannelCoordinator.java:[line 305]
M V EI: org.apache.catalina.tribes.group.ChannelCoordinator.getClusterSender() may expose internal representation by returning ChannelCoordinator.clusterSender  At ChannelCoordinator.java:[line 301]
M V EI2: org.apache.catalina.tribes.group.ChannelCoordinator.setMembershipService(MembershipService) may expose internal representation by storing an externally mutable object into ChannelCoordinator.membershipService  At ChannelCoordinator.java:[line 325]
M V EI2: org.apache.catalina.tribes.group.ChannelCoordinator.setClusterSender(ChannelSender) may expose internal representation by storing an externally mutable object into ChannelCoordinator.clusterSender  At ChannelCoordinator.java:[line 321]
M C RCN: Nullcheck of fileName at line 1325 of value previously dereferenced in org.eclipse.jdt.internal.compiler.batch.Main$Logger.startLoggingSource(CompilationResult)  At Main.java:[line 1325]
M V EI2: new org.eclipse.jdt.internal.compiler.batch.Main$Logger(Main, PrintWriter, PrintWriter) may expose internal representation by storing an externally mutable object into Main$Logger.err  At Main.java:[line 219]
M V EI2: new org.eclipse.jdt.internal.compiler.batch.Main$Logger(Main, PrintWriter, PrintWriter) may expose internal representation by storing an externally mutable object into Main$Logger.main  At Main.java:[line 220]
M V EI2: new org.eclipse.jdt.internal.compiler.batch.Main$Logger(Main, PrintWriter, PrintWriter) may expose internal representation by storing an externally mutable object into Main$Logger.out  At Main.java:[line 218]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.batch.Main$Logger.setLog(String): new java.io.PrintWriter(OutputStream)  At Main.java:[line 1287]
M V EI: org.apache.tomcat.util.net.SSLUtilBase.getEnabledProtocols() may expose internal representation by returning SSLUtilBase.enabledProtocols  At SSLUtilBase.java:[line 396]
M V EI: org.apache.tomcat.util.net.SSLUtilBase.getEnabledCiphers() may expose internal representation by returning SSLUtilBase.enabledCiphers  At SSLUtilBase.java:[line 402]
M V EI: org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding.getAnnotations() may expose internal representation by returning AptBinaryLocalVariableBinding.annotationBindings  At AptBinaryLocalVariableBinding.java:[line 33]
M V MS: Public static org.apache.jasper.compiler.ELParser.parse(String, boolean) may expose internal representation by returning ELParser.expr  At ELParser.java:[line 89]
M V EI: org.apache.tomcat.util.net.openssl.OpenSSLContext.getServerSessionContext() may expose internal representation by returning OpenSSLContext.sessionContext  At OpenSSLContext.java:[line 573]
M V EI2: new org.apache.tomcat.util.net.openssl.OpenSSLContext(SSLHostConfigCertificate, List) may expose internal representation by storing an externally mutable object into OpenSSLContext.certificate  At OpenSSLContext.java:[line 98]
M V EI2: new org.apache.tomcat.util.net.openssl.OpenSSLContext(SSLHostConfigCertificate, List) may expose internal representation by storing an externally mutable object into OpenSSLContext.negotiableProtocols  At OpenSSLContext.java:[line 160]
M S SQL: A prepared statement is generated from a nonconstant String in org.apache.catalina.users.DataSourceUserDatabase.saveInternal(Connection)  At DataSourceUserDatabase.java:[line 1232]
M M AT: Sequence of calls to java.util.concurrent.ConcurrentHashMap may not be atomic in org.apache.catalina.users.DataSourceUserDatabase.modifiedGroup(Group)  At DataSourceUserDatabase.java:[line 888]
M M AT: Sequence of calls to java.util.concurrent.ConcurrentHashMap may not be atomic in org.apache.catalina.users.DataSourceUserDatabase.modifiedRole(Role)  At DataSourceUserDatabase.java:[line 906]
M M AT: Sequence of calls to java.util.concurrent.ConcurrentHashMap may not be atomic in org.apache.catalina.users.DataSourceUserDatabase.modifiedUser(User)  At DataSourceUserDatabase.java:[line 924]
M V EI2: org.apache.jasper.compiler.Node$ELExpression.setEL(ELNode$Nodes) may expose internal representation by storing an externally mutable object into Node$ELExpression.el  At Node.java:[line 964]
M V EI: org.apache.jasper.compiler.Node$ELExpression.getEL() may expose internal representation by returning Node$ELExpression.el  At Node.java:[line 968]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.StackMapEntry(int, int, StackMapType[], StackMapType[], ConstantPool) may expose internal representation by storing an externally mutable object into StackMapEntry.constantPool  At StackMapEntry.java:[line 130]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.StackMapEntry.getConstantPool() may expose internal representation by returning StackMapEntry.constantPool  At StackMapEntry.java:[line 425]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.StackMapEntry(int, int, StackMapType[], int, StackMapType[], ConstantPool) may expose internal representation by storing an externally mutable object into StackMapEntry.constantPool  At StackMapEntry.java:[line 111]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.StackMapEntry.setConstantPool(ConstantPool) may expose internal representation by storing an externally mutable object into StackMapEntry.constantPool  At StackMapEntry.java:[line 433]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.StackMapEntry.getTypesOfLocals() may expose internal representation by returning StackMapEntry.typesOfLocals  At StackMapEntry.java:[line 357]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.StackMapEntry.getTypesOfStackItems() may expose internal representation by returning StackMapEntry.typesOfStackItems  At StackMapEntry.java:[line 381]
M V EI: org.apache.jasper.compiler.Node$PageDirective.getImports() may expose internal representation by returning Node$PageDirective.imports  At Node.java:[line 608]
M V EI2: org.apache.catalina.loader.WebappLoader.setLoaderInstance(WebappClassLoaderBase) may expose internal representation by storing an externally mutable object into WebappLoader.classLoader  At WebappLoader.java:[line 236]
M V EI: org.apache.catalina.loader.WebappLoader.getClassLoader() may expose internal representation by returning WebappLoader.classLoader  At WebappLoader.java:[line 132]
M V EI: org.apache.catalina.loader.WebappLoader.getContext() may expose internal representation by returning WebappLoader.context  At WebappLoader.java:[line 138]
M V EI2: org.apache.catalina.loader.WebappLoader.setContext(Context) may expose internal representation by storing an externally mutable object into WebappLoader.context  At WebappLoader.java:[line 155]
M V EI: org.apache.catalina.ha.ClusterListener.getCluster() may expose internal representation by returning ClusterListener.cluster  At ClusterListener.java:[line 54]
M V EI2: org.apache.catalina.ha.ClusterListener.setCluster(CatalinaCluster) may expose internal representation by storing an externally mutable object into ClusterListener.cluster  At ClusterListener.java:[line 67]
M V EI: org.apache.tomcat.jdbc.pool.PooledConnection.getPoolProperties() may expose internal representation by returning PooledConnection.poolProperties  At PooledConnection.java:[line 768]
M V EI: org.apache.tomcat.jdbc.pool.PooledConnection.getAttributes() may expose internal representation by returning PooledConnection.attributes  At PooledConnection.java:[line 857]
M V EI: org.apache.tomcat.jdbc.pool.PooledConnection.getHandler() may expose internal representation by returning PooledConnection.handler  At PooledConnection.java:[line 828]
M V EI2: org.apache.tomcat.jdbc.pool.PooledConnection.setHandler(JdbcInterceptor) may expose internal representation by storing an externally mutable object into PooledConnection.handler  At PooledConnection.java:[line 839]
M V EI2: new org.apache.tomcat.jdbc.pool.PooledConnection(PoolConfiguration, ConnectionPool) may expose internal representation by storing an externally mutable object into PooledConnection.poolProperties  At PooledConnection.java:[line 136]
M V EI: org.apache.tomcat.jdbc.pool.PooledConnection.getObjectName() may expose internal representation by returning PooledConnection.oname  At PooledConnection.java:[line 869]
M V EI2: new org.apache.tomcat.jdbc.pool.PooledConnection(PoolConfiguration, ConnectionPool) may expose internal representation by storing an externally mutable object into PooledConnection.parent  At PooledConnection.java:[line 137]
M V EI: org.apache.tomcat.jdbc.pool.PooledConnection.getConnection() may expose internal representation by returning PooledConnection.connection  At PooledConnection.java:[line 801]
M V EI2: org.apache.tomcat.jdbc.pool.PooledConnection.setPoolProperties(PoolConfiguration) may expose internal representation by storing an externally mutable object into PooledConnection.poolProperties  At PooledConnection.java:[line 730]
M V DP: org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.getClassLoader(JavaFileManager$Location) creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block  At EclipseFileManager.java:[line 290]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.normalized(String) where default case is missing  At EclipseFileManager.java:[lines 944-949]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.processPathEntries(int, ArrayList, String, String, boolean, boolean) where default case is missing  At EclipseFileManager.java:[lines 1165-1171]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.processPathEntries(int, ArrayList, String, String, boolean, boolean) where one case falls through to the next case  At EclipseFileManager.java:[lines 1078-1081]
M P SBSC: org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.processPathEntries(int, ArrayList, String, String, boolean, boolean) concatenates strings using + in a loop  At EclipseFileManager.java:[line 1150]
M V EI2: new org.apache.el.stream.Stream(Iterator) may expose internal representation by storing an externally mutable object into Stream.iterator  At Stream.java:[line 41]
M V EI: org.apache.el.stream.Stream.iterator() may expose internal representation by returning Stream.iterator  At Stream.java:[line 211]
M B Dm: org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl.call() invokes System.exit(...), which shuts down the entire virtual machine  At EclipseCompilerImpl.java:[line 101]
M B RV: Exceptional return value of java.io.File.mkdirs() ignored in org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl.outputClassFiles(CompilationResult)  At EclipseCompilerImpl.java:[line 405]
M V EI2: new org.apache.coyote.RequestInfo(Request) may expose internal representation by storing an externally mutable object into RequestInfo.req  At RequestInfo.java:[line 42]
M V EI2: org.apache.coyote.RequestInfo.setRpName(ObjectName) may expose internal representation by storing an externally mutable object into RequestInfo.rpName  At RequestInfo.java:[line 264]
M V EI: org.apache.coyote.RequestInfo.getRpName() may expose internal representation by returning RequestInfo.rpName  At RequestInfo.java:[line 252]
M V EI: org.apache.coyote.RequestInfo.getGlobalProcessor() may expose internal representation by returning RequestInfo.global  At RequestInfo.java:[line 46]
M V EI2: org.apache.coyote.RequestInfo.setGlobalProcessor(RequestGroupInfo) may expose internal representation by storing an externally mutable object into RequestInfo.global  At RequestInfo.java:[line 51]
M V EI2: org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.preInit(ServerEndpointConfig, WsServerContainer, WsHandshakeRequest, List, String, Transformation, Map, boolean) may expose internal representation by storing an externally mutable object into WsHttpUpgradeHandler.transformation  At WsHttpUpgradeHandler.java:[line 95]
M V EI2: org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.setSocketWrapper(SocketWrapperBase) may expose internal representation by storing an externally mutable object into WsHttpUpgradeHandler.socketWrapper  At WsHttpUpgradeHandler.java:[line 81]
M V EI2: org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.preInit(ServerEndpointConfig, WsServerContainer, WsHandshakeRequest, List, String, Transformation, Map, boolean) may expose internal representation by storing an externally mutable object into WsHttpUpgradeHandler.negotiatedExtensions  At WsHttpUpgradeHandler.java:[line 93]
M V EI2: org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.preInit(ServerEndpointConfig, WsServerContainer, WsHandshakeRequest, List, String, Transformation, Map, boolean) may expose internal representation by storing an externally mutable object into WsHttpUpgradeHandler.pathParameters  At WsHttpUpgradeHandler.java:[line 96]
M V EI2: org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.preInit(ServerEndpointConfig, WsServerContainer, WsHandshakeRequest, List, String, Transformation, Map, boolean) may expose internal representation by storing an externally mutable object into WsHttpUpgradeHandler.webSocketContainer  At WsHttpUpgradeHandler.java:[line 91]
M V EI: org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.getUpgradeInfo() may expose internal representation by returning WsHttpUpgradeHandler.upgradeInfo  At WsHttpUpgradeHandler.java:[line 148]
M D SF: Switch statement found in org.apache.tomcat.websocket.server.WsHttpUpgradeHandler.upgradeDispatch(SocketEvent) where one case falls through to the next case  At WsHttpUpgradeHandler.java:[lines 185-191]
M P Dm: org.apache.jasper.runtime.JspRuntimeLibrary.convert(String, String, Class, Class) invokes inefficient new String(String) constructor  At JspRuntimeLibrary.java:[line 291]
H I Dm: Found reliance on default encoding in org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String, String): new java.io.OutputStreamWriter(OutputStream)  At JspRuntimeLibrary.java:[line 1025]
M V EI: org.eclipse.jdt.internal.compiler.apt.model.ModuleElementImpl.getDirectives() may expose internal representation by returning ModuleElementImpl.directives  At ModuleElementImpl.java:[line 170]
M V EI2: new org.apache.catalina.ssi.SSIServletExternalResolver(ServletContext, HttpServletRequest, HttpServletResponse, boolean, int, String) may expose internal representation by storing an externally mutable object into SSIServletExternalResolver.res  At SSIServletExternalResolver.java:[line 74]
M V EI2: new org.apache.catalina.ssi.SSIServletExternalResolver(ServletContext, HttpServletRequest, HttpServletResponse, boolean, int, String) may expose internal representation by storing an externally mutable object into SSIServletExternalResolver.context  At SSIServletExternalResolver.java:[line 72]
H I Dm: Found reliance on default encoding in org.apache.catalina.ssi.SSIServletExternalResolver.getFileText(String, boolean): new String(byte[])  At SSIServletExternalResolver.java:[line 537]
M C UMAC: Uncallable method org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1.addModules(Iterable) defined in anonymous class  At EclipseCompiler.java:[lines 216-222]
M V EI2: new org.apache.el.lang.FunctionMapperImpl$Function(String, String, Method) may expose internal representation by storing an externally mutable object into FunctionMapperImpl$Function.m  At FunctionMapperImpl.java:[line 109]
M V EI: org.apache.el.lang.FunctionMapperImpl$Function.getMethod() may expose internal representation by returning FunctionMapperImpl$Function.m  At FunctionMapperImpl.java:[line 165]
M M UG: org.apache.catalina.util.LifecycleBase.getState() is unsynchronized, org.apache.catalina.util.LifecycleBase.setState(LifecycleState, Object) is synchronized  At LifecycleBase.java:[line 343]
M B RR: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.ZipArchiveInputStream.closeEntry() ignores result of org.apache.tomcat.jakartaee.commons.compress.archivers.zip.ZipArchiveInputStream.skip(long)  At ZipArchiveInputStream.java:[line 772]
M V EI: org.apache.catalina.realm.RealmBase.getContainer() may expose internal representation by returning RealmBase.container  At RealmBase.java:[line 190]
M V EI2: org.apache.catalina.realm.RealmBase.setContainer(Container) may expose internal representation by storing an externally mutable object into RealmBase.container  At RealmBase.java:[line 203]
M V EI: org.apache.jasper.servlet.TldScanner.getUriTldResourcePathMap() may expose internal representation by returning TldScanner.uriTldResourcePathMap  At TldScanner.java:[line 113]
M V EI2: new org.apache.jasper.servlet.TldScanner(ServletContext, boolean, boolean, boolean) may expose internal representation by storing an externally mutable object into TldScanner.context  At TldScanner.java:[line 82]
M V EI: org.apache.jasper.servlet.TldScanner.getTldResourcePathTaglibXmlMap() may expose internal representation by returning TldScanner.tldResourcePathTaglibXmlMap  At TldScanner.java:[line 123]
M V EI: org.apache.jasper.servlet.TldScanner.getListeners() may expose internal representation by returning TldScanner.listeners  At TldScanner.java:[line 132]
M V EI2: new org.apache.el.lang.EvaluationContext(ELContext, FunctionMapper, VariableMapper) may expose internal representation by storing an externally mutable object into EvaluationContext.varMapper  At EvaluationContext.java:[line 42]
M V EI2: new org.apache.el.lang.EvaluationContext(ELContext, FunctionMapper, VariableMapper) may expose internal representation by storing an externally mutable object into EvaluationContext.elContext  At EvaluationContext.java:[line 40]
M V EI: org.apache.el.lang.EvaluationContext.getVariableMapper() may expose internal representation by returning EvaluationContext.varMapper  At EvaluationContext.java:[line 56]
M V EI: org.apache.el.lang.EvaluationContext.getELContext() may expose internal representation by returning EvaluationContext.elContext  At EvaluationContext.java:[line 46]
M B Se: org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl$SourceLocationComparator implements Comparator but not Serializable  At TypeElementImpl.java:[lines 1-128]
H D UC: Useless condition: it's known that hasMultiLines == false at this point  At AbstractCommentParser.java:[line 918]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseParam() where one case falls through to the next case  At AbstractCommentParser.java:[lines 921-924]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.parseQualifiedName(boolean, boolean) where default case is missing  At AbstractCommentParser.java:[lines 1215-1229]
M V EI2: new org.apache.catalina.authenticator.BasicAuthenticator$BasicCredentials(ByteChunk, Charset, boolean) may expose internal representation by storing an externally mutable object into BasicAuthenticator$BasicCredentials.authorization  At BasicAuthenticator.java:[line 181]
M V EI: org.apache.tomcat.util.net.SecureNio2Channel.getSslEngine() may expose internal representation by returning SecureNio2Channel.sslEngine  At SecureNio2Channel.java:[line 1284]
M V EI2: new org.apache.tomcat.util.net.SecureNio2Channel(SocketBufferHandler, Nio2Endpoint) may expose internal representation by storing an externally mutable object into SecureNio2Channel.endpoint  At SecureNio2Channel.java:[line 84]
M D SF: Switch statement found in org.apache.tomcat.util.net.SecureNio2Channel.processSNI() where one case falls through to the next case  At SecureNio2Channel.java:[lines 408-411]
M V EI: org.apache.tomcat.util.net.NioEndpoint$PollerEvent.getSocketWrapper() may expose internal representation by returning NioEndpoint$PollerEvent.socketWrapper  At NioEndpoint.java:[line 570]
M V EI2: org.apache.tomcat.util.net.NioEndpoint$PollerEvent.reset(NioEndpoint$NioSocketWrapper, int) may expose internal representation by storing an externally mutable object into NioEndpoint$PollerEvent.socketWrapper  At NioEndpoint.java:[line 565]
M V EI: org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback.getFragments() may expose internal representation by returning FragmentJarScannerCallback.fragments  At FragmentJarScannerCallback.java:[line 159]
M V EI2: new org.apache.tomcat.util.descriptor.web.FragmentJarScannerCallback(WebXmlParser, boolean, boolean) may expose internal representation by storing an externally mutable object into FragmentJarScannerCallback.webXmlParser  At FragmentJarScannerCallback.java:[line 46]
M D RCN: Redundant nullcheck of query, which is known to be non-null in org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo.validate(Request)  Redundant null check at DigestAuthenticator.java:[line 501]
M V EI2: new org.apache.catalina.authenticator.DigestAuthenticator$DigestInfo(String, long, String, Map, boolean) may expose internal representation by storing an externally mutable object into DigestAuthenticator$DigestInfo.nonces  At DigestAuthenticator.java:[line 449]
M M NN: Naked notify in org.apache.tomcat.util.net.AprEndpoint$Poller.run()  At AprEndpoint.java:[line 1700]
M V EI2: new org.apache.tomcat.util.net.AprEndpoint$Poller(AprEndpoint) may expose internal representation by storing an externally mutable object into AprEndpoint$Poller.this$0  At AprEndpoint.java:[line 1109]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.managed.ManagedConnection(ObjectPool, TransactionRegistry, boolean) may expose internal representation by storing an externally mutable object into ManagedConnection.pool  At ManagedConnection.java:[line 84]
M V EI: org.apache.tomcat.dbcp.dbcp2.managed.ManagedConnection.getTransactionContext() may expose internal representation by returning ManagedConnection.transactionContext  At ManagedConnection.java:[line 155]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl(BaseAnnotationProcessorManager, Main, String[]) may expose internal representation by storing an externally mutable object into BatchProcessingEnvImpl._compilerOwner  At BatchProcessingEnvImpl.java:[line 50]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl(BaseAnnotationProcessorManager, Main, String[]) may expose internal representation by storing an externally mutable object into BatchProcessingEnvImpl._dispatchManager  At BatchProcessingEnvImpl.java:[line 52]
M V EI: org.apache.coyote.http11.Http11OutputBuffer.getFilters() may expose internal representation by returning Http11OutputBuffer.filterLibrary  At Http11OutputBuffer.java:[line 146]
M V EI2: org.apache.coyote.http11.Http11OutputBuffer.init(SocketWrapperBase) may expose internal representation by storing an externally mutable object into Http11OutputBuffer.socketWrapper  At Http11OutputBuffer.java:[line 286]
M V EI2: new org.apache.catalina.tribes.group.interceptors.FragmentationInterceptor$FragCollection(ChannelMessage) may expose internal representation by storing an externally mutable object into FragmentationInterceptor$FragCollection.msg  At FragmentationInterceptor.java:[line 188]
M V EI: org.apache.catalina.tribes.group.interceptors.FragmentationInterceptor$FragCollection.assemble() may expose internal representation by returning FragmentationInterceptor$FragCollection.msg  At FragmentationInterceptor.java:[line 223]
M B RV: Exceptional return value of java.io.File.delete() ignored in org.apache.catalina.startup.ExpandWar.deleteDir(File, boolean)  At ExpandWar.java:[line 355]
M V EI: org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor.getLocalMember(boolean) may expose internal representation by returning StaticMembershipInterceptor.localMember  At StaticMembershipInterceptor.java:[line 159]
M V EI2: org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor.setLocalMember(Member) may expose internal representation by storing an externally mutable object into StaticMembershipInterceptor.localMember  At StaticMembershipInterceptor.java:[line 75]
M D RCN: Redundant nullcheck of org.apache.catalina.tribes.group.GroupChannel.heartbeatFuture, which is known to be non-null in org.apache.catalina.tribes.group.GroupChannel.startHeartbeat()  Redundant null check at GroupChannel.java:[line 509]
M V EI: org.apache.catalina.tribes.group.GroupChannel.getFirstInterceptor() may expose internal representation by returning GroupChannel.interceptors  At GroupChannel.java:[line 557]
M V EI2: org.apache.catalina.tribes.group.GroupChannel.addInterceptor(ChannelInterceptor) may expose internal representation by storing an externally mutable object into GroupChannel.interceptors  At GroupChannel.java:[line 178]
M V EI: org.apache.catalina.tribes.group.GroupChannel.getFirstInterceptor() may expose internal representation by returning GroupChannel.coordinator  At GroupChannel.java:[line 559]
M V EI2: org.apache.jasper.compiler.Node$UninterpretedTag.setJspAttributes(Node$JspAttribute[]) may expose internal representation by storing an externally mutable object into Node$UninterpretedTag.jspAttrs  At Node.java:[line 1262]
M V EI: org.apache.jasper.compiler.Node$UninterpretedTag.getJspAttributes() may expose internal representation by returning Node$UninterpretedTag.jspAttrs  At Node.java:[line 1266]
M V EI2: new org.apache.jasper.el.VariableResolverImpl(ELContext) may expose internal representation by storing an externally mutable object into VariableResolverImpl.ctx  At VariableResolverImpl.java:[line 29]
M V EI: org.apache.catalina.manager.ManagerServlet.getWrapper() may expose internal representation by returning ManagerServlet.wrapper  At ManagerServlet.java:[line 246]
M V EI2: org.apache.catalina.manager.ManagerServlet.setWrapper(Wrapper) may expose internal representation by storing an externally mutable object into ManagerServlet.wrapper  At ManagerServlet.java:[line 258]
M D NP: Possible null pointer dereference in org.apache.tomcat.jakartaee.Migration.migrateDirectory(File, File) due to return value of called method  Dereferenced at Migration.java:[line 178]
M V EI2: new org.apache.tomcat.util.net.NioEndpoint$Poller(NioEndpoint) may expose internal representation by storing an externally mutable object into NioEndpoint$Poller.this$0  At NioEndpoint.java:[line 605]
M D RCN: Redundant nullcheck of query, which is known to be non-null in org.apache.catalina.valves.ExtendedAccessLogValve$3.addElement(CharArrayWriter, Date, Request, Response, long)  Redundant null check at ExtendedAccessLogValve.java:[line 671]
M D RCN: Redundant nullcheck of query, which is known to be non-null in org.apache.catalina.valves.ExtendedAccessLogValve$2.addElement(CharArrayWriter, Date, Request, Response, long)  Redundant null check at ExtendedAccessLogValve.java:[line 657]
M D SF: Switch statement found in org.apache.jasper.compiler.Generator.generateSetJspContext(TagInfo) where default case is missing  At Generator.java:[lines 3891-3913]
M B ES: Comparison of String objects using == or != in org.apache.catalina.servlets.DefaultServlet.serveResource(HttpServletRequest, HttpServletResponse, boolean, String)  At DefaultServlet.java:[line 1049]
M B ES: Comparison of String objects using == or != in org.apache.catalina.servlets.DefaultServlet.serveResource(HttpServletRequest, HttpServletResponse, boolean, String)  At DefaultServlet.java:[line 1050]
H I Dm: Found reliance on default encoding in org.apache.catalina.servlets.DefaultServlet.getReadme(WebResource, String): new java.io.InputStreamReader(InputStream)  At DefaultServlet.java:[line 1990]
H I Dm: Found reliance on default encoding in org.apache.catalina.servlets.DefaultServlet.copy(InputStream, PrintWriter, String): new java.io.InputStreamReader(InputStream)  At DefaultServlet.java:[line 2425]
M V EI2: new org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream(int, Scanner, int[], int[], int[], int, int, int) may expose internal representation by storing an externally mutable object into LexStream.intervalStartToSkip  At LexStream.java:[line 70]
M V EI2: new org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream(int, Scanner, int[], int[], int[], int, int, int) may expose internal representation by storing an externally mutable object into LexStream.intervalFlagsToSkip  At LexStream.java:[line 72]
M V EI2: new org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream(int, Scanner, int[], int[], int[], int, int, int) may expose internal representation by storing an externally mutable object into LexStream.intervalEndToSkip  At LexStream.java:[line 71]
M V EI2: new org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream(int, Scanner, int[], int[], int[], int, int, int) may expose internal representation by storing an externally mutable object into LexStream.scanner  At LexStream.java:[line 75]
M V EI2: new org.apache.coyote.http11.Http11InputBuffer(Request, int, boolean, HttpParser) may expose internal representation by storing an externally mutable object into Http11InputBuffer.request  At Http11InputBuffer.java:[line 159]
M V EI2: org.apache.catalina.valves.rewrite.RewriteRule.setConditions(RewriteCond[]) may expose internal representation by storing an externally mutable object into RewriteRule.conditions  At RewriteRule.java:[line 354]
M V EI2: org.apache.catalina.valves.rewrite.RewriteRule.setSubstitution(Substitution) may expose internal representation by storing an externally mutable object into RewriteRule.substitution  At RewriteRule.java:[line 477]
M V EI: org.apache.catalina.valves.rewrite.RewriteRule.getConditions() may expose internal representation by returning RewriteRule.conditions  At RewriteRule.java:[line 351]
M V EI: org.apache.catalina.valves.rewrite.RewriteRule.getSubstitution() may expose internal representation by returning RewriteRule.substitution  At RewriteRule.java:[line 474]
M V EI2: org.apache.catalina.tribes.membership.StaticMembershipProvider.setStaticMembers(ArrayList) may expose internal representation by storing an externally mutable object into StaticMembershipProvider.staticMembers  At StaticMembershipProvider.java:[line 320]
M V EI2: org.apache.catalina.tribes.membership.StaticMembershipProvider.setChannel(Channel) may expose internal representation by storing an externally mutable object into StaticMembershipProvider.channel  At StaticMembershipProvider.java:[line 316]
M V EI2: new org.apache.el.ValueExpressionImpl(String, Node, FunctionMapper, VariableMapper, Class) may expose internal representation by storing an externally mutable object into ValueExpressionImpl.varMapper  At ValueExpressionImpl.java:[line 109]
M V EI2: new org.apache.el.ValueExpressionImpl(String, Node, FunctionMapper, VariableMapper, Class) may expose internal representation by storing an externally mutable object into ValueExpressionImpl.node  At ValueExpressionImpl.java:[line 107]
M V EI2: new org.apache.catalina.valves.rewrite.ResolverImpl(Request) may expose internal representation by storing an externally mutable object into ResolverImpl.request  At ResolverImpl.java:[line 48]
M D DLS: Dead store to key in org.apache.catalina.valves.rewrite.ResolverImpl.resolveSsl(String)  At ResolverImpl.java:[line 202]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.internalResolveType(Scope) where default case is missing  At JavadocFieldReference.java:[lines 64-70]
M V EI2: org.apache.catalina.storeconfig.StoreFactoryBase.setRegistry(StoreRegistry) may expose internal representation by storing an externally mutable object into StoreFactoryBase.registry  At StoreFactoryBase.java:[line 81]
M V EI: org.apache.catalina.storeconfig.StoreFactoryBase.getRegistry() may expose internal representation by returning StoreFactoryBase.registry  At StoreFactoryBase.java:[line 93]
M V EI: org.apache.tomcat.util.net.AprEndpoint.getPoller() may expose internal representation by returning AprEndpoint.poller  At AprEndpoint.java:[line 195]
M V EI: org.apache.tomcat.util.net.AprEndpoint.getSendfile() may expose internal representation by returning AprEndpoint.sendfile  At AprEndpoint.java:[line 204]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.internalResolveType(Scope) where default case is missing  At JavadocMessageSend.java:[lines 125-132]
M B Nm: The method name org.apache.tomcat.util.json.JSONParser.ReInit(InputStream) doesn't start with a lower case letter  At JSONParser.java:[lines 494-495]
M B Nm: The method name org.apache.tomcat.util.json.JSONParser.ReInit(InputStream, String) doesn't start with a lower case letter  At JSONParser.java:[lines 498-506]
M B Nm: The method name org.apache.tomcat.util.json.JSONParser.ReInit(Reader) doesn't start with a lower case letter  At JSONParser.java:[lines 522-538]
M B Nm: The method name org.apache.tomcat.util.json.JSONParser.ReInit(JSONParserTokenManager) doesn't start with a lower case letter  At JSONParser.java:[lines 553-560]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.BootstrapMethod.getBootstrapArguments() may expose internal representation by returning BootstrapMethod.bootstrapArguments  At BootstrapMethod.java:[line 98]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.BootstrapMethod(int, int[]) may expose internal representation by storing an externally mutable object into BootstrapMethod.bootstrapArguments  At BootstrapMethod.java:[line 77]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.BootstrapMethod.setBootstrapArguments(int[]) may expose internal representation by storing an externally mutable object into BootstrapMethod.bootstrapArguments  At BootstrapMethod.java:[line 112]
H I Dm: Found reliance on default encoding in org.apache.catalina.ssi.SSIServlet.processSSI(HttpServletRequest, HttpServletResponse, URL): new java.io.InputStreamReader(InputStream)  At SSIServlet.java:[line 214]
M V EI: org.apache.catalina.tribes.transport.ReceiverBase.getTaskPool() may expose internal representation by returning ReceiverBase.pool  At ReceiverBase.java:[line 327]
M V EI2: org.apache.catalina.tribes.transport.ReceiverBase.setBind(InetAddress) may expose internal representation by storing an externally mutable object into ReceiverBase.bind  At ReceiverBase.java:[line 290]
M V EI: org.apache.catalina.tribes.transport.ReceiverBase.getChannel() may expose internal representation by returning ReceiverBase.channel  At ReceiverBase.java:[line 528]
M V EI: org.apache.catalina.tribes.transport.ReceiverBase.getBind() may expose internal representation by returning ReceiverBase.bind  At ReceiverBase.java:[line 194]
M V EI2: org.apache.catalina.tribes.transport.ReceiverBase.setPool(RxTaskPool) may expose internal representation by storing an externally mutable object into ReceiverBase.pool  At ReceiverBase.java:[line 421]
M V EI2: org.apache.catalina.tribes.transport.ReceiverBase.setChannel(Channel) may expose internal representation by storing an externally mutable object into ReceiverBase.channel  At ReceiverBase.java:[line 533]
M V EI2: org.apache.tomcat.dbcp.pool2.impl.PooledSoftReference.setReference(SoftReference) may expose internal representation by storing an externally mutable object into PooledSoftReference.reference  At PooledSoftReference.java:[line 80]
M V EI: org.apache.tomcat.dbcp.pool2.impl.PooledSoftReference.getReference() may expose internal representation by returning PooledSoftReference.reference  At PooledSoftReference.java:[line 66]
M V EI2: new org.apache.tomcat.dbcp.pool2.impl.PooledSoftReference(SoftReference) may expose internal representation by storing an externally mutable object into PooledSoftReference.reference  At PooledSoftReference.java:[line 43]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.model.TypesImpl(BaseProcessingEnvImpl) may expose internal representation by storing an externally mutable object into TypesImpl._env  At TypesImpl.java:[line 62]
M V EI: org.apache.catalina.filters.CorsFilter.getAllowedOrigins() may expose internal representation by returning CorsFilter.allowedOrigins  At CorsFilter.java:[line 840]
M V EI: org.apache.catalina.filters.CorsFilter.getAllowedHttpMethods() may expose internal representation by returning CorsFilter.allowedHttpMethods  At CorsFilter.java:[line 850]
M V EI: org.apache.catalina.filters.CorsFilter.getAllowedHttpHeaders() may expose internal representation by returning CorsFilter.allowedHttpHeaders  At CorsFilter.java:[line 860]
M V EI: org.apache.catalina.filters.CorsFilter.getExposedHeaders() may expose internal representation by returning CorsFilter.exposedHeaders  At CorsFilter.java:[line 808]
M V EI2: org.apache.catalina.tribes.group.interceptors.DomainFilterInterceptor.setDomain(byte[]) may expose internal representation by storing an externally mutable object into DomainFilterInterceptor.domain  At DomainFilterInterceptor.java:[line 145]
M V EI: org.apache.catalina.tribes.group.interceptors.DomainFilterInterceptor.getDomain() may expose internal representation by returning DomainFilterInterceptor.domain  At DomainFilterInterceptor.java:[line 141]
M V EI2: new org.apache.coyote.http11.filters.ChunkedInputFilter(int, Set, int, int) may expose internal representation by storing an externally mutable object into ChunkedInputFilter.allowedTrailerHeaders  At ChunkedInputFilter.java:[line 141]
M V EI: org.apache.coyote.http11.filters.ChunkedInputFilter.getEncodingName() may expose internal representation by returning ChunkedInputFilter.ENCODING  At ChunkedInputFilter.java:[line 292]
M V EI2: org.apache.coyote.http11.filters.ChunkedInputFilter.setRequest(Request) may expose internal representation by storing an externally mutable object into ChunkedInputFilter.request  At ChunkedInputFilter.java:[line 217]
M V EI2: org.apache.catalina.core.AsyncContextImpl.setStarted(Context, ServletRequest, ServletResponse, boolean) may expose internal representation by storing an externally mutable object into AsyncContextImpl.servletResponse  At AsyncContextImpl.java:[line 320]
M V EI2: new org.apache.catalina.core.AsyncContextImpl(Request) may expose internal representation by storing an externally mutable object into AsyncContextImpl.request  At AsyncContextImpl.java:[line 83]
M V EI2: org.apache.catalina.core.AsyncContextImpl.setStarted(Context, ServletRequest, ServletResponse, boolean) may expose internal representation by storing an externally mutable object into AsyncContextImpl.servletRequest  At AsyncContextImpl.java:[line 319]
M V EI: org.apache.catalina.core.AsyncContextImpl.getRequest() may expose internal representation by returning AsyncContextImpl.servletRequest  At AsyncContextImpl.java:[line 222]
M V EI: org.apache.catalina.core.AsyncContextImpl.getResponse() may expose internal representation by returning AsyncContextImpl.servletResponse  At AsyncContextImpl.java:[line 232]
M V EI2: org.apache.catalina.core.AsyncContextImpl.setStarted(Context, ServletRequest, ServletResponse, boolean) may expose internal representation by storing an externally mutable object into AsyncContextImpl.context  At AsyncContextImpl.java:[line 317]
M V EI2: new org.apache.catalina.tribes.membership.McastServiceImpl$RecoveryThread(McastServiceImpl) may expose internal representation by storing an externally mutable object into McastServiceImpl$RecoveryThread.parent  At McastServiceImpl.java:[line 653]
H D NS: Potentially dangerous use of non-short-circuit logic in org.apache.catalina.tribes.membership.McastServiceImpl$RecoveryThread.run()  At McastServiceImpl.java:[line 684]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.NestMembers.getClasses() may expose internal representation by returning NestMembers.classes  At NestMembers.java:[line 111]
M V EI2: org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(CompilationUnitDeclaration, int, int, boolean, HashtableOfObjectToInt, Map) may expose internal representation by storing an externally mutable object into SourceElementNotifier.nodesToCategories  At SourceElementNotifier.java:[line 423]
M V EI2: org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(CompilationUnitDeclaration, int, int, boolean, HashtableOfObjectToInt, Map) may expose internal representation by storing an externally mutable object into SourceElementNotifier.sourceEnds  At SourceElementNotifier.java:[line 422]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(AbstractMethodDeclaration, TypeDeclaration, ImportReference) where default case is missing  At SourceElementNotifier.java:[lines 265-274]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(FieldDeclaration, TypeDeclaration) where one case falls through to the next case  At SourceElementNotifier.java:[lines 511-519]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(FieldDeclaration, TypeDeclaration) where default case is missing  At SourceElementNotifier.java:[lines 505-583]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.SourceElementNotifier.notifySourceElementRequestor(TypeDeclaration, boolean, TypeDeclaration, ImportReference) where default case is missing  At SourceElementNotifier.java:[lines 730-746]
M V EI2: new org.apache.tomcat.jdbc.pool.interceptor.StatementCache$CachedStatement(StatementCache, PreparedStatement, String) may expose internal representation by storing an externally mutable object into StatementCache$CachedStatement.this$0  At StatementCache.java:[line 284]
M V EI: org.eclipse.jdt.internal.compiler.ast.TrueLiteral.source() may expose internal representation by returning TrueLiteral.source  At TrueLiteral.java:[line 75]
M V EI2: new org.apache.catalina.tribes.group.interceptors.FragmentationInterceptor$FragKey(byte[]) may expose internal representation by storing an externally mutable object into FragmentationInterceptor$FragKey.uniqueId  At FragmentationInterceptor.java:[line 235]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.AnnotationElementValue.getAnnotationEntry() may expose internal representation by returning AnnotationElementValue.annotationEntry  At AnnotationElementValue.java:[line 63]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.AnnotationElementValue(int, AnnotationEntry, ConstantPool) may expose internal representation by storing an externally mutable object into AnnotationElementValue.annotationEntry  At AnnotationElementValue.java:[line 39]
M V EI2: new org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor(AprEndpoint, SocketWrapperBase) may expose internal representation by storing an externally mutable object into AprEndpoint$SocketWithOptionsProcessor.socket  At AprEndpoint.java:[line 2086]
M V EI2: new org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor(AprEndpoint, SocketWrapperBase) may expose internal representation by storing an externally mutable object into AprEndpoint$SocketWithOptionsProcessor.this$0  At AprEndpoint.java:[line 2085]
M M ML: Synchronization on AprEndpoint$SocketWithOptionsProcessor.socket in futile attempt to guard it  At AprEndpoint.java:[line 2101]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.tool.EclipseCompiler.getTask(Writer, JavaFileManager, DiagnosticListener, Iterable, Iterable, Iterable): new java.io.PrintWriter(OutputStream)  At EclipseCompiler.java:[line 99]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.internal.compiler.tool.EclipseCompiler.run(InputStream, OutputStream, OutputStream, String[]): new java.io.OutputStreamWriter(OutputStream)  At EclipseCompiler.java:[line 244]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.StackMap.getStackMap() may expose internal representation by returning StackMap.map  At StackMap.java:[line 95]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.StackMap(int, int, StackMapEntry[], ConstantPool) may expose internal representation by storing an externally mutable object into StackMap.map  At StackMap.java:[line 52]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.StackMap.setStackMap(StackMapEntry[]) may expose internal representation by storing an externally mutable object into StackMap.map  At StackMap.java:[line 103]
M D NP: Load of known null value in org.apache.jasper.el.ELResolverImpl.getValue(ELContext, Object, Object)  At ELResolverImpl.java:[line 46]
M D NP: Load of known null value in org.apache.jasper.el.ELResolverImpl.getType(ELContext, Object, Object)  At ELResolverImpl.java:[line 68]
M D NP: Load of known null value in org.apache.jasper.el.ELResolverImpl.setValue(ELContext, Object, Object, Object)  At ELResolverImpl.java:[line 92]
M D NP: Load of known null value in org.apache.jasper.el.ELResolverImpl.isReadOnly(ELContext, Object, Object)  At ELResolverImpl.java:[line 107]
M V EI2: new org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding(LocalVariableBinding, MethodBinding) may expose internal representation by storing an externally mutable object into AptSourceLocalVariableBinding.local  At AptSourceLocalVariableBinding.java:[line 34]
M V EI2: jakarta.servlet.jsp.tagext.SimpleTagSupport.setJspContext(JspContext) may expose internal representation by storing an externally mutable object into SimpleTagSupport.jspContext  At SimpleTagSupport.java:[line 107]
M V EI: org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource.loadDescriptors(Registry, String, Object) may expose internal representation by returning MbeansDescriptorsIntrospectionSource.mbeans  At MbeansDescriptorsIntrospectionSource.java:[line 71]
M V EI2: org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource.setRegistry(Registry) may expose internal representation by storing an externally mutable object into MbeansDescriptorsIntrospectionSource.registry  At MbeansDescriptorsIntrospectionSource.java:[line 48]
H D UC: Useless condition: it's known that sourceLevel >= 3801088 (0x3a0000) at this point  At MessageSend.java:[line 289]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.MessageSend.postConversionType(Scope) where default case is missing  At MessageSend.java:[lines 674-697]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(BlockScope) where default case is missing  At MessageSend.java:[lines 863-882]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.BootstrapMethods.setBootstrapMethods(BootstrapMethod[]) may expose internal representation by storing an externally mutable object into BootstrapMethods.bootstrapMethods  At BootstrapMethods.java:[line 87]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.BootstrapMethods.getBootstrapMethods() may expose internal representation by returning BootstrapMethods.bootstrapMethods  At BootstrapMethods.java:[line 80]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.BootstrapMethods(int, int, BootstrapMethod[], ConstantPool) may expose internal representation by storing an externally mutable object into BootstrapMethods.bootstrapMethods  At BootstrapMethods.java:[line 54]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext.complainOnDeferredChecks(FlowInfo, BlockScope) where default case is missing  At FinallyFlowContext.java:[lines 139-227]
M V EI: org.apache.tomcat.dbcp.dbcp2.BasicDataSource.getDriverClassLoader() may expose internal representation by returning BasicDataSource.driverClassLoader  At BasicDataSource.java:[line 917]
M V EI2: org.apache.tomcat.dbcp.dbcp2.BasicDataSource.setLogWriter(PrintWriter) may expose internal representation by storing an externally mutable object into BasicDataSource.logWriter  At BasicDataSource.java:[line 2166]
M V EI2: org.apache.tomcat.dbcp.dbcp2.BasicDataSource.setDriverClassLoader(ClassLoader) may expose internal representation by storing an externally mutable object into BasicDataSource.driverClassLoader  At BasicDataSource.java:[line 2016]
M V EI: org.apache.catalina.tribes.membership.StaticMembershipService.getStaticMembers() may expose internal representation by returning StaticMembershipService.staticMembers  At StaticMembershipService.java:[line 141]
M V EI: org.apache.catalina.tribes.membership.StaticMembershipService.getMembershipProvider() may expose internal representation by returning StaticMembershipService.provider  At StaticMembershipService.java:[line 137]
M V EI2: org.apache.catalina.tribes.membership.StaticMembershipService.setLocalMember(StaticMember) may expose internal representation by storing an externally mutable object into StaticMembershipService.localMember  At StaticMembershipService.java:[line 153]
M V EI: org.apache.catalina.tribes.membership.StaticMembershipService.getLocalMember(boolean) may expose internal representation by returning StaticMembershipService.localMember  At StaticMembershipService.java:[line 105]
M V EI2: org.apache.catalina.tribes.membership.StaticMembershipService.setProperties(Properties) may expose internal representation by storing an externally mutable object into StaticMembershipService.properties  At StaticMembershipService.java:[line 210]
M D SF: Switch statement found in org.apache.tomcat.util.http.parser.Cookie.logInvalidHeader(int, Cookie$ByteBuffer) where one case falls through to the next case  At Cookie.java:[lines 595-598]
M D SF: Switch statement found in org.apache.tomcat.util.http.parser.Cookie.logInvalidVersion(Cookie$ByteBuffer) where one case falls through to the next case  At Cookie.java:[lines 620-623]
M V EI: org.apache.catalina.valves.CrawlerSessionManagerValve.getClientIpSessionId() may expose internal representation by returning CrawlerSessionManagerValve.clientIdSessionId  At CrawlerSessionManagerValve.java:[line 144]
M V EI2: org.apache.catalina.ha.context.ReplicatedContext$ReplApplContext.setAttributeMap(Map) may expose internal representation by storing an externally mutable object into ReplicatedContext$ReplApplContext.attributes  At ReplicatedContext.java:[line 156]
M V EI: org.apache.catalina.ha.context.ReplicatedContext$ReplApplContext.getAttributeMap() may expose internal representation by returning org.apache.catalina.core.ApplicationContext.attributes  At ReplicatedContext.java:[line 153]
M V EI2: org.apache.tomcat.jdbc.pool.interceptor.StatementCache.reset(ConnectionPool, PooledConnection) may expose internal representation by storing an externally mutable object into StatementCache.pcon  At StatementCache.java:[line 144]
M V EI: org.apache.tomcat.jdbc.pool.interceptor.StatementCache.getTypes() may expose internal representation by returning StatementCache.types  At StatementCache.java:[line 76]
M V EI: org.apache.tomcat.jdbc.pool.interceptor.StatementCache.getCacheSize() may expose internal representation by returning StatementCache.cacheSize  At StatementCache.java:[line 81]
M D NP: Load of known null value in jakarta.servlet.jsp.el.ScopedAttributeELResolver.getValue(ELContext, Object, Object)  At ScopedAttributeELResolver.java:[line 60]
M D NP: Load of known null value in jakarta.servlet.jsp.el.ScopedAttributeELResolver.getType(ELContext, Object, Object)  At ScopedAttributeELResolver.java:[line 117]
M D NP: Load of known null value in jakarta.servlet.jsp.el.ScopedAttributeELResolver.setValue(ELContext, Object, Object, Object)  At ScopedAttributeELResolver.java:[line 129]
M D NP: Load of known null value in jakarta.servlet.jsp.el.ScopedAttributeELResolver.isReadOnly(ELContext, Object, Object)  At ScopedAttributeELResolver.java:[line 148]
M V EI2: org.apache.catalina.ha.authenticator.ClusterSingleSignOn.setCluster(CatalinaCluster) may expose internal representation by storing an externally mutable object into ClusterSingleSignOn.cluster  At ClusterSingleSignOn.java:[line 66]
M V EI: org.apache.catalina.ha.authenticator.ClusterSingleSignOn.getCluster() may expose internal representation by returning ClusterSingleSignOn.cluster  At ClusterSingleSignOn.java:[line 63]
M V DP: org.apache.catalina.loader.WebappClassLoader.copyWithoutTransformers() creates a org.apache.catalina.loader.WebappClassLoader classloader, which should be performed within a doPrivileged block  At WebappClassLoader.java:[line 51]
M V EI2: org.apache.coyote.http11.filters.ChunkedOutputFilter.setResponse(Response) may expose internal representation by storing an externally mutable object into ChunkedOutputFilter.response  At ChunkedOutputFilter.java:[line 144]
M V EI: org.apache.coyote.http11.filters.BufferedInputFilter.getEncodingName() may expose internal representation by returning BufferedInputFilter.ENCODING  At BufferedInputFilter.java:[line 144]
M V EI2: org.apache.tomcat.dbcp.dbcp2.datasources.InstanceKeyDataSource.setLogWriter(PrintWriter) may expose internal representation by storing an externally mutable object into InstanceKeyDataSource.logWriter  At InstanceKeyDataSource.java:[line 1110]
M V EI: org.apache.tomcat.dbcp.dbcp2.datasources.InstanceKeyDataSource.getLogWriter() may expose internal representation by returning InstanceKeyDataSource.logWriter  At InstanceKeyDataSource.java:[line 579]
M D RCN: Redundant nullcheck of decodedRequestURI, which is known to be non-null in org.apache.catalina.authenticator.FormAuthenticator.matchRequest(Request)  Redundant null check at FormAuthenticator.java:[line 536]
M D RCN: Redundant nullcheck of org.apache.catalina.connector.Request.getPathInfo(), which is known to be non-null in org.apache.catalina.authenticator.FormAuthenticator.doAuthenticate(Request, HttpServletResponse)  Redundant null check at FormAuthenticator.java:[line 206]
M V EI: org.apache.coyote.ajp.AjpMessage.getBuffer() may expose internal representation by returning AjpMessage.buf  At AjpMessage.java:[line 120]
M V EI2: new org.apache.catalina.tribes.membership.McastServiceImpl$SenderThread(McastServiceImpl, long) may expose internal representation by storing an externally mutable object into McastServiceImpl$SenderThread.this$0  At McastServiceImpl.java:[line 595]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject(JavaFileObject, String, String, BatchFilerImpl) may expose internal representation by storing an externally mutable object into HookedJavaFileObject._filer  At HookedJavaFileObject.java:[line 207]
M V EI: org.apache.catalina.startup.HomesUserDatabase.getUserConfig() may expose internal representation by returning HomesUserDatabase.userConfig  At HomesUserDatabase.java:[line 74]
M V EI2: org.apache.catalina.startup.HomesUserDatabase.setUserConfig(UserConfig) may expose internal representation by storing an externally mutable object into HomesUserDatabase.userConfig  At HomesUserDatabase.java:[line 85]
M D RCN: Redundant nullcheck of method, which is known to be non-null in org.apache.catalina.valves.AbstractAccessLogValve$RequestElement.addElement(CharArrayWriter, Date, Request, Response, long)  Redundant null check at AbstractAccessLogValve.java:[line 1208]
M V EI2: org.apache.coyote.ajp.AjpProcessor.service(SocketWrapperBase) may expose internal representation by storing an externally mutable object into AjpProcessor.socketWrapper  At AjpProcessor.java:[line 353]
M V EI2: new org.apache.coyote.ajp.AjpProcessor(AbstractAjpProtocol, Adapter) may expose internal representation by storing an externally mutable object into AjpProcessor.protocol  At AjpProcessor.java:[line 279]
M V EI2: new org.apache.el.MethodExpressionLiteral(String, Class, Class[]) may expose internal representation by storing an externally mutable object into MethodExpressionLiteral.paramTypes  At MethodExpressionLiteral.java:[line 48]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.JavadocParser.parseSimpleTag() where default case is missing  At JavadocParser.java:[lines 473-485]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.parser.JavadocParser.updateDocComment() where default case is missing  At JavadocParser.java:[lines 1064-1083]
M V EI2: new org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage(Member, Member, Member[], UniqueId, byte[]) may expose internal representation by storing an externally mutable object into NonBlockingCoordinator$CoordinationMessage.type  At NonBlockingCoordinator.java:[line 696]
M V EI: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage.getMembers() may expose internal representation by returning NonBlockingCoordinator$CoordinationMessage.view  At NonBlockingCoordinator.java:[line 730]
M V EI2: new org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage(Member, Member, Member[], UniqueId, byte[]) may expose internal representation by storing an externally mutable object into NonBlockingCoordinator$CoordinationMessage.source  At NonBlockingCoordinator.java:[line 693]
M V EI2: new org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage(XByteBuffer) may expose internal representation by storing an externally mutable object into NonBlockingCoordinator$CoordinationMessage.buf  At NonBlockingCoordinator.java:[line 682]
M V EI: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage.getLeader() may expose internal representation by returning NonBlockingCoordinator$CoordinationMessage.leader  At NonBlockingCoordinator.java:[line 709]
M V EI: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage.getBuffer() may expose internal representation by returning NonBlockingCoordinator$CoordinationMessage.buf  At NonBlockingCoordinator.java:[line 741]
M V EI: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage.getSource() may expose internal representation by returning NonBlockingCoordinator$CoordinationMessage.source  At NonBlockingCoordinator.java:[line 716]
M V EI2: new org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage(Member, Member, Member[], UniqueId, byte[]) may expose internal representation by storing an externally mutable object into NonBlockingCoordinator$CoordinationMessage.leader  At NonBlockingCoordinator.java:[line 692]
M V EI: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage.getType() may expose internal representation by returning NonBlockingCoordinator$CoordinationMessage.type  At NonBlockingCoordinator.java:[line 737]
M V EI2: new org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage(Member, Member, Member[], UniqueId, byte[]) may expose internal representation by storing an externally mutable object into NonBlockingCoordinator$CoordinationMessage.view  At NonBlockingCoordinator.java:[line 694]
M V EI2: new org.apache.jasper.el.ELContextWrapper(ELContext, FunctionMapper) may expose internal representation by storing an externally mutable object into ELContextWrapper.target  At ELContextWrapper.java:[line 37]
M D BC: instanceof will always return true for all non-null values in org.apache.el.parser.AstFunction.getValue(EvaluationContext), since all jakarta.el.ValueExpression are instances of jakarta.el.ValueExpression  At AstFunction.java:[line 105]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.MethodParameters.getParameters() may expose internal representation by returning MethodParameters.parameters  At MethodParameters.java:[line 48]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.MethodParameters.setParameters(MethodParameter[]) may expose internal representation by storing an externally mutable object into MethodParameters.parameters  At MethodParameters.java:[line 52]
M V EI2: new org.apache.tomcat.util.net.AprEndpoint$SocketProcessor(AprEndpoint, SocketWrapperBase, SocketEvent) may expose internal representation by storing an externally mutable object into AprEndpoint$SocketProcessor.this$0  At AprEndpoint.java:[line 2134]
M V EI: org.apache.catalina.ha.tcp.SimpleTcpCluster.getManagerTemplate() may expose internal representation by returning SimpleTcpCluster.managerTemplate  At SimpleTcpCluster.java:[line 396]
M V EI2: org.apache.catalina.ha.tcp.SimpleTcpCluster.setManagerTemplate(ClusterManager) may expose internal representation by storing an externally mutable object into SimpleTcpCluster.managerTemplate  At SimpleTcpCluster.java:[line 336]
M V EI: org.apache.catalina.ha.tcp.SimpleTcpCluster.getContainer() may expose internal representation by returning SimpleTcpCluster.container  At SimpleTcpCluster.java:[line 225]
M V EI: org.apache.catalina.ha.tcp.SimpleTcpCluster.getClusterDeployer() may expose internal representation by returning SimpleTcpCluster.clusterDeployer  At SimpleTcpCluster.java:[line 318]
M V EI: org.apache.catalina.ha.tcp.SimpleTcpCluster.getManagers() may expose internal representation by returning SimpleTcpCluster.managers  At SimpleTcpCluster.java:[line 387]
M V EI: org.apache.catalina.ha.tcp.SimpleTcpCluster.getChannel() may expose internal representation by returning SimpleTcpCluster.channel  At SimpleTcpCluster.java:[line 392]
M V EI2: org.apache.catalina.ha.tcp.SimpleTcpCluster.setClusterDeployer(ClusterDeployer) may expose internal representation by storing an externally mutable object into SimpleTcpCluster.clusterDeployer  At SimpleTcpCluster.java:[line 327]
M V EI2: org.apache.catalina.ha.tcp.SimpleTcpCluster.setContainer(Container) may expose internal representation by storing an externally mutable object into SimpleTcpCluster.container  At SimpleTcpCluster.java:[line 214]
M V EI2: org.apache.catalina.ha.tcp.SimpleTcpCluster.setChannel(Channel) may expose internal representation by storing an externally mutable object into SimpleTcpCluster.channel  At SimpleTcpCluster.java:[line 332]
M V EI2: new org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor(Nio2Endpoint, AbstractEndpoint) may expose internal representation by storing an externally mutable object into Nio2Endpoint$Nio2Acceptor.this$0  At Nio2Endpoint.java:[line 402]
M D RCN: Redundant nullcheck of org.eclipse.jdt.internal.compiler.ProcessTaskManager.unitToProcess, which is known to be non-null in org.eclipse.jdt.internal.compiler.ProcessTaskManager.run()  Redundant null check at ProcessTaskManager.java:[line 148]
M V EI2: new org.eclipse.jdt.internal.compiler.ProcessTaskManager(Compiler, int) may expose internal representation by storing an externally mutable object into ProcessTaskManager.compiler  At ProcessTaskManager.java:[line 35]
M M SC: new org.eclipse.jdt.internal.compiler.ProcessTaskManager(Compiler, int) invokes Thread.start()  At ProcessTaskManager.java:[line 47]
M M NN: Naked notify in org.apache.tomcat.util.net.AprEndpoint$Sendfile.run()  At AprEndpoint.java:[line 2063]
M V EI2: new org.apache.tomcat.util.net.AprEndpoint$Sendfile(AprEndpoint) may expose internal representation by storing an externally mutable object into AprEndpoint$Sendfile.this$0  At AprEndpoint.java:[line 1757]
M V EI2: new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser(Parser, int, int, int, int[], int[], int[], CompilerOptions) may expose internal representation by storing an externally mutable object into DiagnoseParser.parser  At DiagnoseParser.java:[line 155]
M V EI2: new org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser(Parser, int, int, int, int[], int[], int[], CompilerOptions) may expose internal representation by storing an externally mutable object into DiagnoseParser.options  At DiagnoseParser.java:[line 156]
M D NP: Load of known null value in jakarta.servlet.jsp.el.ImplicitObjectELResolver.getValue(ELContext, Object, Object)  At ImplicitObjectELResolver.java:[line 92]
M D NP: Load of known null value in jakarta.servlet.jsp.el.ImplicitObjectELResolver.getType(ELContext, Object, Object)  At ImplicitObjectELResolver.java:[line 129]
M D NP: Load of known null value in jakarta.servlet.jsp.el.ImplicitObjectELResolver.setValue(ELContext, Object, Object, Object)  At ImplicitObjectELResolver.java:[line 143]
M D NP: Load of known null value in jakarta.servlet.jsp.el.ImplicitObjectELResolver.isReadOnly(ELContext, Object, Object)  At ImplicitObjectELResolver.java:[line 156]
M V EI: org.apache.tomcat.util.modeler.BaseModelMBean.preRegister(MBeanServer, ObjectName) may expose internal representation by returning BaseModelMBean.oname  At BaseModelMBean.java:[line 930]
M V EI2: org.apache.tomcat.util.modeler.BaseModelMBean.preRegister(MBeanServer, ObjectName) may expose internal representation by storing an externally mutable object into BaseModelMBean.oname  At BaseModelMBean.java:[line 926]
M V EI2: org.apache.tomcat.util.modeler.BaseModelMBean.setManagedBean(ManagedBean) may expose internal representation by storing an externally mutable object into BaseModelMBean.managedBean  At BaseModelMBean.java:[line 234]
M V EI: org.apache.tomcat.util.modeler.BaseModelMBean.getJmxName() may expose internal representation by returning BaseModelMBean.oname  At BaseModelMBean.java:[line 902]
M D SF: Switch statement found in org.apache.catalina.servlets.WebdavServlet.doPropfind(HttpServletRequest, HttpServletResponse) where default case is missing  At WebdavServlet.java:[lines 525-537]
M D SF: Switch statement found in org.apache.catalina.servlets.WebdavServlet.doLock(HttpServletRequest, HttpServletResponse) where default case is missing  At WebdavServlet.java:[lines 955-967]
M D SF: Switch statement found in org.apache.catalina.servlets.WebdavServlet.generatePropFindResponse(XMLWriter, String, String, int, List, boolean, boolean, long, long, long, String, String) where default case is missing  At WebdavServlet.java:[lines 1940-2124]
M V EI2: org.apache.catalina.ha.backend.TcpSender.init(HeartbeatListener) may expose internal representation by storing an externally mutable object into TcpSender.config  At TcpSender.java:[line 61]
H I Dm: Found reliance on default encoding in org.apache.catalina.ha.backend.TcpSender.send(String): new java.io.OutputStreamWriter(OutputStream)  At TcpSender.java:[line 109]
H I Dm: Found reliance on default encoding in org.apache.catalina.ha.backend.TcpSender.send(String): new java.io.InputStreamReader(InputStream)  At TcpSender.java:[line 108]
M C RCN: Nullcheck of binding at line 282 of value previously dereferenced in org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor.resolveAnnotations(BlockScope, Annotation[], Binding)  At AnnotationDiscoveryVisitor.java:[line 281]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor(BaseProcessingEnvImpl) may expose internal representation by storing an externally mutable object into AnnotationDiscoveryVisitor._env  At AnnotationDiscoveryVisitor.java:[line 63]
H D ST: Write to static field org.apache.naming.factory.webservices.ServiceProxy.portClass from instance method new org.apache.naming.factory.webservices.ServiceProxy(Service)  At ServiceProxy.java:[line 71]
H D ST: Write to static field org.apache.naming.factory.webservices.ServiceProxy.portQNameClass from instance method new org.apache.naming.factory.webservices.ServiceProxy(Service)  At ServiceProxy.java:[line 70]
M V EI2: org.apache.naming.factory.webservices.ServiceProxy.setPortComponentRef(Hashtable) may expose internal representation by storing an externally mutable object into ServiceProxy.portComponentRef  At ServiceProxy.java:[line 125]
M V EI2: new org.apache.catalina.tribes.membership.McastServiceImpl$ReceiverThread(McastServiceImpl) may expose internal representation by storing an externally mutable object into McastServiceImpl$ReceiverThread.this$0  At McastServiceImpl.java:[line 554]
M V EI2: new org.apache.catalina.valves.AbstractAccessLogValve$PortElement(AbstractAccessLogValve, String) may expose internal representation by storing an externally mutable object into AbstractAccessLogValve$PortElement.this$0  At AbstractAccessLogValve.java:[line 1268]
M V EI2: new org.apache.catalina.valves.AbstractAccessLogValve$PortElement(AbstractAccessLogValve) may expose internal representation by storing an externally mutable object into AbstractAccessLogValve$PortElement.this$0  At AbstractAccessLogValve.java:[line 1264]
H P Dm: org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(JarScanType, ServletContext, JarScannerCallback, Set) is or uses a map or set of URLs, which can be a performance hog  At StandardJarScanner.java:[lines 240-284]
H P Dm: org.apache.tomcat.util.scan.StandardJarScanner.processURLs(JarScanType, JarScannerCallback, Set, boolean, Deque) is or uses a map or set of URLs, which can be a performance hog  At StandardJarScanner.java:[lines 290-329]
H P Dm: org.apache.tomcat.util.scan.StandardJarScanner.scan(JarScanType, ServletContext, JarScannerCallback) is or uses a map or set of URLs, which can be a performance hog  At StandardJarScanner.java:[line 194]
H P Dm: org.apache.tomcat.util.scan.StandardJarScanner.processURLs(JarScanType, JarScannerCallback, Set, boolean, Deque) is or uses a map or set of URLs, which can be a performance hog  At StandardJarScanner.java:[line 297]
M V EI2: org.apache.tomcat.jdbc.pool.ProxyConnection.setPool(ConnectionPool) may expose internal representation by storing an externally mutable object into ProxyConnection.pool  At ProxyConnection.java:[line 54]
M V EI: org.apache.tomcat.jdbc.pool.ProxyConnection.unwrap(Class) may expose internal representation by returning ProxyConnection.connection  At ProxyConnection.java:[line 81]
M V EI: org.apache.tomcat.jdbc.pool.ProxyConnection.getConnection() may expose internal representation by returning ProxyConnection.connection  At ProxyConnection.java:[line 42]
M V EI: org.apache.tomcat.jdbc.pool.ProxyConnection.getDelegateConnection() may expose internal representation by returning ProxyConnection.connection  At ProxyConnection.java:[line 149]
M V EI: org.apache.tomcat.jdbc.pool.ProxyConnection.getPool() may expose internal representation by returning ProxyConnection.pool  At ProxyConnection.java:[line 50]
M V EI2: org.apache.tomcat.jdbc.pool.ProxyConnection.reset(ConnectionPool, PooledConnection) may expose internal representation by storing an externally mutable object into ProxyConnection.pool  At ProxyConnection.java:[line 66]
M V EI2: org.apache.tomcat.jdbc.pool.ProxyConnection.reset(ConnectionPool, PooledConnection) may expose internal representation by storing an externally mutable object into ProxyConnection.connection  At ProxyConnection.java:[line 67]
M V EI: org.apache.tomcat.jdbc.pool.ProxyConnection.getParentPool() may expose internal representation by returning ProxyConnection.pool  At ProxyConnection.java:[line 153]
M V EI2: org.apache.tomcat.jdbc.pool.ProxyConnection.setConnection(PooledConnection) may expose internal representation by storing an externally mutable object into ProxyConnection.connection  At ProxyConnection.java:[line 46]
M V EI: org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl.getBounds() may expose internal representation by returning TypeParameterElementImpl._bounds  At TypeParameterElementImpl.java:[line 67]
M D DLS: Dead store to unused in org.apache.jasper.compiler.JspDocumentParser.processChars()  At JspDocumentParser.java:[line 557]
M D DLS: Dead store to $L2 in org.apache.jasper.compiler.JspDocumentParser.processChars()  At JspDocumentParser.java:[line 526]
H D DLS: Dead store to $L4 in org.apache.jasper.compiler.JspDocumentParser.comment(char[], int, int)  At JspDocumentParser.java:[line 741]
M V EI2: new org.apache.tomcat.util.http.fileupload.impl.FileItemStreamImpl(FileItemIteratorImpl, String, String, String, boolean, long) may expose internal representation by storing an externally mutable object into FileItemStreamImpl.fileItemIteratorImpl  At FileItemStreamImpl.java:[line 89]
M D NP: Possible null pointer dereference in org.eclipse.jdt.internal.compiler.batch.ClasspathJep247Jdk12$1.visitFile(Path, BasicFileAttributes) due to return value of called method  Dereferenced at ClasspathJep247Jdk12.java:[line 180]
M D ST: Write to static field org.apache.catalina.core.AprLifecycleListener.SSLEngine from instance method org.apache.catalina.core.AprLifecycleListener.setSSLEngine(String)  At AprLifecycleListener.java:[line 402]
M D ST: Write to static field org.apache.catalina.core.AprLifecycleListener.SSLRandomSeed from instance method org.apache.catalina.core.AprLifecycleListener.setSSLRandomSeed(String)  At AprLifecycleListener.java:[line 418]
M D ST: Write to static field org.apache.catalina.core.AprLifecycleListener.FIPSMode from instance method org.apache.catalina.core.AprLifecycleListener.setFIPSMode(String)  At AprLifecycleListener.java:[line 434]
M V EI2: new org.apache.catalina.connector.ResponseFacade(Response) may expose internal representation by storing an externally mutable object into ResponseFacade.response  At ResponseFacade.java:[line 115]
M M Wa: Wait not in loop in org.apache.coyote.http2.WindowAllocationManager.waitFor(int, long)  At WindowAllocationManager.java:[line 151]
M V EI: org.apache.catalina.tribes.membership.cloud.CloudMembershipService.getMembershipProvider() may expose internal representation by returning CloudMembershipService.membershipProvider  At CloudMembershipService.java:[line 241]
M V EI2: org.apache.catalina.tribes.membership.cloud.CloudMembershipService.setPayload(byte[]) may expose internal representation by storing an externally mutable object into CloudMembershipService.payload  At CloudMembershipService.java:[line 225]
M V EI2: org.apache.catalina.tribes.membership.cloud.CloudMembershipService.setDomain(byte[]) may expose internal representation by storing an externally mutable object into CloudMembershipService.domain  At CloudMembershipService.java:[line 233]
M V EI2: org.apache.catalina.tribes.membership.cloud.CloudMembershipService.setMembershipProvider(MembershipProvider) may expose internal representation by storing an externally mutable object into CloudMembershipService.membershipProvider  At CloudMembershipService.java:[line 245]
M V EI: org.apache.catalina.tribes.membership.cloud.CloudMembershipService.getLocalMember(boolean) may expose internal representation by returning CloudMembershipService.localMember  At CloudMembershipService.java:[line 181]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.Unknown.setBytes(byte[]) may expose internal representation by storing an externally mutable object into Unknown.bytes  At Unknown.java:[line 151]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.Unknown(int, int, byte[], ConstantPool) may expose internal representation by storing an externally mutable object into Unknown.bytes  At Unknown.java:[line 76]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Unknown.getBytes() may expose internal representation by returning Unknown.bytes  At Unknown.java:[line 134]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Deprecated.getBytes() may expose internal representation by returning Deprecated.bytes  At Deprecated.java:[line 111]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.Deprecated.setBytes(byte[]) may expose internal representation by storing an externally mutable object into Deprecated.bytes  At Deprecated.java:[line 119]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.Deprecated(int, int, byte[], ConstantPool) may expose internal representation by storing an externally mutable object into Deprecated.bytes  At Deprecated.java:[line 55]
M M JLM: Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.registerReadInterest()  At AprEndpoint.java:[line 2541]
M M JLM: Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.registerWriteInterest()  At AprEndpoint.java:[line 2559]
M M JLM: Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.getSSLInfoS(int)  At AprEndpoint.java:[line 2756]
M M JLM: Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.getSSLInfoI(int)  At AprEndpoint.java:[line 2769]
M M JLM: Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.tomcat.util.net.AprEndpoint$AprSocketWrapper.getSSLInfoB(int)  At AprEndpoint.java:[line 2782]
M D RCN: Redundant nullcheck of is which is known to be null in org.apache.jasper.compiler.JDTCompiler$1.findType(String)  Redundant null check at JDTCompiler.java:[line 207]
M D NP: Load of known null value in org.apache.jasper.compiler.JDTCompiler$1.findType(String)  At JDTCompiler.java:[line 207]
M V EI2: new org.apache.naming.SelectorContext(Hashtable, boolean) may expose internal representation by storing an externally mutable object into SelectorContext.env  At SelectorContext.java:[line 84]
M V EI2: new org.apache.naming.SelectorContext(Hashtable) may expose internal representation by storing an externally mutable object into SelectorContext.env  At SelectorContext.java:[line 71]
M B ES: Comparison of String parameter using == or != in org.apache.jasper.compiler.Parser.parseBody(Node, String, String)  At Parser.java:[line 1686]
M B ES: Comparison of String parameter using == or != in org.apache.jasper.compiler.Parser.parseBody(Node, String, String)  At Parser.java:[line 1691]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseTaglibDirective(Node)  At Parser.java:[line 454]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseAttributeDirective(Node)  At Parser.java:[line 609]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseVariableDirective(Node)  At Parser.java:[line 619]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseComment(Node)  At Parser.java:[line 634]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseDeclaration(Node)  At Parser.java:[line 649]
M D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseXMLDeclaration(Node)  At Parser.java:[line 676]
M D DLS: Dead store to $L5 in org.apache.jasper.compiler.Parser.parseXMLDeclaration(Node)  At Parser.java:[line 685]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseExpression(Node)  At Parser.java:[line 710]
M D DLS: Dead store to $L5 in org.apache.jasper.compiler.Parser.parseXMLExpression(Node)  At Parser.java:[line 744]
M D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseXMLExpression(Node)  At Parser.java:[line 735]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseELExpression(Node, char)  At Parser.java:[line 769]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseScriptlet(Node)  At Parser.java:[line 785]
M D DLS: Dead store to $L5 in org.apache.jasper.compiler.Parser.parseXMLScriptlet(Node)  At Parser.java:[line 819]
M D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseXMLScriptlet(Node)  At Parser.java:[line 810]
M D DLS: Dead store to $L12 in org.apache.jasper.compiler.Parser.parseCustomTag(Node)  At Parser.java:[line 1260]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseTemplateText(Node)  At Parser.java:[line 1349]
M D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseXMLTemplateText(Node)  At Parser.java:[line 1412]
H D DLS: Dead store to unused in org.apache.jasper.compiler.Parser.parseTagDependentBody(Node, String)  At Parser.java:[line 1619]
M D SF: Switch statement found in org.apache.tomcat.jdbc.pool.interceptor.ConnectionState.invoke(Object, Method, Object[]) where default case is missing  At ConnectionState.java:[lines 160-164]
M S SQL: A prepared statement is generated from a nonconstant String in org.apache.catalina.valves.JDBCAccessLogValve.open()  At JDBCAccessLogValve.java:[line 591]
M V EI2: new org.apache.coyote.http11.Http11Processor(AbstractHttp11Protocol, Adapter) may expose internal representation by storing an externally mutable object into Http11Processor.protocol  At Http11Processor.java:[line 156]
M D SF: Switch statement found in org.apache.coyote.http11.Http11Processor.service(SocketWrapperBase) where one case falls through to the next case  At Http11Processor.java:[lines 318-321]
M D SF: Switch statement found in org.apache.coyote.http11.Http11Processor.processSendfile(SocketWrapperBase) where default case is missing  At Http11Processor.java:[lines 1402-1408]
M V EI2: new org.apache.jasper.runtime.JspContextWrapper(JspTag, JspContext, ArrayList, ArrayList, ArrayList, Map) may expose internal representation by storing an externally mutable object into JspContextWrapper.aliases  At JspContextWrapper.java:[line 113]
M V EI2: new org.apache.jasper.runtime.JspContextWrapper(JspTag, JspContext, ArrayList, ArrayList, ArrayList, Map) may expose internal representation by storing an externally mutable object into JspContextWrapper.invokingJspCtxt  At JspContextWrapper.java:[line 103]
M V EI: org.apache.jasper.runtime.JspContextWrapper.getELContext() may expose internal representation by returning JspContextWrapper.elContext  At JspContextWrapper.java:[line 520]
M V EI2: new org.apache.jasper.runtime.JspContextWrapper(JspTag, JspContext, ArrayList, ArrayList, ArrayList, Map) may expose internal representation by storing an externally mutable object into JspContextWrapper.atBeginVars  At JspContextWrapper.java:[line 110]
M V EI2: new org.apache.jasper.runtime.JspContextWrapper(JspTag, JspContext, ArrayList, ArrayList, ArrayList, Map) may expose internal representation by storing an externally mutable object into JspContextWrapper.rootJspCtxt  At JspContextWrapper.java:[line 107]
M V EI: org.apache.jasper.runtime.JspContextWrapper.getServletContext() may expose internal representation by returning JspContextWrapper.servletContext  At JspContextWrapper.java:[line 319]
M V EI2: new org.apache.jasper.runtime.JspContextWrapper(JspTag, JspContext, ArrayList, ArrayList, ArrayList, Map) may expose internal representation by storing an externally mutable object into JspContextWrapper.nestedVars  At JspContextWrapper.java:[line 109]
M V EI2: new org.apache.jasper.runtime.JspContextWrapper(JspTag, JspContext, ArrayList, ArrayList, ArrayList, Map) may expose internal representation by storing an externally mutable object into JspContextWrapper.atEndVars  At JspContextWrapper.java:[line 111]
M D SF: Switch statement found in org.apache.jasper.runtime.JspContextWrapper.copyTagToPageScope(int) where default case is missing  At JspContextWrapper.java:[lines 425-438]
M S SQL: A prepared statement is generated from a nonconstant String in org.apache.catalina.session.DataSourceStore.load(String)  At DataSourceStore.java:[line 471]
M S SQL: A prepared statement is generated from a nonconstant String in org.apache.catalina.session.DataSourceStore.save(Session)  At DataSourceStore.java:[line 631]
H I Dm: Found reliance on default encoding in org.apache.tomcat.jakartaee.commons.compress.archivers.zip.AsiExtraField.getLocalFileDataLength(): String.getBytes()  At AsiExtraField.java:[line 112]
H I Dm: Found reliance on default encoding in org.apache.tomcat.jakartaee.commons.compress.archivers.zip.AsiExtraField.getLocalFileDataData(): String.getBytes()  At AsiExtraField.java:[line 136]
H I Dm: Found reliance on default encoding in org.apache.tomcat.jakartaee.commons.compress.archivers.zip.AsiExtraField.parseFromLocalFileData(byte[], int, int): new String(byte[])  At AsiExtraField.java:[line 304]
M V EI2: new org.apache.catalina.core.StandardEngine$AccessLogListener(StandardEngine, Host, Context) may expose internal representation by storing an externally mutable object into StandardEngine$AccessLogListener.host  At StandardEngine.java:[line 432]
M V EI2: new org.apache.catalina.core.StandardEngine$AccessLogListener(StandardEngine, Host, Context) may expose internal representation by storing an externally mutable object into StandardEngine$AccessLogListener.context  At StandardEngine.java:[line 433]
M V EI2: new org.apache.catalina.core.StandardEngine$AccessLogListener(StandardEngine, Host, Context) may expose internal representation by storing an externally mutable object into StandardEngine$AccessLogListener.engine  At StandardEngine.java:[line 431]
M V EI: org.apache.catalina.tribes.group.interceptors.SimpleCoordinator.getView() may expose internal representation by returning SimpleCoordinator.view  At SimpleCoordinator.java:[line 106]
H P Dm: org.apache.catalina.startup.WebappServiceLoader.load(Class) is or uses a map or set of URLs, which can be a performance hog  At WebappServiceLoader.java:[line 120]
H P Dm: org.apache.catalina.startup.WebappServiceLoader.load(Class) is or uses a map or set of URLs, which can be a performance hog  At WebappServiceLoader.java:[line 154]
H P Dm: org.apache.catalina.startup.WebappServiceLoader.load(Class) is or uses a map or set of URLs, which can be a performance hog  At WebappServiceLoader.java:[line 154]
M V EI2: new org.apache.catalina.startup.WebappServiceLoader(Context) may expose internal representation by storing an externally mutable object into WebappServiceLoader.context  At WebappServiceLoader.java:[line 77]
M P SBSC: org.eclipse.jdt.core.JDTCompilerAdapter.logAndAddFilesToCompile(Commandline) concatenates strings using + in a loop  At JDTCompilerAdapter.java:[line 562]
H I Dm: Found reliance on default encoding in org.eclipse.jdt.core.JDTCompilerAdapter.execute(): new java.io.PrintWriter(OutputStream)  At JDTCompilerAdapter.java:[line 82]
M V EI2: new org.apache.catalina.valves.AbstractAccessLogValve$RemoteAddrElement(AbstractAccessLogValve) may expose internal representation by storing an externally mutable object into AbstractAccessLogValve$RemoteAddrElement.this$0  At AbstractAccessLogValve.java:[line 880]
M V EI2: new org.apache.catalina.valves.AbstractAccessLogValve$RemoteAddrElement(AbstractAccessLogValve, String) may expose internal representation by storing an externally mutable object into AbstractAccessLogValve$RemoteAddrElement.this$0  At AbstractAccessLogValve.java:[line 884]
M V EI2: org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.setConnectionProperties(Properties) may expose internal representation by storing an externally mutable object into DriverAdapterCPDS.connectionProperties  At DriverAdapterCPDS.java:[line 554]
M V EI: org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.getConnectionProperties() may expose internal representation by returning DriverAdapterCPDS.connectionProperties  At DriverAdapterCPDS.java:[line 158]
M V EI: org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.getLogWriter() may expose internal representation by returning DriverAdapterCPDS.logWriter  At DriverAdapterCPDS.java:[line 211]
M V EI2: org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS.setLogWriter(PrintWriter) may expose internal representation by storing an externally mutable object into DriverAdapterCPDS.logWriter  At DriverAdapterCPDS.java:[line 619]
M D RCN: Redundant nullcheck of is which is known to be null in org.apache.catalina.startup.ContextConfig.populateJavaClassCache(String, Map)  Redundant null check at ContextConfig.java:[line 2512]
M D NP: Load of known null value in org.apache.catalina.startup.ContextConfig.populateJavaClassCache(String, Map)  At ContextConfig.java:[line 2512]
M V EI2: org.apache.catalina.startup.ContextConfig.setCustomAuthenticators(Map) may expose internal representation by storing an externally mutable object into ContextConfig.customAuthenticators  At ContextConfig.java:[line 278]
M X OBL: org.apache.catalina.startup.ContextConfig.getContextWebXmlSource() may fail to clean up java.io.InputStream  Obligation to clean up resource created at ContextConfig.java:[line 1993] is not discharged
H I Dm: Found reliance on default encoding in org.apache.catalina.startup.ContextConfig.contextConfig(Digester): new java.io.FileWriter(File)  At ContextConfig.java:[line 610]
M D SF: Switch statement found in org.apache.el.parser.ELParser.jj_rescan_token() where default case is missing  At ELParser.java:[lines 3924-3932]
M B Nm: The method name org.apache.el.parser.ELParser.CompositeExpression() doesn't start with a lower case letter  At ELParser.java:[lines 23-89]
M B Nm: The method name org.apache.el.parser.ELParser.LiteralExpression() doesn't start with a lower case letter  At ELParser.java:[lines 98-111]
M B Nm: The method name org.apache.el.parser.ELParser.DeferredExpression() doesn't start with a lower case letter  At ELParser.java:[lines 118-150]
M B Nm: The method name org.apache.el.parser.ELParser.DynamicExpression() doesn't start with a lower case letter  At ELParser.java:[lines 157-189]
M B Nm: The method name org.apache.el.parser.ELParser.Expression() doesn't start with a lower case letter  At ELParser.java:[lines 196-197]
M B Nm: The method name org.apache.el.parser.ELParser.Semicolon() doesn't start with a lower case letter  At ELParser.java:[lines 203-247]
M B Nm: The method name org.apache.el.parser.ELParser.Assignment() doesn't start with a lower case letter  At ELParser.java:[lines 253-319]
M B Nm: The method name org.apache.el.parser.ELParser.LambdaExpression() doesn't start with a lower case letter  At ELParser.java:[lines 325-383]
M B Nm: The method name org.apache.el.parser.ELParser.LambdaParameters() doesn't start with a lower case letter  At ELParser.java:[lines 389-456]
M B Nm: The method name org.apache.el.parser.ELParser.LambdaExpressionOrInvocation() doesn't start with a lower case letter  At ELParser.java:[lines 463-536]
M B Nm: The method name org.apache.el.parser.ELParser.Choice() doesn't start with a lower case letter  At ELParser.java:[lines 543-585]
M B Nm: The method name org.apache.el.parser.ELParser.Or() doesn't start with a lower case letter  At ELParser.java:[lines 592-650]
M B Nm: The method name org.apache.el.parser.ELParser.And() doesn't start with a lower case letter  At ELParser.java:[lines 657-715]
M B Nm: The method name org.apache.el.parser.ELParser.Equality() doesn't start with a lower case letter  At ELParser.java:[lines 722-840]
M B Nm: The method name org.apache.el.parser.ELParser.Compare() doesn't start with a lower case letter  At ELParser.java:[lines 847-1065]
M B Nm: The method name org.apache.el.parser.ELParser.Concatenation() doesn't start with a lower case letter  At ELParser.java:[lines 1073-1117]
M B Nm: The method name org.apache.el.parser.ELParser.Math() doesn't start with a lower case letter  At ELParser.java:[lines 1124-1212]
M B Nm: The method name org.apache.el.parser.ELParser.Multiplication() doesn't start with a lower case letter  At ELParser.java:[lines 1219-1372]
M B Nm: The method name org.apache.el.parser.ELParser.Unary() doesn't start with a lower case letter  At ELParser.java:[lines 1379-1514]
M B Nm: The method name org.apache.el.parser.ELParser.Value() doesn't start with a lower case letter  At ELParser.java:[lines 1521-1565]
M B Nm: The method name org.apache.el.parser.ELParser.ValuePrefix() doesn't start with a lower case letter  At ELParser.java:[lines 1572-1594]
M B Nm: The method name org.apache.el.parser.ELParser.ValueSuffix() doesn't start with a lower case letter  At ELParser.java:[lines 1601-1624]
M B Nm: The method name org.apache.el.parser.ELParser.DotSuffix() doesn't start with a lower case letter  At ELParser.java:[lines 1631-1645]
M B Nm: The method name org.apache.el.parser.ELParser.BracketSuffix() doesn't start with a lower case letter  At ELParser.java:[lines 1652-1684]
M B Nm: The method name org.apache.el.parser.ELParser.MethodParameters() doesn't start with a lower case letter  At ELParser.java:[lines 1690-1757]
M B Nm: The method name org.apache.el.parser.ELParser.NonLiteral() doesn't start with a lower case letter  At ELParser.java:[lines 1764-1808]
M B Nm: The method name org.apache.el.parser.ELParser.SetData() doesn't start with a lower case letter  At ELParser.java:[lines 1816-1883]
M B Nm: The method name org.apache.el.parser.ELParser.ListData() doesn't start with a lower case letter  At ELParser.java:[lines 1886-1953]
M B Nm: The method name org.apache.el.parser.ELParser.MapData() doesn't start with a lower case letter  At ELParser.java:[lines 1961-2028]
M B Nm: The method name org.apache.el.parser.ELParser.MapEntry() doesn't start with a lower case letter  At ELParser.java:[lines 2031-2063]
M B Nm: The method name org.apache.el.parser.ELParser.Identifier() doesn't start with a lower case letter  At ELParser.java:[lines 2070-2083]
M B Nm: The method name org.apache.el.parser.ELParser.Function() doesn't start with a lower case letter  At ELParser.java:[lines 2090-2150]
M B Nm: The method name org.apache.el.parser.ELParser.Literal() doesn't start with a lower case letter  At ELParser.java:[lines 2157-2184]
M B Nm: The method name org.apache.el.parser.ELParser.Boolean() doesn't start with a lower case letter  At ELParser.java:[lines 2191-2223]
M B Nm: The method name org.apache.el.parser.ELParser.FloatingPoint() doesn't start with a lower case letter  At ELParser.java:[lines 2230-2243]
M B Nm: The method name org.apache.el.parser.ELParser.Integer() doesn't start with a lower case letter  At ELParser.java:[lines 2250-2263]
M B Nm: The method name org.apache.el.parser.ELParser.String() doesn't start with a lower case letter  At ELParser.java:[lines 2270-2283]
M B Nm: The method name org.apache.el.parser.ELParser.Null() doesn't start with a lower case letter  At ELParser.java:[lines 2290-2300]
M B Nm: The method name org.apache.el.parser.ELParser.ReInit(InputStream) doesn't start with a lower case letter  At ELParser.java:[lines 3635-3636]
M B Nm: The method name org.apache.el.parser.ELParser.ReInit(InputStream, String) doesn't start with a lower case letter  At ELParser.java:[lines 3639-3651]
M B Nm: The method name org.apache.el.parser.ELParser.ReInit(Reader) doesn't start with a lower case letter  At ELParser.java:[lines 3670-3690]
M B Nm: The method name org.apache.el.parser.ELParser.ReInit(ELParserTokenManager) doesn't start with a lower case letter  At ELParser.java:[lines 3708-3719]
M V EI: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getAccessTime() may expose internal representation by returning X5455_ExtendedTimestamp.accessTime  At X5455_ExtendedTimestamp.java:[line 350]
M V EI2: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setAccessTime(ZipLong) may expose internal representation by storing an externally mutable object into X5455_ExtendedTimestamp.accessTime  At X5455_ExtendedTimestamp.java:[line 444]
M V EI: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getCreateTime() may expose internal representation by returning X5455_ExtendedTimestamp.createTime  At X5455_ExtendedTimestamp.java:[line 365]
M V EI2: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setCreateTime(ZipLong) may expose internal representation by storing an externally mutable object into X5455_ExtendedTimestamp.createTime  At X5455_ExtendedTimestamp.java:[line 463]
M V EI2: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setModifyTime(ZipLong) may expose internal representation by storing an externally mutable object into X5455_ExtendedTimestamp.modifyTime  At X5455_ExtendedTimestamp.java:[line 425]
M V EI: org.apache.tomcat.jakartaee.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getModifyTime() may expose internal representation by returning X5455_ExtendedTimestamp.modifyTime  At X5455_ExtendedTimestamp.java:[line 341]
M V EI: org.apache.catalina.session.PersistentManagerBase.getStore() may expose internal representation by returning PersistentManagerBase.store  At PersistentManagerBase.java:[line 352]
M V EI2: org.apache.catalina.session.PersistentManagerBase.setStore(Store) may expose internal representation by storing an externally mutable object into PersistentManagerBase.store  At PersistentManagerBase.java:[line 341]
M V EI: org.apache.catalina.session.StoreBase.getManager() may expose internal representation by returning StoreBase.manager  At StoreBase.java:[line 93]
M V EI2: org.apache.catalina.session.StoreBase.setManager(Manager) may expose internal representation by storing an externally mutable object into StoreBase.manager  At StoreBase.java:[line 84]
M D NP: Load of known null value in org.apache.el.parser.AstValue.getTarget(EvaluationContext)  At AstValue.java:[line 118]
M V EI2: new org.apache.catalina.tribes.transport.nio.NioReplicationTask(ListenCallback, NioReceiver) may expose internal representation by storing an externally mutable object into NioReplicationTask.receiver  At NioReplicationTask.java:[line 65]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Module.getProvidesTable() may expose internal representation by returning Module.providesTable  At Module.java:[line 139]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Module.getOpensTable() may expose internal representation by returning Module.opensTable  At Module.java:[line 130]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Module.getExportsTable() may expose internal representation by returning Module.exportsTable  At Module.java:[line 121]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Module.getRequiresTable() may expose internal representation by returning Module.requiresTable  At Module.java:[line 112]
M V EI2: new org.apache.jasper.el.ExpressionImpl(ValueExpression, ExpressionFactory) may expose internal representation by storing an externally mutable object into ExpressionImpl.ve  At ExpressionImpl.java:[line 34]
M V EI2: org.apache.catalina.tribes.transport.ReplicationTransmitter.setTransport(MultiPointSender) may expose internal representation by storing an externally mutable object into ReplicationTransmitter.transport  At ReplicationTransmitter.java:[line 53]
M V EI: org.apache.catalina.tribes.transport.ReplicationTransmitter.getTransport() may expose internal representation by returning ReplicationTransmitter.transport  At ReplicationTransmitter.java:[line 49]
M V EI2: org.apache.catalina.tribes.transport.ReplicationTransmitter.setChannel(Channel) may expose internal representation by storing an externally mutable object into ReplicationTransmitter.channel  At ReplicationTransmitter.java:[line 139]
M V EI: org.apache.catalina.tribes.transport.ReplicationTransmitter.getChannel() may expose internal representation by returning ReplicationTransmitter.channel  At ReplicationTransmitter.java:[line 134]
M V EI2: new org.apache.catalina.core.ApplicationPushBuilder(Request, HttpServletRequest) may expose internal representation by storing an externally mutable object into ApplicationPushBuilder.catalinaRequest  At ApplicationPushBuilder.java:[line 82]
M V EI: org.apache.catalina.startup.Tomcat.getServer() may expose internal representation by returning Tomcat.server  At Tomcat.java:[line 650]
M V EI2: org.apache.catalina.startup.PasswdUserDatabase.setUserConfig(UserConfig) may expose internal representation by storing an externally mutable object into PasswdUserDatabase.userConfig  At PasswdUserDatabase.java:[line 75]
M V EI: org.apache.catalina.startup.PasswdUserDatabase.getUserConfig() may expose internal representation by returning PasswdUserDatabase.userConfig  At PasswdUserDatabase.java:[line 64]
H I Dm: Found reliance on default encoding in org.apache.catalina.startup.PasswdUserDatabase.init(): new java.io.FileReader(String)  At PasswdUserDatabase.java:[line 104]
M D Eq: org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl doesn't override TypeMirrorImpl.equals(Object)  At DeclaredTypeImpl.java:[line 1]
M V EI2: new org.eclipse.jdt.internal.compiler.batch.BatchCompilerRequestor(Main) may expose internal representation by storing an externally mutable object into BatchCompilerRequestor.compiler  At BatchCompilerRequestor.java:[line 25]
H I Dm: Found reliance on default encoding in org.apache.catalina.tribes.membership.Constants.main(String[]): String.getBytes()  At Constants.java:[line 31]
M V EI: org.apache.catalina.storeconfig.StoreLoader.getRegistry() may expose internal representation by returning StoreLoader.registry  At StoreLoader.java:[line 87]
M V EI2: org.apache.catalina.storeconfig.StoreLoader.setRegistry(StoreRegistry) may expose internal representation by storing an externally mutable object into StoreLoader.registry  At StoreLoader.java:[line 95]
M D DCN: Do not catch NullPointerException like in org.apache.catalina.realm.JNDIRealm.authenticate(String, String)  At JNDIRealm.java:[line 1245]
M D DCN: Do not catch NullPointerException like in org.apache.catalina.realm.JNDIRealm.getPassword(String)  At JNDIRealm.java:[line 2365]
H I Dm: Found reliance on default encoding in org.apache.catalina.realm.JNDIRealm.getAttributeValue(String, Attributes): new String(byte[])  At JNDIRealm.java:[line 2236]
M V EI2: org.apache.catalina.util.LifecycleMBeanBase.preRegister(MBeanServer, ObjectName) may expose internal representation by storing an externally mutable object into LifecycleMBeanBase.oname  At LifecycleMBeanBase.java:[line 230]
M V EI: org.apache.catalina.util.LifecycleMBeanBase.preRegister(MBeanServer, ObjectName) may expose internal representation by returning LifecycleMBeanBase.oname  At LifecycleMBeanBase.java:[line 233]
M V EI: org.apache.catalina.util.LifecycleMBeanBase.getObjectName() may expose internal representation by returning LifecycleMBeanBase.oname  At LifecycleMBeanBase.java:[line 112]
M V EI: org.apache.el.lang.FunctionMapperFactory.create() may expose internal representation by returning FunctionMapperFactory.memento  At FunctionMapperFactory.java:[line 67]
M P WMI: org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory.validatePropertyNames(Reference, Name, List, List) makes inefficient use of keySet iterator instead of entrySet iterator  At BasicDataSourceFactory.java:[line 425]
M V EI: jakarta.el.ELProcessor.getELManager() may expose internal representation by returning ELProcessor.manager  At ELProcessor.java:[line 49]
M D NP: Possible null pointer dereference in org.apache.catalina.startup.HostConfig.migrateLegacyApps() due to return value of called method  Dereferenced at HostConfig.java:[line 1243]
M C NP: Possible null pointer dereference of context in org.apache.catalina.startup.HostConfig.deployDescriptor(ContextName, File) on exception path  Dereferenced at HostConfig.java:[line 702]
M C NP: Possible null pointer dereference of context in org.apache.catalina.startup.HostConfig.deployDescriptor(ContextName, File) on exception path  Dereferenced at HostConfig.java:[line 702]
M C NP: Null passed for non-null parameter of addWatchedResources(HostConfig$DeployedApplication, String, Context) in org.apache.catalina.startup.HostConfig.deployDirectory(ContextName, File)  Method invoked at HostConfig.java:[line 1216]
M C NP: Null passed for non-null parameter of addWatchedResources(HostConfig$DeployedApplication, String, Context) in org.apache.catalina.startup.HostConfig.deployDirectory(ContextName, File)  Method invoked at HostConfig.java:[line 1216]
M M SWL: org.apache.catalina.startup.HostConfig.checkResources(HostConfig$DeployedApplication, boolean) calls Thread.sleep() with a lock held  At HostConfig.java:[line 1472]
H B DMI: Random object created and used only once in org.apache.tomcat.websocket.DigestAuthenticator.getAuthorization(String, String, String, String, String)  At DigestAuthenticator.java:[line 66]
M V EI2: org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReportJmx.poolStarted(ConnectionPool) may expose internal representation by storing an externally mutable object into SlowQueryReportJmx.pool  At SlowQueryReportJmx.java:[line 139]
M V EI2: org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReportJmx.reset(ConnectionPool, PooledConnection) may expose internal representation by storing an externally mutable object into SlowQueryReportJmx.pool  At SlowQueryReportJmx.java:[line 124]
M V EI: org.apache.jasper.servlet.JspCServletContext.getClassLoader() may expose internal representation by returning JspCServletContext.loader  At JspCServletContext.java:[line 750]
M V EI2: new org.apache.jasper.servlet.JspCServletContext(PrintWriter, URL, ClassLoader, boolean, boolean) may expose internal representation by storing an externally mutable object into JspCServletContext.loader  At JspCServletContext.java:[line 143]
M V EI2: new org.apache.jasper.servlet.JspCServletContext(PrintWriter, URL, ClassLoader, boolean, boolean) may expose internal representation by storing an externally mutable object into JspCServletContext.myLogWriter  At JspCServletContext.java:[line 141]
M V EI: org.apache.coyote.AbstractProtocol$ConnectionHandler.getGlobal() may expose internal representation by returning AbstractProtocol$ConnectionHandler.global  At AbstractProtocol.java:[line 757]
M V EI2: new org.apache.coyote.AbstractProtocol$ConnectionHandler(AbstractProtocol) may expose internal representation by storing an externally mutable object into AbstractProtocol$ConnectionHandler.proto  At AbstractProtocol.java:[line 744]
M D RCN: Redundant nullcheck of firstBound, which is known to be non-null in org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl.getUpperBound()  Redundant null check at TypeVariableImpl.java:[line 65]
M V EI2: new org.apache.tomcat.util.net.NioEndpoint$SocketProcessor(NioEndpoint, SocketWrapperBase, SocketEvent) may expose internal representation by storing an externally mutable object into NioEndpoint$SocketProcessor.this$0  At NioEndpoint.java:[line 1704]
H I Dm: Found reliance on default encoding in org.apache.catalina.ssi.SSIFilter.doFilter(ServletRequest, ServletResponse, FilterChain): new String(byte[])  At SSIFilter.java:[line 163]
M C NP: Possible null pointer dereference of jdtValue in org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl.convertJDTArrayToReflectionArray(Object, TypeBinding, Class)  Dereferenced at AnnotationMirrorImpl.java:[line 402]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.ModulePackages.getPackageIndexTable() may expose internal representation by returning ModulePackages.packageIndexTable  At ModulePackages.java:[line 110]
M V EI2: new org.apache.catalina.authenticator.jaspic.SimpleAuthConfigProvider(Map, AuthConfigFactory) may expose internal representation by storing an externally mutable object into SimpleAuthConfigProvider.properties  At SimpleAuthConfigProvider.java:[line 41]
M V DP: org.apache.jasper.JspC.initClassLoader() creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block  At JspC.java:[line 1777]
M V EI: org.apache.jasper.JspC.getExtensions() may expose internal representation by returning JspC.extensions  At JspC.java:[line 863]
M V EI: org.apache.jasper.JspC.getCache() may expose internal representation by returning JspC.cache  At JspC.java:[line 610]
M V EI2: org.apache.jasper.JspC.setArgs(String[]) may expose internal representation by storing an externally mutable object into JspC.args  At JspC.java:[line 317]
H I Dm: Found reliance on default encoding in org.apache.jasper.JspC.initServletContext(ClassLoader): new java.io.PrintWriter(OutputStream)  At JspC.java:[line 1672]
H I Dm: Found reliance on default encoding in org.apache.jasper.JspC.openWebxmlReader(File): new java.io.InputStreamReader(InputStream)  At JspC.java:[line 1856]
H I Dm: Found reliance on default encoding in org.apache.jasper.JspC.openWebxmlWriter(File): new java.io.OutputStreamWriter(OutputStream)  At JspC.java:[line 1867]
M V EI2: new org.apache.jasper.servlet.TldPreScanned(ServletContext, boolean, boolean, boolean, Collection) may expose internal representation by storing an externally mutable object into TldPreScanned.preScannedURLs  At TldPreScanned.java:[line 34]
M V EI: org.apache.tomcat.jakartaee.bcel.generic.ArrayType.getBasicType() may expose internal representation by returning ArrayType.basicType  At ArrayType.java:[line 88]
M V EI: org.apache.tomcat.jakartaee.bcel.generic.ArrayType.getElementType() may expose internal representation by returning ArrayType.basicType  At ArrayType.java:[line 97]
M V EI2: new org.apache.tomcat.jakartaee.bcel.generic.ArrayType(Type, int) may expose internal representation by storing an externally mutable object into ArrayType.basicType  At ArrayType.java:[line 72]
M V EI: org.apache.catalina.ha.session.JvmRouteBinderValve.getCluster() may expose internal representation by returning JvmRouteBinderValve.cluster  At JvmRouteBinderValve.java:[line 249]
M V EI2: org.apache.catalina.ha.session.JvmRouteBinderValve.setCluster(CatalinaCluster) may expose internal representation by storing an externally mutable object into JvmRouteBinderValve.cluster  At JvmRouteBinderValve.java:[line 257]
M V EI2: org.apache.catalina.storeconfig.StoreConfig.setRegistry(StoreRegistry) may expose internal representation by storing an externally mutable object into StoreConfig.registry  At StoreConfig.java:[line 98]
M V EI2: org.apache.catalina.storeconfig.StoreConfig.setServer(Server) may expose internal representation by storing an externally mutable object into StoreConfig.server  At StoreConfig.java:[line 83]
M V EI: org.apache.catalina.storeconfig.StoreConfig.getRegistry() may expose internal representation by returning StoreConfig.registry  At StoreConfig.java:[line 78]
M V EI: org.apache.catalina.storeconfig.StoreConfig.getServer() may expose internal representation by returning StoreConfig.server  At StoreConfig.java:[line 88]
M D RV: Return value of updatedImportReference() ignored, but method has no side effect  At RecoveredTypeReference.java:[line 50]
M V EI: org.apache.jasper.tagplugins.jstl.Util$ImportResponseWrapper.getOutputStream() may expose internal representation by returning Util$ImportResponseWrapper.sos  At Util.java:[line 312]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl(CompilationUnitDeclaration[], ReferenceBinding[], boolean, BaseProcessingEnvImpl) may expose internal representation by storing an externally mutable object into RoundEnvImpl._processingEnv  At RoundEnvImpl.java:[line 54]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl(CompilationUnitDeclaration[], ReferenceBinding[], boolean, BaseProcessingEnvImpl) may expose internal representation by storing an externally mutable object into RoundEnvImpl._units  At RoundEnvImpl.java:[line 56]
M V EI2: new org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl(CompilationUnitDeclaration[], ReferenceBinding[], boolean, BaseProcessingEnvImpl) may expose internal representation by storing an externally mutable object into RoundEnvImpl._binaryTypes  At RoundEnvImpl.java:[line 70]
M V EI: org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl.getRootElements() may expose internal representation by returning RoundEnvImpl._rootElements  At RoundEnvImpl.java:[line 248]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching$SearchContradictions.visit(WildcardBinding) where default case is missing  At NullAnnotationMatching.java:[lines 683-688]
M V EI2: new org.apache.jasper.el.JspValueExpression(String, ValueExpression) may expose internal representation by storing an externally mutable object into JspValueExpression.target  At JspValueExpression.java:[line 47]
M V EI2: new org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl(FileUploadBase, RequestContext) may expose internal representation by storing an externally mutable object into FileItemIteratorImpl.fileUploadBase  At FileItemIteratorImpl.java:[line 137]
M V EI: org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.getMultiPartStream() may expose internal representation by returning FileItemIteratorImpl.multiPartStream  At FileItemIteratorImpl.java:[line 207]
M V EI: org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.next() may expose internal representation by returning FileItemIteratorImpl.currentItem  At FileItemIteratorImpl.java:[line 336]
H I Dm: Found reliance on default encoding in org.apache.catalina.tribes.membership.cloud.DNSMembershipProvider.fetchMembers(): String.getBytes()  At DNSMembershipProvider.java:[line 136]
H I Dm: Found reliance on default encoding in org.apache.catalina.tribes.membership.cloud.DNSMembershipProvider.accept(Serializable, Member): String.getBytes()  At DNSMembershipProvider.java:[line 188]
M V EI2: new org.eclipse.jdt.internal.compiler.tool.EclipseBatchRequestor(Main, DiagnosticListener, DefaultProblemFactory) may expose internal representation by storing an externally mutable object into EclipseBatchRequestor.compiler  At EclipseBatchRequestor.java:[line 35]
M V EI2: new org.eclipse.jdt.internal.compiler.tool.EclipseBatchRequestor(Main, DiagnosticListener, DefaultProblemFactory) may expose internal representation by storing an externally mutable object into EclipseBatchRequestor.problemFactory  At EclipseBatchRequestor.java:[line 37]
M V EI: org.apache.coyote.http11.filters.VoidInputFilter.getEncodingName() may expose internal representation by returning VoidInputFilter.ENCODING  At VoidInputFilter.java:[line 94]
M V EI: org.apache.coyote.http11.filters.IdentityInputFilter.getEncodingName() may expose internal representation by returning IdentityInputFilter.ENCODING  At IdentityInputFilter.java:[line 204]
M V EI: org.eclipse.jdt.internal.compiler.ast.NullLiteral.source() may expose internal representation by returning NullLiteral.source  At NullLiteral.java:[line 73]
M V EI2: new org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor(Nio2Endpoint, SocketWrapperBase, SocketEvent) may expose internal representation by storing an externally mutable object into Nio2Endpoint$SocketProcessor.this$0  At Nio2Endpoint.java:[line 1610]
M D DCN: Do not catch NullPointerException like in org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.doRun()  At Nio2Endpoint.java:[line 1677]
H D ST: Write to static field org.apache.tomcat.util.buf.StringCache.cacheSize from instance method org.apache.tomcat.util.buf.StringCache.setCacheSize(int)  At StringCache.java:[line 131]
H D ST: Write to static field org.apache.tomcat.util.buf.StringCache.byteEnabled from instance method org.apache.tomcat.util.buf.StringCache.setByteEnabled(boolean)  At StringCache.java:[line 147]
H D ST: Write to static field org.apache.tomcat.util.buf.StringCache.charEnabled from instance method org.apache.tomcat.util.buf.StringCache.setCharEnabled(boolean)  At StringCache.java:[line 163]
H D ST: Write to static field org.apache.tomcat.util.buf.StringCache.trainThreshold from instance method org.apache.tomcat.util.buf.StringCache.setTrainThreshold(int)  At StringCache.java:[line 179]
H D ST: Write to static field org.apache.tomcat.util.buf.StringCache.hitCount from instance method org.apache.tomcat.util.buf.StringCache.reset()  At StringCache.java:[line 203]
H D ST: Write to static field org.apache.tomcat.util.buf.StringCache.accessCount from instance method org.apache.tomcat.util.buf.StringCache.reset()  At StringCache.java:[line 204]
M D DCN: Do not catch NullPointerException like in org.apache.catalina.mbeans.ContainerMBean.removeValve(String)  At ContainerMBean.java:[line 131]
M V EI: org.apache.jasper.runtime.PageContextImpl.popBody() may expose internal representation by returning PageContextImpl.out  At PageContextImpl.java:[line 573]
M V EI: org.apache.jasper.runtime.PageContextImpl.getRequest() may expose internal representation by returning PageContextImpl.request  At PageContextImpl.java:[line 436]
M V EI: org.apache.jasper.runtime.PageContextImpl.getELContext() may expose internal representation by returning PageContextImpl.elContext  At PageContextImpl.java:[line 725]
M V EI2: org.apache.jasper.runtime.PageContextImpl.initialize(Servlet, ServletRequest, ServletResponse, String, boolean, int, boolean) may expose internal representation by storing an externally mutable object into PageContextImpl.response  At PageContextImpl.java:[line 127]
M V EI: org.apache.jasper.runtime.PageContextImpl.getSession() may expose internal representation by returning PageContextImpl.session  At PageContextImpl.java:[line 421]
M V EI: org.apache.jasper.runtime.PageContextImpl.getResponse() may expose internal representation by returning PageContextImpl.response  At PageContextImpl.java:[line 441]
M V EI2: org.apache.jasper.runtime.PageContextImpl.initialize(Servlet, ServletRequest, ServletResponse, String, boolean, int, boolean) may expose internal representation by storing an externally mutable object into PageContextImpl.request  At PageContextImpl.java:[line 126]
M V EI: org.apache.jasper.runtime.PageContextImpl.getOut() may expose internal representation by returning PageContextImpl.out  At PageContextImpl.java:[line 416]
M D SF: Switch statement found in org.apache.tomcat.util.http.LegacyCookieProcessor.processCookieHeader(byte[], int, int, ServerCookies) where one case falls through to the next case  At LegacyCookieProcessor.java:[lines 535-539]
M V EI: org.eclipse.jdt.internal.compiler.ast.FalseLiteral.source() may expose internal representation by returning FalseLiteral.source  At FalseLiteral.java:[line 74]
M V EI2: org.apache.catalina.authenticator.jaspic.CallbackHandlerImpl.setContainer(Container) may expose internal representation by storing an externally mutable object into CallbackHandlerImpl.container  At CallbackHandlerImpl.java:[line 131]
M V EI: org.apache.catalina.authenticator.jaspic.CallbackHandlerImpl.getContainer() may expose internal representation by returning CallbackHandlerImpl.container  At CallbackHandlerImpl.java:[line 125]
M V EI2: new org.apache.catalina.webresources.Cache(StandardRoot) may expose internal representation by storing an externally mutable object into Cache.root  At Cache.java:[line 58]
M V EI2: org.apache.catalina.startup.FailedContext.setParent(Container) may expose internal representation by storing an externally mutable object into FailedContext.parent  At FailedContext.java:[line 107]
M V EI: org.apache.catalina.startup.FailedContext.getParent() may expose internal representation by returning FailedContext.parent  At FailedContext.java:[line 105]
M V EI: org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor.getMsgTxErr() may expose internal representation by returning ThroughputInterceptor.msgTxErr  At ThroughputInterceptor.java:[line 151]
M V EI: org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor.getMsgRxCnt() may expose internal representation by returning ThroughputInterceptor.msgRxCnt  At ThroughputInterceptor.java:[line 141]
M V EI: org.apache.catalina.tribes.group.interceptors.ThroughputInterceptor.getMsgTxCnt() may expose internal representation by returning ThroughputInterceptor.msgTxCnt  At ThroughputInterceptor.java:[line 146]
M V EI: org.apache.catalina.storeconfig.StoreConfigLifecycleListener.getStoreConfig() may expose internal representation by returning StoreConfigLifecycleListener.storeConfig  At StoreConfigLifecycleListener.java:[line 123]
M V EI2: org.apache.catalina.storeconfig.StoreConfigLifecycleListener.setStoreConfig(IStoreConfig) may expose internal representation by storing an externally mutable object into StoreConfigLifecycleListener.storeConfig  At StoreConfigLifecycleListener.java:[line 131]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.Synthetic.getBytes() may expose internal representation by returning Synthetic.bytes  At Synthetic.java:[line 117]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.Synthetic(int, int, byte[], ConstantPool) may expose internal representation by storing an externally mutable object into Synthetic.bytes  At Synthetic.java:[line 61]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.Synthetic.setBytes(byte[]) may expose internal representation by storing an externally mutable object into Synthetic.bytes  At Synthetic.java:[line 125]
H I Dm: Found reliance on default encoding in org.apache.catalina.ssi.SSIExec.process(SSIMediator, String, String[], String[], PrintWriter): new java.io.InputStreamReader(InputStream)  At SSIExec.java:[line 64]
H X LG: Changes to logger could be lost in org.apache.tomcat.jakartaee.MigrationTask.execute()  At MigrationTask.java:[line 68]
M V EI2: org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource.setRegistry(Registry) may expose internal representation by storing an externally mutable object into MbeansDescriptorsDigesterSource.registry  At MbeansDescriptorsDigesterSource.java:[line 133]
M V EI: org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource.loadDescriptors(Registry, String, Object) may expose internal representation by returning MbeansDescriptorsDigesterSource.mbeans  At MbeansDescriptorsDigesterSource.java:[line 147]
M V EI: org.apache.tomcat.dbcp.dbcp2.DriverManagerConnectionFactory.getProperties() may expose internal representation by returning DriverManagerConnectionFactory.properties  At DriverManagerConnectionFactory.java:[line 138]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.DriverManagerConnectionFactory(String, Properties) may expose internal representation by storing an externally mutable object into DriverManagerConnectionFactory.properties  At DriverManagerConnectionFactory.java:[line 73]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.lookup.ConstraintExpressionFormula.inferPolyInvocationType(InferenceContext18, InvocationSite, TypeBinding, MethodBinding) where default case is missing  At ConstraintExpressionFormula.java:[lines 427-432]
M V EI2: org.apache.tomcat.jakartaee.bcel.classfile.LocalVariableTypeTable.setLocalVariableTable(LocalVariable[]) may expose internal representation by storing an externally mutable object into LocalVariableTypeTable.localVariableTypeTable  At LocalVariableTypeTable.java:[line 110]
M V EI: org.apache.tomcat.jakartaee.bcel.classfile.LocalVariableTypeTable.getLocalVariableTypeTable() may expose internal representation by returning LocalVariableTypeTable.localVariableTypeTable  At LocalVariableTypeTable.java:[line 96]
M V EI2: new org.apache.tomcat.jakartaee.bcel.classfile.LocalVariableTypeTable(int, int, LocalVariable[], ConstantPool) may expose internal representation by storing an externally mutable object into LocalVariableTypeTable.localVariableTypeTable  At LocalVariableTypeTable.java:[line 67]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.DelegatingDatabaseMetaData(DelegatingConnection, DatabaseMetaData) may expose internal representation by storing an externally mutable object into DelegatingDatabaseMetaData.databaseMetaData  At DelegatingDatabaseMetaData.java:[line 55]
M V EI2: new org.apache.tomcat.dbcp.dbcp2.DelegatingDatabaseMetaData(DelegatingConnection, DatabaseMetaData) may expose internal representation by storing an externally mutable object into DelegatingDatabaseMetaData.connection  At DelegatingDatabaseMetaData.java:[line 54]
M V EI: org.apache.tomcat.dbcp.dbcp2.DelegatingDatabaseMetaData.getConnection() may expose internal representation by returning DelegatingDatabaseMetaData.connection  At DelegatingDatabaseMetaData.java:[line 235]
M V EI: org.apache.tomcat.dbcp.dbcp2.DelegatingDatabaseMetaData.getDelegate() may expose internal representation by returning DelegatingDatabaseMetaData.databaseMetaData  At DelegatingDatabaseMetaData.java:[line 307]
M V EI2: new org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationEvent(int, ChannelInterceptor, String) may expose internal representation by storing an externally mutable object into NonBlockingCoordinator$CoordinationEvent.interceptor  At NonBlockingCoordinator.java:[line 846]
M V EI: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationEvent.getInterceptor() may expose internal representation by returning NonBlockingCoordinator$CoordinationEvent.interceptor  At NonBlockingCoordinator.java:[line 881]
M V EI2: org.apache.catalina.realm.JAASMemoryLoginModule.initialize(Subject, CallbackHandler, Map, Map) may expose internal representation by storing an externally mutable object into JAASMemoryLoginModule.subject  At JAASMemoryLoginModule.java:[line 231]
M V EI2: org.apache.catalina.realm.JAASMemoryLoginModule.initialize(Subject, CallbackHandler, Map, Map) may expose internal representation by storing an externally mutable object into JAASMemoryLoginModule.sharedState  At JAASMemoryLoginModule.java:[line 233]
M V EI2: org.apache.catalina.realm.JAASMemoryLoginModule.initialize(Subject, CallbackHandler, Map, Map) may expose internal representation by storing an externally mutable object into JAASMemoryLoginModule.options  At JAASMemoryLoginModule.java:[line 234]
M V EI: org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager.getDiscoveredProcessors() may expose internal representation by returning BaseAnnotationProcessorManager._processors  At BaseAnnotationProcessorManager.java:[line 83]
M V EI2: org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager.setOut(PrintWriter) may expose internal representation by storing an externally mutable object into BaseAnnotationProcessorManager._out  At BaseAnnotationProcessorManager.java:[line 119]
M V EI2: org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager.setErr(PrintWriter) may expose internal representation by storing an externally mutable object into BaseAnnotationProcessorManager._err  At BaseAnnotationProcessorManager.java:[line 111]
M D REC: Exception is caught when Exception is not thrown in org.apache.catalina.ant.AbstractCatalinaTask.execute(String, InputStream, String, long)  At AbstractCatalinaTask.java:[line 261]
M V EI2: new org.apache.catalina.core.ApplicationContextFacade(ApplicationContext) may expose internal representation by storing an externally mutable object into ApplicationContextFacade.context  At ApplicationContextFacade.java:[line 84]
M V EI: org.apache.naming.java.javaURLContextFactory.getInitialContext(Hashtable) may expose internal representation by returning javaURLContextFactory.initialContext  At javaURLContextFactory.java:[line 115]
M B Nm: The class name org.apache.naming.java.javaURLContextFactory doesn't start with an upper case letter  At javaURLContextFactory.java:[lines 48-115]
M V EI: org.apache.tomcat.util.modeler.NoDescriptorRegistry.getMBeanServer() may expose internal representation by returning NoDescriptorRegistry.mBeanServer  At NoDescriptorRegistry.java:[line 144]
M V EI: org.apache.tomcat.util.modeler.NoDescriptorRegistry.findManagedBean(String) may expose internal representation by returning NoDescriptorRegistry.defaultMBean  At NoDescriptorRegistry.java:[line 93]
M V EI2: new org.apache.catalina.connector.CoyoteAdapter(Connector) may expose internal representation by storing an externally mutable object into CoyoteAdapter.connector  At CoyoteAdapter.java:[line 95]
M V EI2: new org.apache.catalina.valves.rewrite.Substitution$RewriteRuleBackReferenceElement(Substitution) may expose internal representation by storing an externally mutable object into Substitution$RewriteRuleBackReferenceElement.this$0  At Substitution.java:[line 42]
M V EI2: org.apache.catalina.ha.backend.MultiCastSender.init(HeartbeatListener) may expose internal representation by storing an externally mutable object into MultiCastSender.config  At MultiCastSender.java:[line 46]
M V EI: org.apache.tomcat.util.net.SecureNioChannel.getSslEngine() may expose internal representation by returning SecureNioChannel.sslEngine  At SecureNioChannel.java:[line 890]
M V EI2: new org.apache.tomcat.util.net.SecureNioChannel(SocketBufferHandler, NioEndpoint) may expose internal representation by storing an externally mutable object into SecureNioChannel.endpoint  At SecureNioChannel.java:[line 88]
M D SF: Switch statement found in org.apache.tomcat.util.net.SecureNioChannel.processSNI() where one case falls through to the next case  At SecureNioChannel.java:[lines 279-282]
M V EI: org.eclipse.jdt.internal.compiler.env.IUpdatableModule$AddReads.getTarget() may expose internal representation by returning IUpdatableModule$AddReads.targetModule  At IUpdatableModule.java:[line 103]
M V EI2: new org.eclipse.jdt.internal.compiler.env.IUpdatableModule$AddReads(char[]) may expose internal representation by storing an externally mutable object into IUpdatableModule$AddReads.targetModule  At IUpdatableModule.java:[line 94]
M V EI2: org.apache.catalina.tribes.membership.MembershipProviderBase.setMembershipService(MembershipService) may expose internal representation by storing an externally mutable object into MembershipProviderBase.service  At MembershipProviderBase.java:[line 70]
M V EI2: org.apache.catalina.manager.host.HostManagerServlet.setWrapper(Wrapper) may expose internal representation by storing an externally mutable object into HostManagerServlet.wrapper  At HostManagerServlet.java:[line 157]
M V EI: org.apache.catalina.manager.host.HostManagerServlet.getWrapper() may expose internal representation by returning HostManagerServlet.wrapper  At HostManagerServlet.java:[line 145]
M V EI2: new org.apache.el.MethodExpressionImpl(String, Node, FunctionMapper, VariableMapper, Class, Class[]) may expose internal representation by storing an externally mutable object into MethodExpressionImpl.paramTypes  At MethodExpressionImpl.java:[line 103]
M V EI2: new org.apache.el.MethodExpressionImpl(String, Node, FunctionMapper, VariableMapper, Class, Class[]) may expose internal representation by storing an externally mutable object into MethodExpressionImpl.node  At MethodExpressionImpl.java:[line 99]
M V EI2: new org.apache.el.MethodExpressionImpl(String, Node, FunctionMapper, VariableMapper, Class, Class[]) may expose internal representation by storing an externally mutable object into MethodExpressionImpl.varMapper  At MethodExpressionImpl.java:[line 101]
M V EI2: new org.eclipse.jdt.internal.compiler.tool.EclipseCompilerRequestor(Main, DiagnosticListener, DefaultProblemFactory) may expose internal representation by storing an externally mutable object into EclipseCompilerRequestor.problemFactory  At EclipseCompilerRequestor.java:[line 34]
M D REC: Exception is caught when Exception is not thrown in org.apache.catalina.ant.jmx.JMXAccessorConditionBase.accessJMXValue()  At JMXAccessorConditionBase.java:[line 176]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.TryStatement.generateCode(BlockScope, CodeStream) where one case falls through to the next case  At TryStatement.java:[lines 754-757]
M D SF: Switch statement found in org.eclipse.jdt.internal.compiler.ast.TryStatement.generateCode(BlockScope, CodeStream) where default case is missing  At TryStatement.java:[lines 673-691]
M V EI: org.apache.catalina.filters.RestCsrfPreventionFilter.getPathsAcceptingParams() may expose internal representation by returning RestCsrfPreventionFilter.pathsAcceptingParams  At RestCsrfPreventionFilter.java:[line 260]
M B ES: Comparison of String objects using == or != in org.apache.tomcat.jakartaee.TextConverter.convert(String, InputStream, OutputStream, EESpecProfile)  At TextConverter.java:[line 74]
M V EI: org.apache.tomcat.util.digester.RulesBase.getDigester() may expose internal representation by returning RulesBase.digester  At RulesBase.java:[line 72]
M V EI2: org.apache.tomcat.util.digester.RulesBase.setDigester(Digester) may expose internal representation by storing an externally mutable object into RulesBase.digester  At RulesBase.java:[line 83]
M V EI: org.apache.tomcat.util.digester.RulesBase.rules() may expose internal representation by returning RulesBase.rules  At RulesBase.java:[line 177]
M V EI2: org.apache.tomcat.jdbc.pool.interceptor.ResetAbandonedTimer.reset(ConnectionPool, PooledConnection) may expose internal representation by storing an externally mutable object into ResetAbandonedTimer.pcon  At ResetAbandonedTimer.java:[line 54]
M D ST: Write to static field org.eclipse.jdt.internal.compiler.util.JRTUtil.MODULE_TO_LOAD from instance method org.eclipse.jdt.internal.compiler.util.JrtFileSystem.initialize(File)  At JRTUtil.java:[line 371]
M V DP: org.eclipse.jdt.internal.compiler.util.JrtFileSystem.initialize(File) creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block  At JRTUtil.java:[line 374]
M D UwF: Unwritten public or protected field: org.apache.tomcat.jni.Sockaddr.hostname  At AprEndpoint.java:[line 225]
M D UwF: Unwritten public or protected field: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo.exceptionDuringDecode  At BinaryTypeBinding.java:[line 190]
M D UwF: Unwritten public or protected field: org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.stackDepthMarkers  At StackMapFrameCodeStream.java:[line 344]
M D UwF: Unwritten public or protected field: org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream.stackMarkers  At StackMapFrameCodeStream.java:[line 347]
M C UwF: Unwritten field: org.eclipse.jdt.internal.compiler.tool.JrtFileSystem$JrtFileObject.module  At JrtFileSystem.java:[line 157]
M C UwF: Field only ever set to null: org.eclipse.jdt.internal.compiler.ast.AllocationExpression.outerInferenceContext  At AllocationExpression.java:[line 809]
M D UrF: Unread public/protected field: org.apache.el.parser.ELParserTokenManager.debugStream  At ELParserTokenManager.java:[line 13]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.tagSourceEnd  In JavadocMessageSend.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.CompilationResult.totalUnitsKnown  At CompilationResult.java:[line 96]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.SingleNameReference.isLabel  In SingleNameReference.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.inode  In FileInfo.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.csize  In FileInfo.java
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.tagSourceEnd  In JavadocArrayQualifiedTypeReference.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.size  In FileInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.opensCount  At ModuleInfo.java:[line 189]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.localIndex  In StackMapFrame.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.device  In FileInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.restrictedIdentifierStart  At TypeDeclaration.java:[line 75]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.lookup.ProblemBinding.searchType  At ProblemBinding.java:[line 38]
M P SIC: Should org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo$PackageExportInfo be a _static_ inner class?  At ModuleInfo.java:[lines 301-331]
M D UrF: Unread public/protected field: org.apache.tomcat.jdbc.pool.FairBlockingQueue$ItemFuture.canceled  At FairBlockingQueue.java:[line 447]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.atime  In FileInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.parser.TypeConverter.has14_Compliance  At TypeConverter.java:[line 49]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.ModuleDeclaration.sourcePositions  At ModuleDeclaration.java:[line 85]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.tagSourceEnd  At JavadocParser.java:[line 226]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.CompilationResult.hasAnnotations  At CompilationResult.java:[line 70]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.filetype  In FileInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.parser.Scanner.scanningFloatLiteral  At Scanner.java:[line 87]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference.packageBinding  At JavadocSingleTypeReference.java:[line 84]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.CompilationResult.unitIndex  At CompilationResult.java:[line 95]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.endPart2Position  At Parser.java:[line 11063]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.Sockaddr.next  In Sockaddr.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.TryStatement.enclosingSwitchExpression  At Parser.java:[line 10015]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.lookup.MethodScope.isPropagatingInnerClassEmulation  In MethodScope.java
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.codegen.StackMapFrame.tagBits  In StackMapFrame.java
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.tagSourceStart  In JavadocAllocationExpression.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.RequiresStatement.modifiersSourceStart  At Parser.java:[line 5864]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.pool  In FileInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.impl.CompilerOptions.intendedDefaultNonNullness  At CompilerOptions.java:[line 1582]
M P UrF: Unread field: org.eclipse.jdt.internal.compiler.ast.SwitchExpression.hiddenYieldResolvedPosition  At SwitchExpression.java:[line 62]
M P UrF: Unread field: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo$PackageExportInfo.modifiers  At ModuleInfo.java:[line 170]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.lookup.RecordComponentBinding.declaringScope  In RecordComponentBinding.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.ImportReference.declarationEnd  At RecoveredImport.java:[line 62]
M P UrF: Unread field: org.apache.tomcat.util.json.JSONParserTokenManager.image  At JSONParserTokenManager.java:[line 865]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.LambdaExpression.hasParentheses  At Parser.java:[line 9003]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.CompilationResult.checkSecondaryTypes  At CompilationResult.java:[line 81]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.complianceLevel  At AbstractCommentParser.java:[line 129]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.ModuleDeclaration.bodyEnd  At Parser.java:[line 6294]
M P UrF: Unread field: org.apache.tomcat.util.json.JSONParserTokenManager.lengthOfMatch  At JSONParserTokenManager.java:[line 742]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.Sockaddr.servname  In Sockaddr.java
M P UrF: Unread field: org.apache.el.parser.ELParserTokenManager.lengthOfMatch  At ELParserTokenManager.java:[line 2185]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.AllocationExpression.inferredReturnType  At AllocationExpression.java:[line 594]
M P SIC: Should org.eclipse.jdt.internal.compiler.apt.util.JrtFileSystem$JrtFileObject be a _static_ inner class?  At JrtFileSystem.java:[lines 143-243]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.tagSourceStart  In JavadocMessageSend.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.Sockaddr.pool  In Sockaddr.java
M P SIC: Should org.eclipse.jdt.internal.compiler.tool.JrtFileSystem$JrtFileObject be a _static_ inner class?  At JrtFileSystem.java:[lines 143-242]
M D UrF: Unread public/protected field: org.apache.tomcat.util.json.JSONParserTokenManager.debugStream  At JSONParserTokenManager.java:[line 28]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.ModuleReference.sourcePositions  At ModuleReference.java:[line 29]
M P UrF: Unread field: org.eclipse.jdt.internal.compiler.parser.Scanner.inCondition  At Scanner.java:[line 118]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.protection  In FileInfo.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.user  In FileInfo.java
M P SS: Unread field: org.apache.coyote.http2.Http2UpgradeHandler$PingManager.pingIntervalNano; should this field be static?  At Http2UpgradeHandler.java:[line 1921]
M P SIC: Should org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo$ServiceInfo be a _static_ inner class?  At ModuleInfo.java:[lines 333-343]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.parser.TypeConverter.problemReporter  At TypeConverter.java:[line 47]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.CompilationResult.rootReferences  At CompilationUnitScope.java:[line 907]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.mtime  In FileInfo.java
M P UrF: Unread field: org.eclipse.jdt.internal.compiler.ast.TypeReference$AnnotationCollector.dimensions  At TypeReference.java:[line 185]
M P UrF: Unread field: org.eclipse.jdt.internal.compiler.ast.TypeReference$AnnotationCollector.annotationsOnDimensions  At TypeReference.java:[line 179]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.typeArgumentsSourceStart  At Parser.java:[line 4236]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.lookup.BlockScope.blockStatement  At ForeachStatement.java:[line 478]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.ModuleStatement.declarationEnd  At RecoveredModuleStatement.java:[line 60]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.codegen.AnnotationContext.wildcard  At TypeReference.java:[line 203]
M P SIC: Should org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$Jsr199ProblemWrapper be a _static_ inner class?  At EclipseCompilerImpl.java:[lines 810-901]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.IntLiteral.value  At IntLiteral.java:[line 66]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.name  In FileInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.ModuleDeclaration.tokens  At ModuleDeclaration.java:[line 83]
M D UrF: Unread public/protected field: org.apache.tomcat.jdbc.pool.MultiLockFairBlockingQueue$ItemFuture.canceled  At MultiLockFairBlockingQueue.java:[line 446]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.fname  In FileInfo.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.filehand  In FileInfo.java
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.batch.Main.lineCount0  In Main.java
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference.tagSourceStart  In JavadocArrayQualifiedTypeReference.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.group  In FileInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.CompilationResult.qualifiedReferences  At CompilationUnitScope.java:[line 895]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference.packageBinding  At JavadocQualifiedTypeReference.java:[line 57]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding.inferenceContext  At InferenceContext18.java:[line 1739]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser.javadocTextStart  At AbstractCommentParser.java:[line 184]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.parser.Scanner.insideRecovery  At Scanner.java:[line 226]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.valid  In FileInfo.java
M P UrF: Unread field: org.eclipse.jdt.internal.compiler.ast.TypeReference$AnnotationCollector.recordComponentBinding  At TypeReference.java:[line 192]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.comments  In CompilationUnitDeclaration.java
M P UrF: Unread field: org.apache.tomcat.util.json.JSONParser.trace_indent  At JSONParser.java:[line 639]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.CompilationResult.hasInconsistentToplevelHierarchies  At CompilationResult.java:[line 78]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference.tagSourceStart  At JavadocParser.java:[line 225]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo.version  At ModuleInfo.java:[line 130]
M P SIC: Should org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo$ModuleReferenceInfo be a _static_ inner class?  At ModuleInfo.java:[lines 268-298]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.util.JrtFileSystemWithOlderRelease.modulePath  In JRTUtil.java
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.nlink  In FileInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.parser.RecoveredMethod.discardBody  At RecoveredMethod.java:[line 60]
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.CompilationResult.simpleNameReferences  At CompilationUnitScope.java:[line 901]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall.implicitArguments  In ExplicitConstructorCall.java
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.modifiersSourceStart  In AbstractMethodDeclaration.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.tool.EclipseCompiler.diagnosticListener  At EclipseCompiler.java:[line 84]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression.tagSourceEnd  In JavadocAllocationExpression.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.SwitchStatement.explicitDeclarations  At Parser.java:[line 9689]
M P UrF: Unread field: org.eclipse.jdt.internal.compiler.classfmt.ModuleInfo$ModuleReferenceInfo.required_version  At ModuleInfo.java:[line 153]
M D UuF: Unused public or protected field: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo.CoverageTestId  In UnconditionalFlowInfo.java
M D UrF: Unread public/protected field: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration.endPart1Position  At Parser.java:[line 11062]
M D UuF: Unused public or protected field: org.apache.tomcat.jni.FileInfo.ctime  In FileInfo.java
M C MF: Field NotificationInfo.info masks field in superclass org.apache.tomcat.util.modeler.FeatureInfo  In NotificationInfo.java
M V MS: org.apache.tomcat.jni.SSLContext.DEFAULT_SESSION_ID_CONTEXT is a mutable array  At SSLContext.java:[line 29]
M V MS: org.eclipse.jdt.internal.compiler.util.SuffixConstants.SUFFIX_class is a mutable array  At SuffixConstants.java:[line 29]
M V MS: org.eclipse.jdt.internal.compiler.util.SuffixConstants.SUFFIX_CLASS is a mutable array  At SuffixConstants.java:[line 30]
M V MS: org.eclipse.jdt.internal.compiler.util.SuffixConstants.SUFFIX_java is a mutable array  At SuffixConstants.java:[line 31]
M V MS: org.eclipse.jdt.internal.compiler.util.SuffixConstants.SUFFIX_JAVA should be moved out of an interface and made package protected  At SuffixConstants.java:[line 32]
M V MS: org.apache.tomcat.jdbc.pool.interceptor.AbstractCreateStatementInterceptor.STATEMENT_TYPES should be package protected  At AbstractCreateStatementInterceptor.java:[line 42]
M V MS: org.apache.tomcat.jdbc.pool.interceptor.AbstractCreateStatementInterceptor.EXECUTE_TYPES should be package protected  At AbstractCreateStatementInterceptor.java:[line 50]
M V MS: org.apache.tomcat.jdbc.pool.interceptor.AbstractCreateStatementInterceptor.constructors should be package protected  At AbstractCreateStatementInterceptor.java:[line 55]
M V MS: org.apache.el.parser.ELParserConstants.tokenImage should be moved out of an interface and made package protected  At ELParserConstants.java:[line 136]
M V MS: org.apache.tomcat.jni.Library.TCN_MAJOR_VERSION isn't final and cannot be protected from malicious code  At Library.java:[line 118]
M V MS: org.apache.tomcat.jni.Library.TCN_MINOR_VERSION isn't final and cannot be protected from malicious code  At Library.java:[line 120]
M V MS: org.apache.tomcat.jni.Library.TCN_PATCH_VERSION isn't final and cannot be protected from malicious code  At Library.java:[line 122]
M V MS: org.apache.tomcat.jni.Library.APR_MAJOR_VERSION should be package protected  At Library.java:[line 126]
M V MS: org.apache.tomcat.jni.Library.APR_HAVE_IPV6 isn't final and cannot be protected from malicious code  At Library.java:[line 141]
M V MS: org.apache.tomcat.jni.Library.APR_HAS_THREADS should be package protected  At Library.java:[line 145]
M V MS: org.apache.tomcat.jni.Library.APR_HAS_SENDFILE isn't final and cannot be protected from malicious code  At Library.java:[line 147]
M V MS: org.apache.tomcat.jni.Library.APR_HAS_RANDOM isn't final and cannot be protected from malicious code  At Library.java:[line 153]
M V MS: org.apache.tomcat.jni.Library.APR_HAS_SO_ACCEPTFILTER isn't final and cannot be protected from malicious code  At Library.java:[line 159]
M V MS: org.apache.tomcat.jni.Library.APR_HAVE_UNIX isn't final and cannot be protected from malicious code  At Library.java:[line 199]
M V MS: org.apache.tomcat.util.json.JSONParserConstants.tokenImage should be moved out of an interface and made package protected  At JSONParserConstants.java:[line 90]
M V MS: org.eclipse.jdt.internal.compiler.parser.ScannerHelper.Bits should be package protected  At ScannerHelper.java:[line 27]
M V MS: org.eclipse.jdt.internal.compiler.parser.ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES is a mutable array  At ScannerHelper.java:[line 54]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.SyntheticName is a mutable array  At AttributeNamesConstants.java:[line 22]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.ConstantValueName is a mutable array  At AttributeNamesConstants.java:[line 23]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.LineNumberTableName is a mutable array  At AttributeNamesConstants.java:[line 24]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.LocalVariableTableName is a mutable array  At AttributeNamesConstants.java:[line 25]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.InnerClassName is a mutable array  At AttributeNamesConstants.java:[line 26]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.CodeName is a mutable array  At AttributeNamesConstants.java:[line 27]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.ExceptionsName is a mutable array  At AttributeNamesConstants.java:[line 28]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.SourceName is a mutable array  At AttributeNamesConstants.java:[line 29]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.DeprecatedName is a mutable array  At AttributeNamesConstants.java:[line 30]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.SignatureName is a mutable array  At AttributeNamesConstants.java:[line 31]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.LocalVariableTypeTableName is a mutable array  At AttributeNamesConstants.java:[line 32]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.EnclosingMethodName is a mutable array  At AttributeNamesConstants.java:[line 33]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.ModuleName is a mutable array  At AttributeNamesConstants.java:[line 34]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.ModuleMainClass is a mutable array  At AttributeNamesConstants.java:[line 35]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.ModulePackages is a mutable array  At AttributeNamesConstants.java:[line 36]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.AnnotationDefaultName is a mutable array  At AttributeNamesConstants.java:[line 37]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.RuntimeInvisibleAnnotationsName is a mutable array  At AttributeNamesConstants.java:[line 38]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.RuntimeVisibleAnnotationsName is a mutable array  At AttributeNamesConstants.java:[line 39]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.RuntimeInvisibleParameterAnnotationsName is a mutable array  At AttributeNamesConstants.java:[line 40]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.RuntimeVisibleParameterAnnotationsName is a mutable array  At AttributeNamesConstants.java:[line 41]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.StackMapTableName is a mutable array  At AttributeNamesConstants.java:[line 42]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.InconsistentHierarchy is a mutable array  At AttributeNamesConstants.java:[line 43]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.VarargsName is a mutable array  At AttributeNamesConstants.java:[line 44]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.StackMapName is a mutable array  At AttributeNamesConstants.java:[line 45]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.MissingTypesName is a mutable array  At AttributeNamesConstants.java:[line 46]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.BootstrapMethodsName is a mutable array  At AttributeNamesConstants.java:[line 47]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.RuntimeVisibleTypeAnnotationsName is a mutable array  At AttributeNamesConstants.java:[line 49]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.RuntimeInvisibleTypeAnnotationsName is a mutable array  At AttributeNamesConstants.java:[line 50]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.MethodParametersName is a mutable array  At AttributeNamesConstants.java:[line 52]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.NestHost is a mutable array  At AttributeNamesConstants.java:[line 54]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.NestMembers is a mutable array  At AttributeNamesConstants.java:[line 55]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.RecordClass is a mutable array  At AttributeNamesConstants.java:[line 57]
M V MS: org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants.PermittedSubclasses is a mutable array  At AttributeNamesConstants.java:[line 58]
M V MS: org.eclipse.jdt.core.compiler.CharOperation.COMMA_SEPARATOR is a mutable array  At CharOperation.java:[line 58]
H V MS: org.apache.el.parser.ParseException.EOL isn't final but should be  At ParseException.java:[line 27]
H V MS: org.eclipse.jdt.internal.compiler.lookup.Binding.ANY_EXCEPTION is a mutable array  At Binding.java:[line 61]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_DEPRECATED should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 27]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_PARAM should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 28]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_RETURN is a mutable array  At JavadocTagConstants.java:[line 29]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_THROWS should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 30]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_EXCEPTION should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 31]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_SEE should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 32]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_LINK should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 33]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_LINKPLAIN should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 34]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_INHERITDOC should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 35]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_VALUE should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 36]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_AUTHOR should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 37]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_CODE should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 38]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_DOC_ROOT should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 39]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_LITERAL should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 40]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_SERIAL should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 41]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_SERIAL_DATA should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 42]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_SERIAL_FIELD should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 43]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_SINCE should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 44]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_VERSION should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 45]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_CATEGORY should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 46]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_SYSTEM_PROPERTY should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 47]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_USES should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 48]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_PROVIDES should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 49]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_HIDDEN should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 50]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_INDEX should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 51]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_SUMMARY should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 52]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_API_NOTE should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 53]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_IMPL_SPEC should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 54]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_IMPL_NOTE should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 55]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.TAG_NAMES should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 121]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.HREF_TAG should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 167]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.BLOCK_TAGS should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 171]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.INLINE_TAGS should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 207]
M V MS: org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants.JAVADOC_TAG_TYPE should be moved out of an interface and made package protected  At JavadocTagConstants.java:[line 250]
M V MS: org.apache.catalina.util.Strftime.translate is a mutable collection which should be package protected  At Strftime.java:[line 51]
M V MS: org.apache.el.parser.ELParserTreeConstants.jjtNodeName should be moved out of an interface and made package protected  At ELParserTreeConstants.java:[line 51]
M V MS: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding.CONVERSIONS should be package protected  At BaseTypeBinding.java:[line 29]
M V MS: org.apache.tomcat.dbcp.dbcp2.Utils.DISCONNECTION_SQL_CODES is a mutable collection which should be package protected  At Utils.java:[line 67]
M V MS: org.apache.catalina.tribes.Member.SHUTDOWN_PAYLOAD is a mutable array  At Member.java:[line 37]
H V MS: org.apache.tomcat.util.json.ParseException.EOL isn't final but should be  At ParseException.java:[line 43]
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_unresolvedProblem isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_unresolvedProblems isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_request isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_loadBinary isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_process isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_write isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_done isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_units isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_unit isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_internalError isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_beginningToCompile isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.compilation_processing isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.output_isFile isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.output_notValidAll isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.output_notValid isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.problem_noSourceInformation isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.problem_atLine isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.abort_invalidAttribute isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.abort_invalidExceptionAttribute isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.abort_invalidOpcode isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.abort_missingCode isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.abort_againstSourceModel isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.abort_externaAnnotationFile isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_incorrectPath isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_moveFiles isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_syntaxRecovery isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_regularParse isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_missingFile isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_corruptedFile isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_endOfFile isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_endOfConstructor isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_endOfMethod isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.parser_endOfInitializer isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.ast_missingCode isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.constant_cannotCastedInto isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.constant_cannotConvertedTo isn't final but should be  In Messages.java
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.text_block isn't final but should be  At JavaFeature.java:[line 37]
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.pattern_matching_instanceof isn't final but should be  At JavaFeature.java:[line 42]
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.records isn't final but should be  At JavaFeature.java:[line 47]
H V MS: org.eclipse.jdt.internal.compiler.util.Messages.sealed_types isn't final but should be  At JavaFeature.java:[line 52]
M V MS: org.apache.el.parser.ELParserTokenManager.jjstrLiteralImages should be package protected  At ELParserTokenManager.java:[line 1989]
M V MS: org.apache.el.parser.ELParserTokenManager.jjnewLexState should be package protected  At ELParserTokenManager.java:[line 2313]
M V MS: org.apache.tomcat.util.json.JSONParserTokenManager.jjstrLiteralImages should be package protected  At JSONParserTokenManager.java:[line 620]
H V MS: org.eclipse.jdt.internal.compiler.impl.Constant.NotAConstantList is a mutable array  At Constant.java:[line 24]
M V MS: org.apache.tomcat.util.http.fileupload.MultipartStream.HEADER_SEPARATOR should be package protected  At MultipartStream.java:[line 187]
M V MS: org.apache.tomcat.util.http.fileupload.MultipartStream.FIELD_SEPARATOR should be package protected  At MultipartStream.java:[line 193]
M V MS: org.apache.tomcat.util.http.fileupload.MultipartStream.STREAM_TERMINATOR should be package protected  At MultipartStream.java:[line 199]
M V MS: org.apache.tomcat.util.http.fileupload.MultipartStream.BOUNDARY_PREFIX should be package protected  At MultipartStream.java:[line 204]
M V MS: org.eclipse.jdt.internal.compiler.impl.CompilerOptions.tolerateIllegalAmbiguousVarargsInvocation isn't final and cannot be protected from malicious code  In CompilerOptions.java
M V MS: org.eclipse.jdt.internal.compiler.ast.OperatorExpression.OperatorSignatures should be both final and package protected  At OperatorExpression.java:[line 23]
M V MS: org.apache.tomcat.util.net.SSLHostConfig.SSL_PROTO_ALL_SET is a mutable collection which should be package protected  At SSLHostConfig.java:[line 56]
M V MS: org.apache.tomcat.util.net.TLSClientHelloExtractor.USE_TLS_RESPONSE should be both final and package protected  At TLSClientHelloExtractor.java:[line 61]
M V MS: org.apache.catalina.tribes.membership.MemberImpl.TRIBES_MBR_BEGIN should be package protected  At MemberImpl.java:[line 37]
M V MS: org.apache.catalina.tribes.membership.MemberImpl.TRIBES_MBR_END should be package protected  At MemberImpl.java:[line 38]
M V MS: org.apache.tomcat.util.digester.Digester.propertySources should be package protected  At Digester.java:[line 115]
H V MS: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.samProblemBinding isn't final but should be  At ReferenceBinding.java:[line 117]
M V MS: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.UNNAMED is a mutable array  At ModuleBinding.java:[line 54]
M V MS: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.ALL_UNNAMED should be package protected  At ModuleBinding.java:[line 56]
M V MS: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.ANY is a mutable array  At ModuleBinding.java:[line 58]
M V MS: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.ANY_NAMED is a mutable array  At ModuleBinding.java:[line 60]
M V MS: org.eclipse.jdt.internal.compiler.lookup.ModuleBinding.UNOBSERVABLE is a mutable array  At ModuleBinding.java:[line 62]
H V MS: org.eclipse.jdt.internal.compiler.lookup.Scope.NOT_REDUNDANT isn't final but should be  At Scope.java:[line 87]
H V MS: org.eclipse.jdt.internal.compiler.ast.Expression.NO_EXPRESSIONS isn't final but should be  At Expression.java:[line 82]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Append should be package protected  At ConstantPool.java:[line 69]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ArrayCopy should be package protected  At ConstantPool.java:[line 72]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ArrayCopySignature should be package protected  At ConstantPool.java:[line 73]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.booleanBooleanSignature should be package protected  At ConstantPool.java:[line 76]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.BooleanConstrSignature should be package protected  At ConstantPool.java:[line 77]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.BOOLEANVALUE_BOOLEAN_METHOD_NAME should be package protected  At ConstantPool.java:[line 78]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.BOOLEANVALUE_BOOLEAN_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 79]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.byteByteSignature should be package protected  At ConstantPool.java:[line 80]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ByteConstrSignature should be package protected  At ConstantPool.java:[line 81]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.BYTEVALUE_BYTE_METHOD_NAME should be package protected  At ConstantPool.java:[line 82]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.BYTEVALUE_BYTE_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 83]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.charCharacterSignature should be package protected  At ConstantPool.java:[line 84]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.CharConstrSignature should be package protected  At ConstantPool.java:[line 85]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.CHARVALUE_CHARACTER_METHOD_NAME should be package protected  At ConstantPool.java:[line 86]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.CHARVALUE_CHARACTER_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 87]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Clinit is a mutable array  At ConstantPool.java:[line 88]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.DefaultConstructorSignature should be package protected  At ConstantPool.java:[line 89]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ClinitSignature is a mutable array  At ConstantPool.java:[line 90]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Close is a mutable array  At ConstantPool.java:[line 91]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.CloseSignature should be package protected  At ConstantPool.java:[line 92]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.DesiredAssertionStatus should be package protected  At ConstantPool.java:[line 93]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.DesiredAssertionStatusSignature should be package protected  At ConstantPool.java:[line 94]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.DoubleConstrSignature should be package protected  At ConstantPool.java:[line 95]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.doubleDoubleSignature should be package protected  At ConstantPool.java:[line 96]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.DOUBLEVALUE_DOUBLE_METHOD_NAME should be package protected  At ConstantPool.java:[line 97]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.DOUBLEVALUE_DOUBLE_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 98]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.EnumName is a mutable array  At ConstantPool.java:[line 99]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.EnumOrdinal is a mutable array  At ConstantPool.java:[line 100]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.FloatConstrSignature should be package protected  At ConstantPool.java:[line 103]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.floatFloatSignature should be package protected  At ConstantPool.java:[line 104]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.FLOATVALUE_FLOAT_METHOD_NAME should be package protected  At ConstantPool.java:[line 105]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.FLOATVALUE_FLOAT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 106]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ForName should be package protected  At ConstantPool.java:[line 107]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ForNameSignature should be package protected  At ConstantPool.java:[line 108]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_BOOLEAN_METHOD_NAME should be package protected  At ConstantPool.java:[line 109]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_BOOLEAN_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 110]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_BYTE_METHOD_NAME should be package protected  At ConstantPool.java:[line 111]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_BYTE_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 112]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_CHAR_METHOD_NAME should be package protected  At ConstantPool.java:[line 113]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_CHAR_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 114]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_DOUBLE_METHOD_NAME should be package protected  At ConstantPool.java:[line 115]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_DOUBLE_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 116]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_FLOAT_METHOD_NAME should be package protected  At ConstantPool.java:[line 117]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_FLOAT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 118]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_INT_METHOD_NAME should be package protected  At ConstantPool.java:[line 119]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_INT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 120]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_LONG_METHOD_NAME should be package protected  At ConstantPool.java:[line 121]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_LONG_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 122]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_OBJECT_METHOD_NAME should be package protected  At ConstantPool.java:[line 123]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_OBJECT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 124]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_SHORT_METHOD_NAME should be package protected  At ConstantPool.java:[line 125]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GET_SHORT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 126]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetClass should be package protected  At ConstantPool.java:[line 127]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetClassSignature should be package protected  At ConstantPool.java:[line 128]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GETDECLAREDCONSTRUCTOR_NAME should be package protected  At ConstantPool.java:[line 133]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GETDECLAREDCONSTRUCTOR_SIGNATURE should be package protected  At ConstantPool.java:[line 134]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GETDECLAREDFIELD_NAME should be package protected  At ConstantPool.java:[line 136]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GETDECLAREDFIELD_SIGNATURE should be package protected  At ConstantPool.java:[line 137]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GETDECLAREDMETHOD_NAME should be package protected  At ConstantPool.java:[line 138]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GETDECLAREDMETHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 139]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetMessage should be package protected  At ConstantPool.java:[line 140]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetMessageSignature should be package protected  At ConstantPool.java:[line 141]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.HasNext should be package protected  At ConstantPool.java:[line 142]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.HasNextSignature should be package protected  At ConstantPool.java:[line 143]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Init is a mutable array  At ConstantPool.java:[line 144]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.IntConstrSignature should be package protected  At ConstantPool.java:[line 145]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ITERATOR_NAME should be package protected  At ConstantPool.java:[line 146]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ITERATOR_SIGNATURE should be package protected  At ConstantPool.java:[line 147]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Intern should be package protected  At ConstantPool.java:[line 148]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.InternSignature should be package protected  At ConstantPool.java:[line 149]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.IntIntegerSignature should be package protected  At ConstantPool.java:[line 150]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.INTVALUE_INTEGER_METHOD_NAME should be package protected  At ConstantPool.java:[line 151]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.INTVALUE_INTEGER_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 152]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.INVOKE_METHOD_METHOD_NAME should be package protected  At ConstantPool.java:[line 153]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.INVOKE_METHOD_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 154]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.IllegalArgumentExceptionConstructorSignature should be package protected  At ConstantPool.java:[line 157]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangAssertionErrorConstantPoolName is a mutable array  At ConstantPool.java:[line 160]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangBooleanConstantPoolName is a mutable array  At ConstantPool.java:[line 161]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangByteConstantPoolName is a mutable array  At ConstantPool.java:[line 162]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangCharacterConstantPoolName is a mutable array  At ConstantPool.java:[line 163]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangClassConstantPoolName is a mutable array  At ConstantPool.java:[line 164]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangClassNotFoundExceptionConstantPoolName is a mutable array  At ConstantPool.java:[line 165]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangClassSignature should be package protected  At ConstantPool.java:[line 166]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangDoubleConstantPoolName is a mutable array  At ConstantPool.java:[line 167]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangEnumConstantPoolName is a mutable array  At ConstantPool.java:[line 168]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangErrorConstantPoolName is a mutable array  At ConstantPool.java:[line 169]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangIncompatibleClassChangeErrorConstantPoolName is a mutable array  At ConstantPool.java:[line 170]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangFloatConstantPoolName is a mutable array  At ConstantPool.java:[line 172]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangIntegerConstantPoolName is a mutable array  At ConstantPool.java:[line 173]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangLongConstantPoolName is a mutable array  At ConstantPool.java:[line 174]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangNoClassDefFoundErrorConstantPoolName is a mutable array  At ConstantPool.java:[line 175]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangNoSuchFieldErrorConstantPoolName is a mutable array  At ConstantPool.java:[line 176]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangObjectConstantPoolName is a mutable array  At ConstantPool.java:[line 177]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVALANGREFLECTACCESSIBLEOBJECT_CONSTANTPOOLNAME should be package protected  At ConstantPool.java:[line 178]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVALANGREFLECTARRAY_CONSTANTPOOLNAME should be package protected  At ConstantPool.java:[line 179]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangReflectConstructorConstantPoolName should be package protected  At ConstantPool.java:[line 180]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangReflectConstructorNewInstanceSignature should be package protected  At ConstantPool.java:[line 181]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVALANGREFLECTFIELD_CONSTANTPOOLNAME is a mutable array  At ConstantPool.java:[line 182]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVALANGREFLECTMETHOD_CONSTANTPOOLNAME is a mutable array  At ConstantPool.java:[line 183]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangShortConstantPoolName is a mutable array  At ConstantPool.java:[line 184]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangStringBufferConstantPoolName is a mutable array  At ConstantPool.java:[line 185]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangStringBuilderConstantPoolName is a mutable array  At ConstantPool.java:[line 186]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangStringConstantPoolName is a mutable array  At ConstantPool.java:[line 187]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangStringSignature is a mutable array  At ConstantPool.java:[line 188]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangObjectSignature should be package protected  At ConstantPool.java:[line 189]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangSystemConstantPoolName should be package protected  At ConstantPool.java:[line 190]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangThrowableConstantPoolName should be package protected  At ConstantPool.java:[line 191]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangIllegalArgumentExceptionConstantPoolName should be package protected  At ConstantPool.java:[line 192]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangVoidConstantPoolName is a mutable array  At ConstantPool.java:[line 193]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaUtilIteratorConstantPoolName is a mutable array  At ConstantPool.java:[line 194]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.LongConstrSignature should be package protected  At ConstantPool.java:[line 195]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.longLongSignature should be package protected  At ConstantPool.java:[line 196]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.LONGVALUE_LONG_METHOD_NAME should be package protected  At ConstantPool.java:[line 197]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.LONGVALUE_LONG_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 198]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Name is a mutable array  At ConstantPool.java:[line 199]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.NewInstance should be package protected  At ConstantPool.java:[line 200]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.NewInstanceSignature should be package protected  At ConstantPool.java:[line 201]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Next should be package protected  At ConstantPool.java:[line 202]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.NextSignature should be package protected  At ConstantPool.java:[line 203]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ObjectConstrSignature should be package protected  At ConstantPool.java:[line 204]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Ordinal should be package protected  At ConstantPool.java:[line 206]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.OrdinalSignature should be package protected  At ConstantPool.java:[line 207]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_BOOLEAN_METHOD_NAME should be package protected  At ConstantPool.java:[line 209]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_BOOLEAN_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 210]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_BYTE_METHOD_NAME should be package protected  At ConstantPool.java:[line 211]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_BYTE_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 212]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_CHAR_METHOD_NAME should be package protected  At ConstantPool.java:[line 213]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_CHAR_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 214]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_DOUBLE_METHOD_NAME should be package protected  At ConstantPool.java:[line 215]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_DOUBLE_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 216]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_FLOAT_METHOD_NAME should be package protected  At ConstantPool.java:[line 217]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_FLOAT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 218]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_INT_METHOD_NAME should be package protected  At ConstantPool.java:[line 219]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_INT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 220]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_LONG_METHOD_NAME should be package protected  At ConstantPool.java:[line 221]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_LONG_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 222]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_OBJECT_METHOD_NAME should be package protected  At ConstantPool.java:[line 223]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_OBJECT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 224]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_SHORT_METHOD_NAME should be package protected  At ConstantPool.java:[line 225]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SET_SHORT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 226]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SETACCESSIBLE_NAME should be package protected  At ConstantPool.java:[line 227]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SETACCESSIBLE_SIGNATURE should be package protected  At ConstantPool.java:[line 228]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ShortConstrSignature should be package protected  At ConstantPool.java:[line 229]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.shortShortSignature should be package protected  At ConstantPool.java:[line 230]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SHORTVALUE_SHORT_METHOD_NAME should be package protected  At ConstantPool.java:[line 231]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.SHORTVALUE_SHORT_METHOD_SIGNATURE should be package protected  At ConstantPool.java:[line 232]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBufferAppendBooleanSignature should be package protected  At ConstantPool.java:[line 233]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBufferAppendCharSignature should be package protected  At ConstantPool.java:[line 234]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBufferAppendDoubleSignature should be package protected  At ConstantPool.java:[line 235]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBufferAppendFloatSignature should be package protected  At ConstantPool.java:[line 236]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBufferAppendIntSignature should be package protected  At ConstantPool.java:[line 237]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBufferAppendLongSignature should be package protected  At ConstantPool.java:[line 238]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBufferAppendObjectSignature should be package protected  At ConstantPool.java:[line 239]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBufferAppendStringSignature should be package protected  At ConstantPool.java:[line 240]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBuilderAppendBooleanSignature should be package protected  At ConstantPool.java:[line 241]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBuilderAppendCharSignature should be package protected  At ConstantPool.java:[line 242]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBuilderAppendDoubleSignature should be package protected  At ConstantPool.java:[line 243]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBuilderAppendFloatSignature should be package protected  At ConstantPool.java:[line 244]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBuilderAppendIntSignature should be package protected  At ConstantPool.java:[line 245]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBuilderAppendLongSignature should be package protected  At ConstantPool.java:[line 246]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBuilderAppendObjectSignature should be package protected  At ConstantPool.java:[line 247]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringBuilderAppendStringSignature should be package protected  At ConstantPool.java:[line 248]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.StringConstructorSignature should be package protected  At ConstantPool.java:[line 249]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.This is a mutable array  At ConstantPool.java:[line 250]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ToString should be package protected  At ConstantPool.java:[line 251]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ToStringSignature should be package protected  At ConstantPool.java:[line 252]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.TYPE should be package protected  At ConstantPool.java:[line 253]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOf is a mutable array  At ConstantPool.java:[line 254]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOfBooleanSignature should be package protected  At ConstantPool.java:[line 255]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOfCharSignature should be package protected  At ConstantPool.java:[line 256]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOfDoubleSignature should be package protected  At ConstantPool.java:[line 257]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOfFloatSignature should be package protected  At ConstantPool.java:[line 258]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOfIntSignature should be package protected  At ConstantPool.java:[line 259]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOfLongSignature should be package protected  At ConstantPool.java:[line 260]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOfObjectSignature should be package protected  At ConstantPool.java:[line 261]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ValueOfStringClassSignature should be package protected  At ConstantPool.java:[line 262]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_ANNOTATION_DOCUMENTED is a mutable array  At ConstantPool.java:[line 263]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_ANNOTATION_ELEMENTTYPE is a mutable array  At ConstantPool.java:[line 264]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_ANNOTATION_RETENTION is a mutable array  At ConstantPool.java:[line 265]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_ANNOTATION_RETENTIONPOLICY is a mutable array  At ConstantPool.java:[line 266]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_ANNOTATION_TARGET is a mutable array  At ConstantPool.java:[line 267]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_DEPRECATED is a mutable array  At ConstantPool.java:[line 268]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_ANNOTATION_INHERITED is a mutable array  At ConstantPool.java:[line 269]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_SAFEVARARGS is a mutable array  At ConstantPool.java:[line 271]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_INVOKE_METHODHANDLE_POLYMORPHICSIGNATURE is a mutable array  At ConstantPool.java:[line 273]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.METAFACTORY is a mutable array  At ConstantPool.java:[line 275]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_INVOKE_LAMBDAMETAFACTORY_METAFACTORY_SIGNATURE is a mutable array  At ConstantPool.java:[line 276]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.ALTMETAFACTORY is a mutable array  At ConstantPool.java:[line 277]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_INVOKE_LAMBDAMETAFACTORY_ALTMETAFACTORY_SIGNATURE is a mutable array  At ConstantPool.java:[line 278]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JavaLangInvokeSerializedLambdaConstantPoolName should be package protected  At ConstantPool.java:[line 281]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetImplMethodName should be package protected  At ConstantPool.java:[line 282]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetImplMethodNameSignature should be package protected  At ConstantPool.java:[line 283]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetImplMethodKind should be package protected  At ConstantPool.java:[line 284]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetImplMethodKindSignature should be package protected  At ConstantPool.java:[line 285]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetFunctionalInterfaceClass should be package protected  At ConstantPool.java:[line 286]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetFunctionalInterfaceClassSignature should be package protected  At ConstantPool.java:[line 287]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetFunctionalInterfaceMethodName should be package protected  At ConstantPool.java:[line 288]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetFunctionalInterfaceMethodNameSignature should be package protected  At ConstantPool.java:[line 289]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetFunctionalInterfaceMethodSignature should be package protected  At ConstantPool.java:[line 290]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetFunctionalInterfaceMethodSignatureSignature should be package protected  At ConstantPool.java:[line 291]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetImplClass should be package protected  At ConstantPool.java:[line 292]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetImplClassSignature should be package protected  At ConstantPool.java:[line 293]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetImplMethodSignature should be package protected  At ConstantPool.java:[line 294]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetImplMethodSignatureSignature should be package protected  At ConstantPool.java:[line 295]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetCapturedArg should be package protected  At ConstantPool.java:[line 296]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.GetCapturedArgSignature should be package protected  At ConstantPool.java:[line 297]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_ANNOTATION_REPEATABLE is a mutable array  At ConstantPool.java:[line 299]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.HashCode should be package protected  At ConstantPool.java:[line 301]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.HashCodeSignature should be package protected  At ConstantPool.java:[line 302]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Equals should be package protected  At ConstantPool.java:[line 303]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.EqualsSignature should be package protected  At ConstantPool.java:[line 304]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.AddSuppressed should be package protected  At ConstantPool.java:[line 305]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.AddSuppressedSignature should be package protected  At ConstantPool.java:[line 306]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.Clone should be package protected  At ConstantPool.java:[line 307]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.CloneSignature should be package protected  At ConstantPool.java:[line 308]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.BOOTSTRAP is a mutable array  At ConstantPool.java:[line 309]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JAVA_LANG_RUNTIME_OBJECTMETHOD_BOOTSTRAP_SIGNATURE is a mutable array  At ConstantPool.java:[line 310]
M V MS: org.eclipse.jdt.internal.compiler.codegen.ConstantPool.JDK_INTERNAL_PREVIEW_FEATURE is a mutable array  At ConstantPool.java:[line 311]
H V MS: org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable.TEST_372319 isn't final but should be  At FakedTrackingVariable.java:[line 89]
H V MS: org.eclipse.jdt.internal.compiler.ast.FunctionalExpression.silentErrorHandlingPolicy isn't final but should be  At FunctionalExpression.java:[line 68]
M V MS: org.eclipse.jdt.internal.compiler.ClassFile.BOOTSTRAP_METHODS should be package protected  At ClassFile.java:[line 192]
M V MS: org.apache.tomcat.jdbc.pool.DataSourceFactory.ALL_PROPERTIES should be package protected  At DataSourceFactory.java:[line 134]
M V MS: org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.TYPE_QUALIFIER_DEFAULT should be package protected  At BinaryTypeBinding.java:[line 95]
M V MS: org.apache.catalina.core.StandardWrapper.DEFAULT_SERVLET_METHODS should be package protected  At StandardWrapper.java:[line 80]
M V MS: org.apache.catalina.core.StandardWrapper.classType should be both final and package protected  At StandardWrapper.java:[line 275]
H V MS: org.eclipse.jdt.internal.compiler.apt.model.Factory.EMPTY_ANNOTATION_MIRRORS isn't final but should be  At Factory.java:[line 79]
H V MS: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.disallowedComponentNames isn't final but should be  At TypeDeclaration.java:[line 100]
M V MS: org.eclipse.jdt.internal.compiler.problem.ProblemHandler.NoArgument should be package protected  At ProblemHandler.java:[line 41]
M V MS: org.eclipse.jdt.internal.compiler.parser.Scanner.TAG_PREFIX should be package protected  At Scanner.java:[line 193]
M V MS: org.eclipse.jdt.internal.compiler.parser.Scanner.IDENTITY_COMPARISON_TAG should be package protected  At Scanner.java:[line 199]
M V MS: org.eclipse.jdt.internal.compiler.parser.RecoveryScanner.FAKE_IDENTIFIER is a mutable array  At RecoveryScanner.java:[line 22]
H V MS: org.eclipse.jdt.internal.compiler.apt.util.Util.LINE_SEPARATOR isn't final but should be  At Util.java:[line 35]
H V MS: org.eclipse.jdt.internal.compiler.tool.Util.LINE_SEPARATOR isn't final but should be  At Util.java:[line 35]
M V MS: org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression.defaultArityMaxStartingValue isn't final but should be  At CombinedBinaryExpression.java:[line 89]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.FALL_THROUGH_TAG should be package protected  At Parser.java:[line 84]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.CASES_OMITTED_TAG should be package protected  At Parser.java:[line 85]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.asb should be package protected  At Parser.java:[line 87]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.asr is a mutable array  At Parser.java:[line 88]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.base_action should be package protected  At Parser.java:[line 91]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.check_table should be package protected  At Parser.java:[line 94]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.in_symb should be package protected  At Parser.java:[line 106]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.lhs is a mutable array  At Scanner.java:[line 5028]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.name is a mutable array  At Scanner.java:[line 5028]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.nasb should be package protected  At Parser.java:[line 111]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.nasr is a mutable array  At Parser.java:[line 112]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.non_terminal_index is a mutable array  At Scanner.java:[line 5028]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.readableName is a mutable array  At Parser.java:[line 116]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.rhs is a mutable array  At Parser.java:[line 118]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.reverse_index is a mutable array  At Parser.java:[line 120]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.recovery_templates_index is a mutable array  At Parser.java:[line 121]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.recovery_templates is a mutable array  At Parser.java:[line 122]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.statements_recovery_filter should be package protected  At Parser.java:[line 123]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.rules_compliance is a mutable array  At Parser.java:[line 125]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.scope_la is a mutable array  At Parser.java:[line 129]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.scope_lhs is a mutable array  At Parser.java:[line 130]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.scope_prefix is a mutable array  At Parser.java:[line 132]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.scope_rhs is a mutable array  At Parser.java:[line 133]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.scope_state is a mutable array  At Parser.java:[line 134]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.scope_state_set is a mutable array  At Parser.java:[line 136]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.scope_suffix is a mutable array  At Parser.java:[line 137]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.term_action should be package protected  At Parser.java:[line 143]
M V MS: org.eclipse.jdt.internal.compiler.parser.Parser.term_check should be package protected  At Parser.java:[line 144]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.terminal_index is a mutable array  At Parser.java:[line 146]
H V MS: org.eclipse.jdt.internal.compiler.parser.Parser.VERBOSE_RECOVERY isn't final but should be  At Parser.java:[line 149]
H V MS: org.eclipse.jdt.internal.compiler.batch.ClasspathJrt.ModulesCache isn't final but should be  At ClasspathJrt.java:[line 52]
H V MS: org.eclipse.jdt.internal.compiler.Compiler.DEBUG isn't final but should be  At Compiler.java:[line 54]
H V MS: org.eclipse.jdt.internal.compiler.Compiler.DebugRequestor isn't final but should be  At Compiler.java:[line 70]
M V MS: org.eclipse.jdt.internal.compiler.batch.ClasspathJmod.CLASSES should be both final and package protected  At ClasspathJmod.java:[line 40]
M V MS: org.eclipse.jdt.internal.compiler.batch.ClasspathJmod.CLASSES_FOLDER should be both final and package protected  At ClasspathJmod.java:[line 41]
H V MS: org.eclipse.jdt.internal.compiler.batch.FileSystem.EMPTY_CLASSPATH isn't final but should be  At FileSystem.java:[line 62]
M V MS: org.apache.catalina.tribes.membership.cloud.AbstractStreamProvider.INSECURE_TRUST_MANAGERS should be package protected  At AbstractStreamProvider.java:[line 48]
M V MS: org.apache.el.util.ReflectionUtil.PRIMITIVE_NAMES should be package protected  At ReflectionUtil.java:[line 43]
M V MS: org.apache.el.util.ReflectionUtil.PRIMITIVES should be package protected  At ReflectionUtil.java:[line 46]
M V MS: org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor.MEMBER_START should be package protected  At StaticMembershipInterceptor.java:[line 43]
M V MS: org.apache.catalina.tribes.group.interceptors.StaticMembershipInterceptor.MEMBER_STOP should be package protected  At StaticMembershipInterceptor.java:[line 47]
M V MS: org.apache.tomcat.jdbc.pool.interceptor.StatementDecoratorInterceptor.RESULTSET_TYPES should be package protected  At StatementDecoratorInterceptor.java:[line 45]
M V MS: org.apache.catalina.storeconfig.ConnectorStoreAppender.replacements is a mutable collection which should be package protected  At ConnectorStoreAppender.java:[line 45]
M V MS: org.apache.catalina.storeconfig.ConnectorStoreAppender.internalExecutorAttributes is a mutable collection which should be package protected  At ConnectorStoreAppender.java:[line 46]
M V MS: org.apache.tomcat.jdbc.pool.interceptor.StatementCache.ALL_TYPES should be package protected  At StatementCache.java:[line 44]
M V MS: org.apache.tomcat.jdbc.pool.interceptor.StatementCache.CALLABLE_TYPE should be package protected  At StatementCache.java:[line 45]
M V MS: org.apache.tomcat.jdbc.pool.interceptor.StatementCache.PREPARED_TYPE should be package protected  At StatementCache.java:[line 46]
M V MS: org.apache.tomcat.dbcp.dbcp2.PoolingDriver.pools is a mutable collection which should be package protected  At PoolingDriver.java:[line 88]
M V MS: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.COORD_HEADER should be package protected  At NonBlockingCoordinator.java:[line 137]
M V MS: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.COORD_REQUEST should be package protected  At NonBlockingCoordinator.java:[line 141]
M V MS: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.COORD_CONF should be package protected  At NonBlockingCoordinator.java:[line 145]
M V MS: org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.COORD_ALIVE should be package protected  At NonBlockingCoordinator.java:[line 150]
M V MS: org.apache.coyote.http11.Constants.ACK_BYTES should be package protected  At Constants.java:[line 108]
M V MS: org.apache.coyote.http11.Constants._200_BYTES should be package protected  At Constants.java:[line 111]
M V MS: org.apache.coyote.http11.Constants._400_BYTES should be package protected  At Constants.java:[line 112]
M V MS: org.apache.coyote.http11.Constants._404_BYTES should be package protected  At Constants.java:[line 113]
M V MS: org.apache.coyote.http11.Constants.HTTP_11_BYTES should be package protected  At Constants.java:[line 156]
M V MS: org.apache.catalina.core.AprLifecycleListener.SSLEngine should be package protected  At AprLifecycleListener.java:[line 84]
M V MS: org.apache.catalina.core.AprLifecycleListener.FIPSMode should be package protected  At AprLifecycleListener.java:[line 85]
M V MS: org.apache.catalina.core.AprLifecycleListener.SSLRandomSeed should be package protected  At AprLifecycleListener.java:[line 86]
M V MS: org.apache.catalina.core.AprLifecycleListener.sslInitialized should be package protected  At AprLifecycleListener.java:[line 87]
M V MS: org.apache.catalina.core.AprLifecycleListener.fipsModeActive should be package protected  At AprLifecycleListener.java:[line 88]
M V MS: org.apache.catalina.tribes.membership.cloud.CloudMembershipService.INITIAL_ID should be package protected  At CloudMembershipService.java:[line 79]
M V MS: org.apache.catalina.startup.ContextConfig.deploymentCount should be package protected  At ContextConfig.java:[line 162]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA is a mutable array  At ConstantPool.java:[line 155]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVAX should be moved out of an interface and made package protected  At TypeConstants.java:[line 43]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.LANG is a mutable array  At ConstantPool.java:[line 155]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.IO should be moved out of an interface and made package protected  At TypeConstants.java:[line 45]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.NIO should be moved out of an interface and made package protected  At TypeConstants.java:[line 46]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UTIL should be moved out of an interface and made package protected  At TypeConstants.java:[line 47]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ZIP should be moved out of an interface and made package protected  At TypeConstants.java:[line 48]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JDK should be moved out of an interface and made package protected  At TypeConstants.java:[line 49]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ANNOTATION should be moved out of an interface and made package protected  At TypeConstants.java:[line 50]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.REFLECT is a mutable array  At ConstantPool.java:[line 155]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.LENGTH should be moved out of an interface and made package protected  At ArrayBinding.java:[line 46]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CLONE is a mutable array  At TypeConstants.java:[line 53]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.EQUALS should be moved out of an interface and made package protected  At TypeConstants.java:[line 54]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.GETCLASS is a mutable array  At TypeConstants.java:[line 55]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.HASHCODE should be moved out of an interface and made package protected  At TypeConstants.java:[line 56]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.TOSTRING should be moved out of an interface and made package protected  At TypeConstants.java:[line 57]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.OBJECT is a mutable array  At TypeConstants.java:[line 58]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.MAIN should be moved out of an interface and made package protected  At TypeConstants.java:[line 59]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SERIALVERSIONUID is a mutable array  At TypeConstants.java:[line 60]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SERIALPERSISTENTFIELDS is a mutable array  At TypeConstants.java:[line 61]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.READRESOLVE is a mutable array  At TypeConstants.java:[line 62]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WRITEREPLACE is a mutable array  At TypeConstants.java:[line 63]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.READOBJECT is a mutable array  At TypeConstants.java:[line 64]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WRITEOBJECT is a mutable array  At TypeConstants.java:[line 65]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CharArray_JAVA_LANG_OBJECT is a mutable array  At TypeConstants.java:[line 66]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CharArray_JAVA_LANG_ENUM is a mutable array  At TypeConstants.java:[line 67]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CharArray_JAVA_LANG_RECORD is a mutable array  At TypeConstants.java:[line 68]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CharArray_JAVA_LANG_RECORD_SLASH is a mutable array  At TypeConstants.java:[line 69]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CharArray_JAVA_LANG_ANNOTATION_ANNOTATION is a mutable array  At TypeConstants.java:[line 70]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CharArray_JAVA_IO_OBJECTINPUTSTREAM is a mutable array  At TypeConstants.java:[line 71]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CharArray_JAVA_IO_OBJECTOUTPUTSTREAM is a mutable array  At TypeConstants.java:[line 72]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CharArray_JAVA_IO_OBJECTSTREAMFIELD is a mutable array  At TypeConstants.java:[line 73]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ANONYM_PREFIX should be moved out of an interface and made package protected  At TypeConstants.java:[line 74]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ANONYM_SUFFIX should be moved out of an interface and made package protected  At TypeConstants.java:[line 75]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_NAME is a mutable array  At TypeConstants.java:[line 76]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_SUPER is a mutable array  At TypeConstants.java:[line 77]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_EXTENDS is a mutable array  At TypeConstants.java:[line 78]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_MINUS should be moved out of an interface and made package protected  At TypeConstants.java:[line 79]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_STAR should be moved out of an interface and made package protected  At TypeConstants.java:[line 80]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_PLUS should be moved out of an interface and made package protected  At TypeConstants.java:[line 81]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_CAPTURE_NAME_PREFIX should be moved out of an interface and made package protected  At TypeConstants.java:[line 82]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_CAPTURE_NAME_SUFFIX should be moved out of an interface and made package protected  At TypeConstants.java:[line 83]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_CAPTURE_SIGNABLE_NAME_SUFFIX should be moved out of an interface and made package protected  At TypeConstants.java:[line 84]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.WILDCARD_CAPTURE should be moved out of an interface and made package protected  At TypeConstants.java:[line 85]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CAPTURE18 should be moved out of an interface and made package protected  At TypeConstants.java:[line 86]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.BYTE is a mutable array  At TypeBinding.java:[line 80]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SHORT is a mutable array  At TypeBinding.java:[line 83]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.INT is a mutable array  At TypeBinding.java:[line 77]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.LONG is a mutable array  At TypeBinding.java:[line 89]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.FLOAT is a mutable array  At TypeBinding.java:[line 92]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DOUBLE is a mutable array  At TypeBinding.java:[line 95]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CHAR is a mutable array  At TypeBinding.java:[line 86]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.BOOLEAN is a mutable array  At TypeBinding.java:[line 98]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.NULL is a mutable array  At TypeConstants.java:[line 95]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.VOID is a mutable array  At TypeConstants.java:[line 96]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.VALUE is a mutable array  At TypeConstants.java:[line 97]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.VALUES is a mutable array  At TypeConstants.java:[line 98]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.VALUEOF is a mutable array  At TypeConstants.java:[line 99]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_SOURCE is a mutable array  At TypeConstants.java:[line 100]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_CLASS is a mutable array  At TypeConstants.java:[line 101]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_RUNTIME is a mutable array  At TypeConstants.java:[line 102]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.TYPE is a mutable array  At TypeConstants.java:[line 105]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_FIELD is a mutable array  At TypeConstants.java:[line 106]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_METHOD is a mutable array  At TypeConstants.java:[line 107]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_PARAMETER is a mutable array  At TypeConstants.java:[line 108]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_CONSTRUCTOR is a mutable array  At TypeConstants.java:[line 109]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_LOCAL_VARIABLE is a mutable array  At TypeConstants.java:[line 110]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_ANNOTATION_TYPE is a mutable array  At TypeConstants.java:[line 111]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_PACKAGE is a mutable array  At TypeConstants.java:[line 112]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ANONYMOUS_METHOD is a mutable array  At ReferenceBinding.java:[line 117]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DESERIALIZE_LAMBDA should be moved out of an interface and made package protected  At TypeConstants.java:[line 114]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.LAMBDA_TYPE is a mutable array  At TypeConstants.java:[line 115]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_MODULE is a mutable array  At TypeConstants.java:[line 116]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.UPPER_RECORD_COMPONENT is a mutable array  At TypeConstants.java:[line 117]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.VAR is a mutable array  At TypeConstants.java:[line 120]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.RECORD_RESTRICTED_IDENTIFIER is a mutable array  At JavaFeature.java:[line 48]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.RECORD_CLASS should be moved out of an interface and made package protected  At TypeConstants.java:[line 123]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.PERMITS is a mutable array  At JavaFeature.java:[line 53]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SEALED is a mutable array  At JavaFeature.java:[line 53]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.TYPE_USE_TARGET is a mutable array  At TypeConstants.java:[line 131]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.TYPE_PARAMETER_TARGET is a mutable array  At TypeConstants.java:[line 132]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG should be moved out of an interface and made package protected  At TypeConstants.java:[line 135]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ECLIPSE should be moved out of an interface and made package protected  At TypeConstants.java:[line 136]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CORE should be moved out of an interface and made package protected  At TypeConstants.java:[line 137]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.RUNTIME should be moved out of an interface and made package protected  At TypeConstants.java:[line 138]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.APACHE should be moved out of an interface and made package protected  At TypeConstants.java:[line 139]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.COMMONS should be moved out of an interface and made package protected  At TypeConstants.java:[line 140]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.LANG3 should be moved out of an interface and made package protected  At TypeConstants.java:[line 141]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.COM should be moved out of an interface and made package protected  At TypeConstants.java:[line 142]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.GOOGLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 143]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JDT should be moved out of an interface and made package protected  At TypeConstants.java:[line 144]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.INTERNAL should be moved out of an interface and made package protected  At TypeConstants.java:[line 145]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.COMPILER should be moved out of an interface and made package protected  At TypeConstants.java:[line 146]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.LOOKUP should be moved out of an interface and made package protected  At TypeConstants.java:[line 147]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.TYPEBINDING should be moved out of an interface and made package protected  At TypeConstants.java:[line 148]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DOM should be moved out of an interface and made package protected  At TypeConstants.java:[line 149]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ITYPEBINDING should be moved out of an interface and made package protected  At TypeConstants.java:[line 150]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SPRING should be moved out of an interface and made package protected  At TypeConstants.java:[line 151]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG should be moved out of an interface and made package protected  At TypeConstants.java:[line 154]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO should be moved out of an interface and made package protected  At TypeConstants.java:[line 155]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION should be moved out of an interface and made package protected  At TypeConstants.java:[line 156]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION_ANNOTATION should be moved out of an interface and made package protected  At TypeConstants.java:[line 157]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ASSERTIONERROR should be moved out of an interface and made package protected  At TypeConstants.java:[line 158]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_CLASS is a mutable array  At TypeConstants.java:[line 159]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_CLASSNOTFOUNDEXCEPTION should be moved out of an interface and made package protected  At TypeConstants.java:[line 160]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_NOSUCHFIELDERROR should be moved out of an interface and made package protected  At TypeConstants.java:[line 161]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_CLONEABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 162]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ENUM should be moved out of an interface and made package protected  At TypeConstants.java:[line 163]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_EXCEPTION should be moved out of an interface and made package protected  At TypeConstants.java:[line 164]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ERROR should be moved out of an interface and made package protected  At TypeConstants.java:[line 165]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ILLEGALARGUMENTEXCEPTION should be moved out of an interface and made package protected  At TypeConstants.java:[line 166]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_INCOMPATIBLECLASSCHANGEERROR should be moved out of an interface and made package protected  At TypeConstants.java:[line 167]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ITERABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 168]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_NOCLASSDEFERROR should be moved out of an interface and made package protected  At TypeConstants.java:[line 169]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_OBJECT is a mutable array  At TypeConstants.java:[line 170]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_RECORD is a mutable array  At TypeConstants.java:[line 171]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_STRING should be moved out of an interface and made package protected  At TypeConstants.java:[line 172]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_STRINGBUFFER should be moved out of an interface and made package protected  At TypeConstants.java:[line 173]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_STRINGBUILDER should be moved out of an interface and made package protected  At TypeConstants.java:[line 174]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_SYSTEM should be moved out of an interface and made package protected  At TypeConstants.java:[line 175]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_RUNTIMEEXCEPTION should be moved out of an interface and made package protected  At TypeConstants.java:[line 176]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_THROWABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 177]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_REFLECT_CONSTRUCTOR should be moved out of an interface and made package protected  At TypeConstants.java:[line 178]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_PRINTSTREAM should be moved out of an interface and made package protected  At TypeConstants.java:[line 179]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_SERIALIZABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 180]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_BYTE should be moved out of an interface and made package protected  At TypeConstants.java:[line 181]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_SHORT should be moved out of an interface and made package protected  At TypeConstants.java:[line 182]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_CHARACTER should be moved out of an interface and made package protected  At TypeConstants.java:[line 183]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_INTEGER should be moved out of an interface and made package protected  At TypeConstants.java:[line 184]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_LONG should be moved out of an interface and made package protected  At TypeConstants.java:[line 185]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_FLOAT should be moved out of an interface and made package protected  At TypeConstants.java:[line 186]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_DOUBLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 187]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_BOOLEAN should be moved out of an interface and made package protected  At TypeConstants.java:[line 188]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_VOID is a mutable array  At TypeConstants.java:[line 189]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_UTIL_COLLECTION should be moved out of an interface and made package protected  At TypeConstants.java:[line 190]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_UTIL_ITERATOR should be moved out of an interface and made package protected  At TypeConstants.java:[line 191]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_UTIL_OBJECTS should be moved out of an interface and made package protected  At TypeConstants.java:[line 192]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_UTIL_LIST should be moved out of an interface and made package protected  At TypeConstants.java:[line 193]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_DEPRECATED is a mutable array  At TypeConstants.java:[line 195]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.FOR_REMOVAL is a mutable array  At TypeConstants.java:[line 196]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SINCE is a mutable array  At TypeConstants.java:[line 197]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ESSENTIAL_API is a mutable array  At TypeConstants.java:[line 198]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION_DOCUMENTED should be moved out of an interface and made package protected  At TypeConstants.java:[line 199]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION_INHERITED should be moved out of an interface and made package protected  At TypeConstants.java:[line 200]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION_REPEATABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 201]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_OVERRIDE should be moved out of an interface and made package protected  At TypeConstants.java:[line 202]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_FUNCTIONAL_INTERFACE should be moved out of an interface and made package protected  At TypeConstants.java:[line 203]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION_RETENTION should be moved out of an interface and made package protected  At TypeConstants.java:[line 204]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_SUPPRESSWARNINGS should be moved out of an interface and made package protected  At TypeConstants.java:[line 205]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION_TARGET should be moved out of an interface and made package protected  At TypeConstants.java:[line 206]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION_RETENTIONPOLICY should be moved out of an interface and made package protected  At TypeConstants.java:[line 207]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_ANNOTATION_ELEMENTTYPE should be moved out of an interface and made package protected  At TypeConstants.java:[line 208]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JDK_INTERNAL_PREVIEW_FEATURE should be moved out of an interface and made package protected  At TypeConstants.java:[line 209]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_REFLECT_FIELD should be moved out of an interface and made package protected  At TypeConstants.java:[line 210]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_REFLECT_METHOD should be moved out of an interface and made package protected  At TypeConstants.java:[line 211]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_CLOSEABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 212]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_OBJECTSTREAMEXCEPTION should be moved out of an interface and made package protected  At TypeConstants.java:[line 213]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_EXTERNALIZABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 214]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_IOEXCEPTION should be moved out of an interface and made package protected  At TypeConstants.java:[line 215]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_OBJECTOUTPUTSTREAM is a mutable array  At TypeConstants.java:[line 216]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_OBJECTINPUTSTREAM is a mutable array  At TypeConstants.java:[line 217]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_NIO_FILE_FILES is a mutable array  At TypeConstants.java:[line 218]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVAX_RMI_CORBA_STUB is a mutable array  At TypeConstants.java:[line 220]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_SAFEVARARGS should be moved out of an interface and made package protected  At TypeConstants.java:[line 226]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.INVOKE should be moved out of an interface and made package protected  At TypeConstants.java:[line 227]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_INVOKE_METHODHANDLE_POLYMORPHICSIGNATURE should be moved out of an interface and made package protected  At TypeConstants.java:[line 228]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_INVOKE_METHODHANDLE_$_POLYMORPHICSIGNATURE should be moved out of an interface and made package protected  At TypeConstants.java:[line 235]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_INVOKE_LAMBDAMETAFACTORY should be moved out of an interface and made package protected  At TypeConstants.java:[line 241]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_INVOKE_SERIALIZEDLAMBDA should be moved out of an interface and made package protected  At TypeConstants.java:[line 242]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_INVOKE_METHODHANDLES should be moved out of an interface and made package protected  At TypeConstants.java:[line 243]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_AUTOCLOSEABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 244]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CLOSE is a mutable array  At TypeConstants.java:[line 245]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_LANG_RUNTIME_OBJECTMETHODS should be moved out of an interface and made package protected  At TypeConstants.java:[line 246]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.GUAVA_CLOSEABLES should be moved out of an interface and made package protected  At TypeConstants.java:[line 258]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.APACHE_IOUTILS should be moved out of an interface and made package protected  At TypeConstants.java:[line 259]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.APACHE_DBUTILS should be moved out of an interface and made package protected  At TypeConstants.java:[line 260]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CLOSE_QUIETLY should be moved out of an interface and made package protected  At TypeConstants.java:[line 261]
H V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.closeMethods is a mutable array  At TypeConstants.java:[line 262]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_WRAPPER_CLOSEABLES should be moved out of an interface and made package protected  At TypeConstants.java:[line 274]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_UTIL_ZIP_WRAPPER_CLOSEABLES should be moved out of an interface and made package protected  At TypeConstants.java:[line 296]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.OTHER_WRAPPER_CLOSEABLES should be moved out of an interface and made package protected  At TypeConstants.java:[line 310]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_IO_RESOURCE_FREE_CLOSEABLES should be moved out of an interface and made package protected  At TypeConstants.java:[line 317]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_UTIL_STREAM should be moved out of an interface and made package protected  At TypeConstants.java:[line 326]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.RESOURCE_FREE_CLOSEABLE_J_U_STREAMS should be moved out of an interface and made package protected  At TypeConstants.java:[line 327]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ONE_UTIL_STREAMEX should be moved out of an interface and made package protected  At TypeConstants.java:[line 333]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.RESOURCE_FREE_CLOSEABLE_STREAMEX should be moved out of an interface and made package protected  At TypeConstants.java:[line 334]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CHANNELS should be moved out of an interface and made package protected  At TypeConstants.java:[line 343]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.FLUENT_RESOURCE_CLASSES is a mutable array  At TypeConstants.java:[line 344]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ASSERT_CLASS should be moved out of an interface and made package protected  At TypeConstants.java:[line 364]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ASSERTIONS_CLASS should be moved out of an interface and made package protected  At TypeConstants.java:[line 365]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_ECLIPSE_CORE_RUNTIME_ASSERT should be moved out of an interface and made package protected  At TypeConstants.java:[line 366]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.IS_NOTNULL is a mutable array  At TypeConstants.java:[line 368]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JUNIT should be moved out of an interface and made package protected  At TypeConstants.java:[line 370]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.FRAMEWORK should be moved out of an interface and made package protected  At TypeConstants.java:[line 371]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JUPITER should be moved out of an interface and made package protected  At TypeConstants.java:[line 372]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.PARAMS should be moved out of an interface and made package protected  At TypeConstants.java:[line 373]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.PROVIDER is a mutable array  At TypeConstants.java:[line 374]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.API should be moved out of an interface and made package protected  At TypeConstants.java:[line 375]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JUNIT_FRAMEWORK_ASSERT should be moved out of an interface and made package protected  At TypeConstants.java:[line 376]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_JUNIT_ASSERT should be moved out of an interface and made package protected  At TypeConstants.java:[line 377]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_JUNIT_JUPITER_API_ASSERTIONS should be moved out of an interface and made package protected  At TypeConstants.java:[line 378]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ASSERT_NULL is a mutable array  At TypeConstants.java:[line 380]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ASSERT_NOTNULL is a mutable array  At TypeConstants.java:[line 381]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ASSERT_TRUE is a mutable array  At TypeConstants.java:[line 382]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ASSERT_FALSE is a mutable array  At TypeConstants.java:[line 383]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.METHOD_SOURCE should be moved out of an interface and made package protected  At TypeConstants.java:[line 385]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_JUNIT_METHOD_SOURCE should be moved out of an interface and made package protected  At TypeConstants.java:[line 386]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.VALIDATE_CLASS should be moved out of an interface and made package protected  At TypeConstants.java:[line 388]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_APACHE_COMMONS_LANG_VALIDATE should be moved out of an interface and made package protected  At TypeConstants.java:[line 389]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_APACHE_COMMONS_LANG3_VALIDATE should be moved out of an interface and made package protected  At TypeConstants.java:[line 390]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_ECLIPSE_JDT_INTERNAL_COMPILER_LOOKUP_TYPEBINDING should be moved out of an interface and made package protected  At TypeConstants.java:[line 391]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_ECLIPSE_JDT_CORE_DOM_ITYPEBINDING should be moved out of an interface and made package protected  At TypeConstants.java:[line 392]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.IS_TRUE is a mutable array  At TypeConstants.java:[line 395]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.NOT_NULL is a mutable array  At TypeConstants.java:[line 396]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.COM_GOOGLE_COMMON_BASE_PRECONDITIONS should be moved out of an interface and made package protected  At TypeConstants.java:[line 398]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CHECK_NOT_NULL is a mutable array  At TypeConstants.java:[line 401]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CHECK_ARGUMENT is a mutable array  At TypeConstants.java:[line 402]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CHECK_STATE is a mutable array  At TypeConstants.java:[line 403]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.REQUIRE_NON_NULL is a mutable array  At TypeConstants.java:[line 406]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.INJECT_PACKAGE should be moved out of an interface and made package protected  At TypeConstants.java:[line 409]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.INJECT_TYPE should be moved out of an interface and made package protected  At TypeConstants.java:[line 410]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVAX_ANNOTATION_INJECT_INJECT should be moved out of an interface and made package protected  At TypeConstants.java:[line 411]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.COM_GOOGLE_INJECT_INJECT should be moved out of an interface and made package protected  At TypeConstants.java:[line 412]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.OPTIONAL is a mutable array  At TypeConstants.java:[line 414]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.IS_INSTANCE is a mutable array  At TypeConstants.java:[line 418]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.NON_NULL is a mutable array  At TypeConstants.java:[line 420]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.IS_NULL is a mutable array  At TypeConstants.java:[line 421]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_UTIL_MAP should be moved out of an interface and made package protected  At TypeConstants.java:[line 424]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.GET should be moved out of an interface and made package protected  At TypeConstants.java:[line 425]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.REMOVE should be moved out of an interface and made package protected  At TypeConstants.java:[line 426]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.REMOVE_ALL should be moved out of an interface and made package protected  At TypeConstants.java:[line 427]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CONTAINS_ALL should be moved out of an interface and made package protected  At TypeConstants.java:[line 428]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.RETAIN_ALL should be moved out of an interface and made package protected  At TypeConstants.java:[line 429]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CONTAINS_KEY should be moved out of an interface and made package protected  At TypeConstants.java:[line 430]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CONTAINS_VALUE should be moved out of an interface and made package protected  At TypeConstants.java:[line 431]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CONTAINS should be moved out of an interface and made package protected  At TypeConstants.java:[line 433]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.INDEX_OF should be moved out of an interface and made package protected  At TypeConstants.java:[line 435]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.LAST_INDEX_OF should be moved out of an interface and made package protected  At TypeConstants.java:[line 436]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.AUTOWIRED should be moved out of an interface and made package protected  At TypeConstants.java:[line 493]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.BEANS should be moved out of an interface and made package protected  At TypeConstants.java:[line 494]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.FACTORY should be moved out of an interface and made package protected  At TypeConstants.java:[line 495]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.ORG_SPRING_AUTOWIRED should be moved out of an interface and made package protected  At TypeConstants.java:[line 496]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.REQUIRED is a mutable array  At TypeConstants.java:[line 497]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.INIT is a mutable array  At TypeConstants.java:[line 525]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.CLINIT is a mutable array  At TypeConstants.java:[line 526]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_SWITCH_ENUM_TABLE should be moved out of an interface and made package protected  At TypeConstants.java:[line 527]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_ENUM_VALUES should be moved out of an interface and made package protected  At TypeConstants.java:[line 528]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_ASSERT_DISABLED should be moved out of an interface and made package protected  At TypeConstants.java:[line 529]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_CLASS should be moved out of an interface and made package protected  At TypeConstants.java:[line 530]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_OUTER_LOCAL_PREFIX should be moved out of an interface and made package protected  At TypeConstants.java:[line 531]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_ENCLOSING_INSTANCE_PREFIX is a mutable array  At TypeConstants.java:[line 532]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_ACCESS_METHOD_PREFIX should be moved out of an interface and made package protected  At TypeConstants.java:[line 533]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_ENUM_CONSTANT_INITIALIZATION_METHOD_PREFIX should be moved out of an interface and made package protected  At TypeConstants.java:[line 534]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.SYNTHETIC_STATIC_FACTORY should be moved out of an interface and made package protected  At TypeConstants.java:[line 535]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DEFAULT_LOCATION__PARAMETER is a mutable array  At TypeConstants.java:[line 538]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DEFAULT_LOCATION__RETURN_TYPE is a mutable array  At TypeConstants.java:[line 539]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DEFAULT_LOCATION__FIELD is a mutable array  At TypeConstants.java:[line 540]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DEFAULT_LOCATION__TYPE_ARGUMENT is a mutable array  At TypeConstants.java:[line 541]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DEFAULT_LOCATION__TYPE_PARAMETER is a mutable array  At TypeConstants.java:[line 542]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DEFAULT_LOCATION__TYPE_BOUND is a mutable array  At TypeConstants.java:[line 543]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.DEFAULT_LOCATION__ARRAY_CONTENTS is a mutable array  At TypeConstants.java:[line 544]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.PACKAGE_INFO_NAME is a mutable array  At TypeConstants.java:[line 548]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.MODULE_INFO_NAME is a mutable array  At TypeConstants.java:[line 549]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.MODULE_INFO_FILE_NAME is a mutable array  At TypeConstants.java:[line 551]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.MODULE_INFO_CLASS_NAME is a mutable array  At TypeConstants.java:[line 552]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JAVA_BASE is a mutable array  At TypeConstants.java:[line 556]
M V MS: org.eclipse.jdt.internal.compiler.lookup.TypeConstants.JDK_INTERNAL_VALUEBASED should be moved out of an interface and made package protected  At TypeConstants.java:[line 559]
M V MS: org.apache.jasper.JspC.insertBefore is a mutable collection which should be package protected  At JspC.java:[line 155]
M V MS: org.apache.tomcat.util.buf.StringCache.byteEnabled should be package protected  At StringCache.java:[line 45]
M V MS: org.apache.tomcat.util.buf.StringCache.charEnabled should be package protected  At StringCache.java:[line 49]
M V MS: org.apache.tomcat.util.buf.StringCache.trainThreshold should be package protected  At StringCache.java:[line 53]
M V MS: org.apache.tomcat.util.buf.StringCache.cacheSize should be package protected  At StringCache.java:[line 57]
M V MS: org.apache.tomcat.util.buf.StringCache.bcStats is a mutable collection which should be package protected  At StringCache.java:[line 69]
M V MS: org.apache.tomcat.util.buf.StringCache.bcCount should be package protected  At StringCache.java:[line 76]
M V MS: org.apache.tomcat.util.buf.StringCache.ccStats is a mutable collection which should be package protected  At StringCache.java:[line 88]
M V MS: org.apache.tomcat.util.buf.StringCache.ccCount should be package protected  At StringCache.java:[line 95]
M V MS: org.apache.tomcat.util.buf.StringCache.accessCount should be package protected  At StringCache.java:[line 107]
M V MS: org.apache.tomcat.util.buf.StringCache.hitCount should be package protected  At StringCache.java:[line 113]
M V MS: org.apache.catalina.tribes.group.interceptors.TcpFailureDetector.TCP_FAIL_DETECT should be package protected  At TcpFailureDetector.java:[line 68]
M V MS: org.apache.catalina.tribes.group.interceptors.TcpPingInterceptor.TCP_PING_DATA should be package protected  At TcpPingInterceptor.java:[line 47]
M V MS: org.apache.catalina.tribes.transport.Constants.ACK_DATA is a mutable array  At Constants.java:[line 36]
M V MS: org.apache.catalina.tribes.transport.Constants.FAIL_ACK_DATA is a mutable array  At Constants.java:[line 37]
M V MS: org.apache.catalina.tribes.transport.Constants.ACK_COMMAND is a mutable array  At Constants.java:[line 38]
M V MS: org.apache.catalina.tribes.transport.Constants.FAIL_ACK_COMMAND is a mutable array  At Constants.java:[line 39]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.ReadManager.readingThreads; locked 50% of time  Unsynchronized access at ReadManager.java:[line 65]
M M IS: Inconsistent synchronization of org.apache.catalina.tribes.transport.nio.NioSender.writebuf; locked 66% of time  Unsynchronized access at NioSender.java:[line 210]
M M IS: Inconsistent synchronization of org.apache.catalina.core.StandardWrapper.swallowOutput; locked 85% of time  Unsynchronized access at StandardWrapper.java:[line 454]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.ReadManager.caughtException; locked 50% of time  Unsynchronized access at ReadManager.java:[line 67]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.ProcessTaskManager.processingThread; locked 77% of time  Unsynchronized access at ProcessTaskManager.java:[line 117]
M M IS: Inconsistent synchronization of org.apache.catalina.tribes.group.GroupChannel.utilityExecutor; locked 62% of time  Unsynchronized access at GroupChannel.java:[line 565]
M M IS: Inconsistent synchronization of org.apache.catalina.ha.authenticator.ClusterSingleSignOn.cluster; locked 66% of time  Unsynchronized access at ClusterSingleSignOn.java:[line 63]
M M IS: Inconsistent synchronization of org.apache.jasper.compiler.JspConfig.defaultIsELIgnored; locked 66% of time  Unsynchronized access at JspConfig.java:[line 329]
M M IS: Inconsistent synchronization of org.apache.catalina.core.StandardWrapper.servletClass; locked 55% of time  Unsynchronized access at StandardWrapper.java:[line 503]
M M IS: Inconsistent synchronization of org.apache.jasper.compiler.JspConfig.defaultDeferedSyntaxAllowedAsLiteral; locked 66% of time  Unsynchronized access at JspConfig.java:[line 332]
M M IS: Inconsistent synchronization of org.apache.tomcat.dbcp.pool2.impl.SoftReferenceObjectPool.createCount; locked 80% of time  Unsynchronized access at SoftReferenceObjectPool.java:[line 445]
M M IS: Inconsistent synchronization of org.apache.catalina.tribes.transport.nio.NioSender.dataChannel; locked 54% of time  Unsynchronized access at NioSender.java:[line 203]
M M IS: Inconsistent synchronization of org.apache.catalina.tribes.membership.MemberImpl.dataPkg; locked 81% of time  Unsynchronized access at MemberImpl.java:[line 407]
M M IS: Inconsistent synchronization of org.apache.catalina.core.StandardWrapper.unloadDelay; locked 50% of time  Unsynchronized access at StandardWrapper.java:[line 455]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.ReadManager.sleepingThreadCount; locked 83% of time  Unsynchronized access at ReadManager.java:[line 76]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.ProcessTaskManager.unitIndex; locked 75% of time  Unsynchronized access at ProcessTaskManager.java:[line 120]
M M IS: Inconsistent synchronization of org.apache.catalina.tribes.transport.ReplicationTransmitter.oname; locked 75% of time  Unsynchronized access at ReplicationTransmitter.java:[line 80]
M M IS: Inconsistent synchronization of org.apache.catalina.core.StandardContext.cookieProcessor; locked 50% of time  Unsynchronized access at StandardContext.java:[line 1048]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.ReadManager.nextFileToRead; locked 83% of time  Unsynchronized access at ReadManager.java:[line 138]
M M IS: Inconsistent synchronization of org.apache.catalina.authenticator.AuthenticatorBase.sessionIdGenerator; locked 85% of time  Unsynchronized access at AuthenticatorBase.java:[line 1179]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.ReadManager.units; locked 75% of time  Unsynchronized access at ReadManager.java:[line 66]
M M IS: Inconsistent synchronization of org.apache.catalina.ha.session.JvmRouteBinderValve.cluster; locked 60% of time  Unsynchronized access at JvmRouteBinderValve.java:[line 249]
M M IS: Inconsistent synchronization of org.apache.catalina.valves.HealthCheckValve.context; locked 50% of time  Unsynchronized access at HealthCheckValve.java:[line 92]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.batch.ClasspathJep247.packageCache; locked 80% of time  Unsynchronized access at ClasspathJep247.java:[line 207]
M M IS: Inconsistent synchronization of org.apache.catalina.core.StandardWrapper.multipartConfigElement; locked 50% of time  Unsynchronized access at StandardWrapper.java:[line 1512]
M M IS: Inconsistent synchronization of org.apache.catalina.tribes.group.ChannelCoordinator.membershipService; locked 68% of time  Unsynchronized access at ChannelCoordinator.java:[line 78]
M M IS: Inconsistent synchronization of org.apache.catalina.tribes.transport.nio.NioSender.socketChannel; locked 62% of time  Unsynchronized access at NioSender.java:[line 203]
H M MSF: org.apache.catalina.manager.host.HostManagerServlet.engine is a mutable servlet field  Unsynchronized access at HostManagerServlet.java:[line 161]
M M IS: Inconsistent synchronization of org.apache.catalina.authenticator.SingleSignOn.engine; locked 40% of time  Unsynchronized access at SingleSignOn.java:[line 436]
M M IS: Inconsistent synchronization of org.apache.tomcat.dbcp.pool2.impl.SoftReferenceObjectPool.numActive; locked 87% of time  Unsynchronized access at SoftReferenceObjectPool.java:[line 441]
M M IS: Inconsistent synchronization of org.eclipse.jdt.internal.compiler.batch.ClasspathJar.packageCache; locked 94% of time  Unsynchronized access at ClasspathJar.java:[line 296]
M M IS: Inconsistent synchronization of org.apache.tomcat.dbcp.dbcp2.BasicDataSource.closed; locked 66% of time  Unsynchronized access at BasicDataSource.java:[line 509]
M M IS: Inconsistent synchronization of org.apache.catalina.ha.session.DeltaManager.receiverQueue; locked 75% of time  Unsynchronized access at DeltaManager.java:[line 872]
The following errors occurred during analysis:
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindNullDeref
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.RedundantConditions
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindSelfComparison2
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.LoadOfKnownNullValue
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.DumbMethodInvocations
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindUselessObjects
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindRefComparison
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindInconsistentSync2
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindJSR166LockMonitorenter
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindDeadLocalStores
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Failure examining basic blocks in Duplicate Branches detector
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
  Exception analyzing org.apache.jasper.compiler.PageInfo using detector edu.umd.cs.findbugs.detect.FindUnrelatedTypesInGenericContainer
    org.apache.bcel.classfile.ClassFormatException: Invalid signature: Ljava/util/Collections$UnmodifiableRandomAccessList
      At org.apache.bcel.classfile.Utility.typeSignatureToString(Utility.java:997)
      At org.apache.bcel.generic.Type.getType(Type.java:215)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.getType(TypeFrameModelingVisitor.java:399)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.modelFieldLoad(TypeFrameModelingVisitor.java:361)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.visitGETSTATIC(TypeFrameModelingVisitor.java:346)
      At org.apache.bcel.generic.GETSTATIC.accept(GETSTATIC.java:76)
      At edu.umd.cs.findbugs.ba.AbstractFrameModelingVisitor.analyzeInstruction(AbstractFrameModelingVisitor.java:84)
      At edu.umd.cs.findbugs.ba.type.TypeFrameModelingVisitor.analyzeInstruction(TypeFrameModelingVisitor.java:196)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:406)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transferInstruction(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.AbstractDataflowAnalysis.transfer(AbstractDataflowAnalysis.java:136)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:414)
      At edu.umd.cs.findbugs.ba.type.TypeAnalysis.transfer(TypeAnalysis.java:86)
      At edu.umd.cs.findbugs.ba.Dataflow.execute(Dataflow.java:378)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:83)
      At edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory.analyze(TypeDataflowFactory.java:43)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:160)
      At edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory.analyze(CFGFactory.java:65)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.analyzeMethod(AnalysisCache.java:368)
      At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getMethodAnalysis(AnalysisCache.java:321)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysis(ClassContext.java:1010)
      At edu.umd.cs.findbugs.ba.ClassContext.getMethodAnalysisNoDataflowAnalysisException(ClassContext.java:995)
      At edu.umd.cs.findbugs.ba.ClassContext.getCFG(ClassContext.java:301)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.analyzeMethod(FindUseOfNonSerializableValue.java:143)
      At edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue.visitClassContext(FindUseOfNonSerializableValue.java:95)
      At edu.umd.cs.findbugs.DetectorToDetector2Adapter.visitClass(DetectorToDetector2Adapter.java:76)
      At edu.umd.cs.findbugs.FindBugs2.lambda$analyzeApplication$1(FindBugs2.java:1108)
      At java.util.concurrent.FutureTask.run(FutureTask.java:266)
      At edu.umd.cs.findbugs.CurrentThreadExecutorService.execute(CurrentThreadExecutorService.java:86)
      At java.util.concurrent.AbstractExecutorService.invokeAll(AbstractExecutorService.java:238)
      At edu.umd.cs.findbugs.FindBugs2.analyzeApplication(FindBugs2.java:1118)
      At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:309)
      At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:395)
      At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1231)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:106)
      At edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
The following classes needed for analysis were missing:
  jakarta.mail.Authenticator
  javax.lang.model.element.ModuleElement$ExportsDirective
  javax.lang.model.element.ModuleElement$OpensDirective
  javax.lang.model.element.ModuleElement$ProvidesDirective
  javax.lang.model.element.ModuleElement$RequiresDirective
  javax.lang.model.element.ModuleElement$UsesDirective
  javax.lang.model.element.ModuleElement
  javax.lang.model.element.RecordComponentElement
  jakarta.transaction.Synchronization
  jakarta.mail.PasswordAuthentication
  jakarta.mail.Session
  jakarta.transaction.TransactionManager
  jakarta.transaction.TransactionSynchronizationRegistry
  jakarta.ejb.EJB
  jakarta.xml.ws.WebServiceRef
  jakarta.persistence.PersistenceContext
  jakarta.persistence.PersistenceUnit
  jakarta.transaction.Transaction
  javax.lang.model.element.ModuleElement$DirectiveKind
  javax.lang.model.element.ModuleElement$DirectiveVisitor
  javax.lang.model.util.Elements$Origin
  javax.lang.model.element.ModuleElement$Directive
  javax.wsdl.Port
  javax.wsdl.factory.WSDLFactory
  javax.wsdl.xml.WSDLReader
  javax.wsdl.Definition
  javax.wsdl.Service
  javax.wsdl.extensions.soap.SOAPAddress
  org.eclipse.jdt.core.index.JavaIndexer
  org.eclipse.jdt.core.IType
  org.eclipse.jdt.core.util.IClassFileReader
  org.eclipse.jdt.core.ToolFactory
  org.eclipse.jdt.core.util.IMethodInfo
  org.eclipse.jdt.core.util.ICodeAttribute
  jakarta.mail.internet.MimePart
  jakarta.mail.internet.MimeMessage
  jakarta.mail.internet.InternetAddress
  jakarta.mail.internet.MimePartDataSource
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$PackageExportInfo
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$ServicesInfo
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$ModuleInfo
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$ParameterInfo
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo
  org.eclipse.jdt.internal.compiler.ISourceElementRequestor$RequiresInfo
  jakarta.transaction.Status
  jakarta.transaction.RollbackException
  jakarta.transaction.SystemException
  org.eclipse.jdt.core.JavaModelException
  javax.wsdl.extensions.ExtensibilityElement

