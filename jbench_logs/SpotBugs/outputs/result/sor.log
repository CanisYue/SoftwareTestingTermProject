Unexpected problem occured during version sanity check
Reported exception:
java.lang.AbstractMethodError: org.apache.logging.slf4j.SLF4JServiceProvider.getRequestedApiVersion()Ljava/lang/String;
	at org.slf4j.LoggerFactory.versionSanityCheck(LoggerFactory.java:297)
	at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:141)
	at org.slf4j.LoggerFactory.getProvider(LoggerFactory.java:421)
	at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:407)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:356)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:382)
	at edu.umd.cs.findbugs.CheckBcel.<clinit>(CheckBcel.java:40)
	at edu.umd.cs.findbugs.LaunchAppropriateUI.launch(LaunchAppropriateUI.java:99)
	at edu.umd.cs.findbugs.LaunchAppropriateUI.main(LaunchAppropriateUI.java:198)
M V EI: benchmarks.EDU.oswego.cs.dl.util.concurrent.FutureResult.getException() may expose internal representation by returning FutureResult.exception_  At FutureResult.java:[line 166]
M B Eq: benchmarks.EDU.oswego.cs.dl.util.concurrent.ClockDaemon$TaskNode defines compareTo(Object) and uses Object.equals()  At ClockDaemon.java:[lines 81-83]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedChar implements Cloneable but does not define or use clone method  At SynchronizedChar.java:[lines 31-166]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTask$Seq(FJTask[]) may expose internal representation by storing an externally mutable object into FJTask$Seq.tasks  At FJTask.java:[line 412]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedDouble implements Cloneable but does not define or use clone method  At SynchronizedDouble.java:[lines 31-168]
H D FE: Test for floating point equality in benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedDouble.commit(double, double)  At SynchronizedDouble.java:[line 68]
M P Bx: new benchmarks.EDU.oswego.cs.dl.util.concurrent.SemaphoreControlledChannel(int, Class) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead  At SemaphoreControlledChannel.java:[line 68]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedFloat implements Cloneable but does not define or use clone method  At SynchronizedFloat.java:[lines 31-167]
H D FE: Test for floating point equality in benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedFloat.commit(float, float)  At SynchronizedFloat.java:[line 68]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTask$Par2(FJTask, FJTask) may expose internal representation by storing an externally mutable object into FJTask$Par2.snd  At FJTask.java:[line 515]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTask$Par2(FJTask, FJTask) may expose internal representation by storing an externally mutable object into FJTask$Par2.fst  At FJTask.java:[line 514]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTask$Seq2(FJTask, FJTask) may expose internal representation by storing an externally mutable object into FJTask$Seq2.fst  At FJTask.java:[line 486]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTask$Seq2(FJTask, FJTask) may expose internal representation by storing an externally mutable object into FJTask$Seq2.snd  At FJTask.java:[line 487]
M P Dm: benchmarks.EDU.oswego.cs.dl.util.concurrent.PropertyChangeMulticaster.firePropertyChange(String, boolean, boolean) invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead  At PropertyChangeMulticaster.java:[line 383]
M P Bx: benchmarks.EDU.oswego.cs.dl.util.concurrent.PropertyChangeMulticaster.firePropertyChange(String, int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead  At PropertyChangeMulticaster.java:[line 360]
M B SnVI: benchmarks.EDU.oswego.cs.dl.util.concurrent.PropertyChangeMulticaster is Serializable; consider declaring a serialVersionUID  At PropertyChangeMulticaster.java:[lines 83-459]
M M NN: Naked notify in benchmarks.EDU.oswego.cs.dl.util.concurrent.CondVar.signal()  At CondVar.java:[line 257]
M M NN: Naked notify in benchmarks.EDU.oswego.cs.dl.util.concurrent.CondVar.broadcast()  At CondVar.java:[line 262]
M M UW: Unconditional wait in benchmarks.EDU.oswego.cs.dl.util.concurrent.CondVar.await()  At CondVar.java:[line 170]
M M Wa: Wait not in loop in benchmarks.EDU.oswego.cs.dl.util.concurrent.CondVar.await()  At CondVar.java:[line 170]
M V EI: benchmarks.EDU.oswego.cs.dl.util.concurrent.ClockDaemon.getThread() may expose internal representation by returning ClockDaemon.thread_  At ClockDaemon.java:[line 267]
M P Dm: benchmarks.EDU.oswego.cs.dl.util.concurrent.VetoableChangeMulticaster.fireVetoableChange(String, boolean, boolean) invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead  At VetoableChangeMulticaster.java:[line 482]
M P Bx: benchmarks.EDU.oswego.cs.dl.util.concurrent.VetoableChangeMulticaster.fireVetoableChange(String, int, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead  At VetoableChangeMulticaster.java:[line 448]
M B SnVI: benchmarks.EDU.oswego.cs.dl.util.concurrent.VetoableChangeMulticaster is Serializable; consider declaring a serialVersionUID  At VetoableChangeMulticaster.java:[lines 119-570]
H D FE: Test for floating point equality in benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitableFloat.whenEqual(float, Runnable)  At WaitableFloat.java:[line 93]
H D FE: Test for floating point equality in benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitableFloat.whenNotEqual(float, Runnable)  At WaitableFloat.java:[line 104]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedBoolean implements Cloneable but does not define or use clone method  At SynchronizedBoolean.java:[lines 30-172]
H D FE: Test for floating point equality in benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitableDouble.whenEqual(double, Runnable)  At WaitableDouble.java:[line 93]
H D FE: Test for floating point equality in benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitableDouble.whenNotEqual(double, Runnable)  At WaitableDouble.java:[line 104]
M B Eq: benchmarks.EDU.oswego.cs.dl.util.concurrent.TimeDaemon$TaskNode defines compareTo(Object) and uses Object.equals()  At TimeDaemon.java:[lines 75-77]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedShort implements Cloneable but does not define or use clone method  At SynchronizedShort.java:[lines 31-243]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTask$Par(FJTask[]) may expose internal representation by storing an externally mutable object into FJTask$Par.tasks  At FJTask.java:[line 451]
M D RV: Return value of new StringBuilder() ignored, but method has no side effect  At Sor.java:[line 104]
M D RV: Return value of new StringBuilder() ignored, but method has no side effect  At Sor.java:[line 117]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedByte implements Cloneable but does not define or use clone method  At SynchronizedByte.java:[lines 31-242]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedInt implements Cloneable but does not define or use clone method  At SynchronizedInt.java:[lines 31-239]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.SynchronizedLong implements Cloneable but does not define or use clone method  At SynchronizedLong.java:[lines 31-241]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.SyncCollection(Collection, Sync, Sync) may expose internal representation by storing an externally mutable object into SyncCollection.c_  At SyncCollection.java:[line 230]
M M ML: Synchronization on LinkedQueue.last_ in futile attempt to guard it  At LinkedQueue.java:[line 70]
H M ML: Synchronization on LinkedQueue.head_ in futile attempt to guard it  At LinkedQueue.java:[line 85]
H C Se: The method writeObject(ObjectOutputStream) must be private to be invoked in serialization/deserialization of benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList  At CopyOnWriteArrayList.java:[lines 762-771]
H C Se: The method readObject(ObjectInputStream) must be private to be invoked in serialization/deserialization of benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList  At CopyOnWriteArrayList.java:[lines 779-789]
M M RS: benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList's readObject method is synchronized  At CopyOnWriteArrayList.java:[lines 779-789]
M B SnVI: benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList is Serializable; consider declaring a serialVersionUID  At CopyOnWriteArrayList.java:[lines 92-1019]
M B CN: Class benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArraySet implements Cloneable but does not define or use clone method  At CopyOnWriteArraySet.java:[lines 74-100]
M M UG: benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList.get(int) is unsynchronized, benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList.set(int, Object) is synchronized  At CopyOnWriteArrayList.java:[lines 369-371]
M M Wa: Wait not in loop in benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup.checkActive(FJTaskRunner, long)  At FJTaskRunnerGroup.java:[line 541]
M V EI: benchmarks.EDU.oswego.cs.dl.util.concurrent.SyncMap.entrySet() may expose internal representation by returning SyncMap.entrySet_  At SyncMap.java:[line 288]
M V EI: benchmarks.EDU.oswego.cs.dl.util.concurrent.SyncMap.values() may expose internal representation by returning SyncMap.values_  At SyncMap.java:[line 301]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.SyncMap(Map, Sync, Sync) may expose internal representation by storing an externally mutable object into SyncMap.c_  At SyncMap.java:[line 76]
M V EI: benchmarks.EDU.oswego.cs.dl.util.concurrent.SyncMap.keySet() may expose internal representation by returning SyncMap.keySet_  At SyncMap.java:[line 276]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.QueuedExecutor(Channel) may expose internal representation by storing an externally mutable object into QueuedExecutor.queue_  At QueuedExecutor.java:[line 102]
M V EI: benchmarks.EDU.oswego.cs.dl.util.concurrent.QueuedExecutor.getThread() may expose internal representation by returning QueuedExecutor.thread_  At QueuedExecutor.java:[line 52]
H M TLW: wait() with two locks held in benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue.put(Object)  At BoundedLinkedQueue.java:[line 307]
H M TLW: wait() with two locks held in benchmarks.EDU.oswego.cs.dl.util.concurrent.BoundedLinkedQueue.offer(Object, long)  At BoundedLinkedQueue.java:[line 343]
H M ML: Synchronization on BoundedLinkedQueue.head_ in futile attempt to guard it  At BoundedLinkedQueue.java:[line 198]
M M ML: Synchronization on BoundedLinkedQueue.last_ in futile attempt to guard it  At BoundedLinkedQueue.java:[line 288]
M V EI: benchmarks.EDU.oswego.cs.dl.util.concurrent.TimeDaemon.getThread() may expose internal representation by returning TimeDaemon.thread_  At TimeDaemon.java:[line 220]
M D BC: Questionable cast from Collection to abstract class java.util.List in benchmarks.EDU.oswego.cs.dl.util.concurrent.SyncList.baseList()  At SyncList.java:[line 59]
M M NN: Naked notify in benchmarks.EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$ReaderLock.signalWaiters()  At WriterPreferenceReadWriteLock.java:[line 191]
M D BC: Questionable cast from Collection to abstract class java.util.SortedSet in benchmarks.EDU.oswego.cs.dl.util.concurrent.SyncSortedSet.baseSortedSet()  At SyncSortedSet.java:[line 56]
M D NP: Load of known null value in benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue.insert(Object)  At WaitFreeQueue.java:[line 147]
M M NN: Naked notify in benchmarks.EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$WriterLock.signalWaiters()  At WriterPreferenceReadWriteLock.java:[line 267]
M M VO: Increment of volatile field benchmarks.EDU.oswego.cs.dl.util.concurrent.PooledExecutor.poolSize_ in benchmarks.EDU.oswego.cs.dl.util.concurrent.PooledExecutor.addThread(Runnable)  At PooledExecutor.java:[line 470]
M M VO: Increment of volatile field benchmarks.EDU.oswego.cs.dl.util.concurrent.PooledExecutor.poolSize_ in benchmarks.EDU.oswego.cs.dl.util.concurrent.PooledExecutor.workerDone(PooledExecutor$Worker)  At PooledExecutor.java:[line 580]
M V EI2: new benchmarks.EDU.oswego.cs.dl.util.concurrent.PooledExecutor(Channel, int) may expose internal representation by storing an externally mutable object into PooledExecutor.handOff_  At PooledExecutor.java:[line 401]
M P UrF: Unread field: benchmarks.sor.sor_first_row_odd.M  At Sor.java:[line 128]
M V MS: benchmarks.sor.Sor.iterations should be package protected  At Sor.java:[line 18]
M V MS: benchmarks.sor.Sor.black_ should be both final and package protected  At Sor.java:[line 21]
M V MS: benchmarks.sor.Sor.red_ should be both final and package protected  At Sor.java:[line 22]
M V MS: benchmarks.sor.Sor.nprocs should be package protected  At Sor.java:[line 24]
M V MS: benchmarks.sor.Sor.barrier should be package protected  In Sor.java
M M IS: Inconsistent synchronization of benchmarks.EDU.oswego.cs.dl.util.concurrent.WaitFreeQueue$Node.next; locked 81% of time  Unsynchronized access at WaitFreeQueue.java:[line 184]
M M IS: Inconsistent synchronization of benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunner.deq; locked 67% of time  Unsynchronized access at FJTaskRunner.java:[line 926]
M M IS: Inconsistent synchronization of benchmarks.EDU.oswego.cs.dl.util.concurrent.FJTaskRunnerGroup.entries; locked 66% of time  Unsynchronized access at FJTaskRunnerGroup.java:[line 410]
M M IS: Inconsistent synchronization of benchmarks.EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList.array_; locked 98% of time  Unsynchronized access at CopyOnWriteArrayList.java:[line 1059]
The following classes needed for analysis were missing:
  javato.activetesting.analysis.ObserverForActiveTesting
